{"ast":null,"code":"import React from\"react\";import{Map,TileLayer}from'react-leaflet';import{MAP_DEFAULT_FOCUS_LAT,MAP_DEFAULT_FOCUS_LONG,MAP_ZOOM_LEVEL}from\"../../../../config\";import{MapMarkerProperty}from\"./MapMarkerProperty\";import{MapMarkerSight}from\"./MapMarkerSight\";export var MapView=function MapView(props){console.log(props.properties);var style={width:'100%',height:props.height};return React.createElement(Map,{style:style,center:{lat:MAP_DEFAULT_FOCUS_LAT,lng:MAP_DEFAULT_FOCUS_LONG},zoom:MAP_ZOOM_LEVEL,doubleClickZoom:false,closePopupOnClick:false,dragging:false,zoomSnap:0,zoomDelta:0.5,trackResize:false,touchZoom:false,scrollWheelZoom:false},React.createElement(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",attribution:\"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"}),props.properties.map(function(prop){return React.createElement(MapMarkerProperty,{key:\"property \"+prop.id,property:prop});}),props.sights.map(function(sight){return React.createElement(MapMarkerSight,{key:\"sight \"+sight.id,sight:sight});}));};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/maps/MapView.tsx"],"names":["React","Map","TileLayer","MAP_DEFAULT_FOCUS_LAT","MAP_DEFAULT_FOCUS_LONG","MAP_ZOOM_LEVEL","MapMarkerProperty","MapMarkerSight","MapView","props","console","log","properties","style","width","height","lat","lng","map","prop","id","sights","sight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,SAAd,KAA8B,eAA9B,CAEA,OAASC,qBAAT,CAAgCC,sBAAhC,CAAwDC,cAAxD,KAA8E,oBAA9E,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,OAASC,cAAT,KAA+B,kBAA/B,CAQA,MAAO,IAAMC,CAAAA,OAAwB,CAAG,QAA3BA,CAAAA,OAA2B,CAACC,KAAD,CAAW,CAE9CC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB,EACA,GAAMC,CAAAA,KAAK,CAAG,CACTC,KAAK,CAAE,MADE,CAETC,MAAM,CAAEN,KAAK,CAACM,MAFL,CAAd,CAKF,MACK,qBAAC,GAAD,EAAK,KAAK,CAAEF,KAAZ,CACA,MAAM,CAAG,CAACG,GAAG,CAAEb,qBAAN,CAA6Bc,GAAG,CAAEb,sBAAlC,CADT,CAEA,IAAI,CAAGC,cAFP,CAGA,eAAe,CAAG,KAHlB,CAIA,iBAAiB,CAAG,KAJpB,CAKA,QAAQ,CAAE,KALV,CAMA,QAAQ,CAAG,CANX,CAOA,SAAS,CAAG,GAPZ,CAQA,WAAW,CAAG,KARd,CASA,SAAS,CAAG,KATZ,CAUA,eAAe,CAAG,KAVlB,EAYE,oBAAC,SAAD,EACK,GAAG,CAAC,oDADT,CAEK,WAAW,CAAC,0EAFjB,EAZF,CAgBQI,KAAK,CAACG,UAAN,CAAiBM,GAAjB,CAAqB,SAACC,IAAD,CAAU,CACtB,MAAO,qBAAC,iBAAD,EAAmB,GAAG,CAAE,YAAYA,IAAI,CAACC,EAAzC,CAA6C,QAAQ,CAAED,IAAvD,EAAP,CACJ,CAFL,CAhBR,CAoBQV,KAAK,CAACY,MAAN,CAAaH,GAAb,CAAiB,SAACI,KAAD,CAAW,CACnB,MAAO,qBAAC,cAAD,EAAgB,GAAG,CAAE,SAASA,KAAK,CAACF,EAApC,CAAwC,KAAK,CAAEE,KAA/C,EAAP,CACJ,CAFL,CApBR,CADL,CA2BF,CAnCM","sourcesContent":["import React from \"react\";\nimport { Map, TileLayer} from 'react-leaflet'\nimport { Property, Sight } from \"../../../../generated/graphql\";\nimport { MAP_DEFAULT_FOCUS_LAT, MAP_DEFAULT_FOCUS_LONG, MAP_ZOOM_LEVEL } from \"../../../../config\";\nimport { MapMarkerProperty } from \"./MapMarkerProperty\";\nimport { MapMarkerSight } from \"./MapMarkerSight\";\n\ninterface Props {\n     properties: Property[]\n     sights: Sight[]\n     height: string\n}\n\nexport const MapView: React.FC<Props> = (props) => {\n\n     console.log(props.properties)\n     const style = {\n          width: '100%',\n          height: props.height\n     };\n\n   return (\n        <Map style={style} \n        center= {{lat: MAP_DEFAULT_FOCUS_LAT ,lng: MAP_DEFAULT_FOCUS_LONG}}\n        zoom= {MAP_ZOOM_LEVEL}\n        doubleClickZoom= {false} \n        closePopupOnClick= {false} \n        dragging={false} \n        zoomSnap= {0} \n        zoomDelta= {0.5} \n        trackResize= {false}\n        touchZoom= {false}\n        scrollWheelZoom= {false}\n        >\n          <TileLayer\n               url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n               attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />       \n               {props.properties.map((prop) => {\n                         return <MapMarkerProperty key={\"property \"+prop.id} property={prop}/>  \n                    }\n               )}\n               {props.sights.map((sight) => {\n                         return <MapMarkerSight key={\"sight \"+sight.id} sight={sight}/>  \n                    }\n               )}            \n        </Map>\n   )\n}"]},"metadata":{},"sourceType":"module"}