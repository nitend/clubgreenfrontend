{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Routes } from './Routes';\nimport { setAccessToken } from './accessToken';\nexport const App = () => {\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/refresh_token\", {\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(async x => {\n      const {\n        accessToken\n      } = x.json();\n      setAccessToken(accessToken);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"loading ...\");\n  }\n\n  return React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/App.tsx"],"names":["React","useState","useEffect","Routes","setAccessToken","App","loading","setLoading","fetch","method","credentials","then","x","accessToken","json"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAMA,OAAO,MAAMC,GAAoB,GAAG,MAAM;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAE,qCAAF,EAAyC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,WAAW,EAAE;AAF6B,KAAzC,CAAL,CAGGC,IAHH,CAGQ,MAAMC,CAAN,IAAW;AACf,YAAM;AAACC,QAAAA;AAAD,UAAgBD,CAAC,CAACE,IAAF,EAAtB;AACAV,MAAAA,cAAc,CAACS,WAAD,CAAd;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACC,KAPL;AAUH,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAGD,OAAH,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AAGH;;AAED,SAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAvBM","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Routes } from './Routes'\nimport { setAccessToken } from './accessToken';\n\ninterface Props {\n    \n}\n\nexport const App: React.FC<Props> = () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch (\"http://localhost:4000/refresh_token\", {\n            method: \"POST\",\n            credentials: \"include\"\n        }).then(async x => {\n            const {accessToken} = x.json();\n            setAccessToken(accessToken)\n            setLoading(false)\n            }\n        );\n        \n    }, [])\n\n    if(loading){\n        return <div>\n            loading ...\n        </div>;\n    }\n\n    return <Routes/>\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}