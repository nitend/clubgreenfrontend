{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/RegisterForm.tsx\";\nimport React from \"react\";\nimport { useRegisterMutation } from \"../../../../generated/graphql\";\nimport { TextField, Button, Checkbox, Typography } from \"@material-ui/core\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\nexport const RegisterForm = () => {\n  const history = useHistory();\n  const [Register] = useRegisterMutation();\n\n  const loginFunc = async values => {\n    const response = await Register({\n      variables: {\n        email: values.email,\n        password: values.password,\n        username: \"\"\n      }\n    });\n\n    if (response && response.data) {\n      history.push('/');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      acceptTerms: false\n    },\n    onSubmit: loginFunc,\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().min(8).required(\"Required\"),\n      acceptTerms: Yup.bool().oneOf([true]).required()\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: errors.email && touched.email ? true : false,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.password && touched.password ? \"Gib eine g√ºltige Email-Adresse an.\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: errors.password && touched.password ? true : false,\n      fullWidth: true,\n      id: \"password\",\n      label: \"Passwort\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.password && touched.password ? \"Dein Passwort muss mindestens 8 Zeichen lang sein.\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        fontSize: '14px',\n        margin: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: values.acceptTerms,\n      required: true,\n      id: \"acceptTerms\",\n      onChange: handleChange,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" Bitte best\\xE4tige unsere \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Nutzungsbedingungen\"), \" und die \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Erkl\\xE4rung zum Datenschutz\"), \".\"), React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        margin: 'auto',\n        display: 'block',\n        marginTop: '24px'\n      },\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"anmelden\"));\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/RegisterForm.tsx"],"names":["React","useRegisterMutation","TextField","Button","Checkbox","Typography","Formik","Yup","useHistory","RegisterForm","history","Register","loginFunc","values","response","variables","email","password","username","data","push","maxWidth","margin","acceptTerms","object","shape","string","required","min","bool","oneOf","props","touched","errors","handleChange","handleBlur","handleSubmit","fontSize","display","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRegisterMutation } from \"../../../../generated/graphql\";\n\nimport { TextField, Button, Checkbox, Typography} from \"@material-ui/core\";\nimport {Formik} from 'formik'\nimport * as Yup from 'yup'\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n\n}\n\nexport const RegisterForm: React.FC<Props> = () => {\n    const history = useHistory();\n    const [Register] = useRegisterMutation()\n\n    const loginFunc = async (values: {email: string, password: string}) => {\n        const response = await Register({\n            variables: {\n                email: values.email, \n                password: values.password,\n                username: \"\"\n            }\n        })\n        \n        if(response && response.data){\n            history.push('/')\n        }\n    }\n\n    return (\n        <div style={{maxWidth: '400px', margin: 'auto'}}>\n            <Formik initialValues={{\n                email: \"\",\n                password: \"\",\n                acceptTerms: false\n            }} \n            onSubmit={loginFunc}\n            validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email()\n                  .required(\"Required\"),\n                  password: Yup.string().min(8).required(\"Required\"),\n                  acceptTerms: Yup.bool().oneOf([true]).required()\n              })} >\n                {props => {\n                const {\n                values,\n                touched,\n                errors,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                } = props;\n                return (\n                    <form onSubmit={handleSubmit}>\n                            <TextField \n                                error={errors.email && touched.email\n                                    ? true\n                                    : false\n                                }\n                                fullWidth={true}\n                                id=\"email\" \n                                label=\"Email\"\n                                value={values.email} \n                                onChange={handleChange} \n                                onBlur={handleBlur}\n                                helperText={errors.password && touched.password \n                                    ? \"Gib eine g√ºltige Email-Adresse an.\"\n                                    : \"\"\n                                }\n                            />\n                            <TextField \n                                error={errors.password && touched.password\n                                    ? true\n                                    : false\n                                }\n                                fullWidth={true}\n                                id=\"password\" \n                                label=\"Passwort\"\n                                type=\"password\"\n                                value={values.password} \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.password && touched.password \n                                    ? \"Dein Passwort muss mindestens 8 Zeichen lang sein.\"\n                                    : \"\"\n                                }\n                            />\n                            <Typography style={{fontSize: '14px',margin: '8px'}}>\n                            <Checkbox\n                                    checked={values.acceptTerms}\n                                    required={true}\n                                    id=\"acceptTerms\"\n                                    onChange={handleChange}\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                /> Bitte best√§tige unsere <a href=\"/\">Nutzungsbedingungen</a> und die <a href=\"/\">Erkl√§rung zum Datenschutz</a>.\n                            </Typography>\n\n                            <Button variant={\"outlined\"} style={{margin: 'auto', display: 'block', marginTop: '24px'}} type=\"submit\">anmelden</Button>                          \n                    </form>);\n            }}\n            </Formik>\n            </div>)\n};"]},"metadata":{},"sourceType":"module"}