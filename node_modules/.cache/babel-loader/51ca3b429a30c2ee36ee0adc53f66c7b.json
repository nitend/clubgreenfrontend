{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/form/Editor.tsx\";\nimport React from 'react';\nimport { EditorForm } from './EditorForm';\nimport { Container } from '@material-ui/core';\nimport { PictureUpload } from '../imagehandler/PictureUpload';\nimport { ImageList } from '../imagehandler/ImageList';\nexport const Editor = ({\n  entity,\n  entityId,\n  imageuploadurl,\n  store,\n  children\n}) => {\n  function onImageDelete(imageUrl) {\n    const newEntity = entity;\n    const index = newEntity.images.indexOf(imageUrl);\n\n    if (index >= 0) {\n      newEntity.images.slice(index, 1);\n      store(newEntity);\n    }\n  }\n\n  const imagelist = () => {\n    console.log(entity.images);\n\n    if (entity.images) {\n      return React.createElement(ImageList, {\n        imageUrlApends: entity.images,\n        onDeleteHandler: onImageDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(EditorForm, {\n    values: entity,\n    onSubmit: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), imagelist(), React.createElement(PictureUpload, {\n    url: imageuploadurl,\n    propertyId: entityId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), children);\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/form/Editor.tsx"],"names":["React","EditorForm","Container","PictureUpload","ImageList","Editor","entity","entityId","imageuploadurl","store","children","onImageDelete","imageUrl","newEntity","index","images","indexOf","slice","imagelist","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAWA,OAAO,MAAMC,MAAuB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,cAAnB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAE5F,WAASC,aAAT,CAAwBC,QAAxB,EAA0C;AACtC,UAAMC,SAAS,GAAGP,MAAlB;AACA,UAAMQ,KAAa,GAAGD,SAAS,CAACE,MAAV,CAAiBC,OAAjB,CAAyBJ,QAAzB,CAAtB;;AACA,QAAGE,KAAK,IAAI,CAAZ,EAAc;AACVD,MAAAA,SAAS,CAACE,MAAV,CAAiBE,KAAjB,CAAuBH,KAAvB,EAA8B,CAA9B;AACAL,MAAAA,KAAK,CAACI,SAAD,CAAL;AACH;AACJ;;AAED,QAAMK,SAAS,GAAG,MAAK;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACS,MAAnB;;AACA,QAAGT,MAAM,CAACS,MAAV,EAAiB;AACb,aAAO,oBAAC,SAAD;AAAW,QAAA,cAAc,EAAET,MAAM,CAACS,MAAlC;AAA0C,QAAA,eAAe,EAAEJ,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GALD;;AAQA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEL,MAApB;AAA4B,IAAA,QAAQ,EAAEG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKS,SAAS,EAFd,EAGI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEV,cAApB;AAAoC,IAAA,UAAU,EAAED,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAIKG,QAJL,CADJ;AAWH,CA9BM","sourcesContent":["import React from 'react'\nimport { EditorForm } from './EditorForm'\nimport { Container } from '@material-ui/core'\nimport { PictureUpload } from '../imagehandler/PictureUpload'\nimport { ImageList } from '../imagehandler/ImageList'\n\n\n\ninterface Props {\n    entity: any\n    entityId: number\n    imageuploadurl: string\n    store: (entity: any) => void\n}\n\nexport const Editor: React.FC<Props> = ({entity, entityId, imageuploadurl, store, children}) => {\n\n    function onImageDelete (imageUrl: string) {\n        const newEntity = entity;\n        const index: number = newEntity.images.indexOf(imageUrl);\n        if(index >= 0){\n            newEntity.images.slice(index, 1);\n            store(newEntity); \n        }\n    }\n\n    const imagelist = () =>{\n        console.log(entity.images)\n        if(entity.images){\n            return <ImageList imageUrlApends={entity.images} onDeleteHandler={onImageDelete}/>\n        }\n    } \n    \n\n    return(\n        <Container>\n            <EditorForm values={entity} onSubmit={store}/>\n            {imagelist()}\n            <PictureUpload url={imageuploadurl} propertyId={entityId}/>     \n            {children}\n        </Container>\n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}