{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import'./styles.css';import{RegisterForm}from\"./RegisterForm\";import{useRegisterMutation}from\"../../../../../generated/graphql\";import{Typography}from\"@material-ui/core\";export var RegisterFlow=function RegisterFlow(){var _useRegisterMutation=useRegisterMutation(),_useRegisterMutation2=_slicedToArray(_useRegisterMutation,1),Register=_useRegisterMutation2[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),registerComlete=_useState2[0],setregisterComlete=_useState2[1];var registerFormFinished=function registerFormFinished(values){loginFunc(values);};var loginFunc=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Register({variables:{email:values.email,password:values.password,username:\"\"}});case 2:response=_context.sent;if(response&&response.data){setregisterComlete(true);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function loginFunc(_x){return _ref.apply(this,arguments);};}();if(registerComlete){return React.createElement(Typography,null,React.createElement(\"div\",null,\"Vielen Dank\"),\"Wir haben Dir eine Email mit einem Akttivierungslink geschickt. \",React.createElement(\"br\",null),\" Bitte aktiviere noch deinen Account.\");}return React.createElement(RegisterForm,{registerFormFinished:registerFormFinished});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/register/RegisterFlow.tsx"],"names":["React","useState","RegisterForm","useRegisterMutation","Typography","RegisterFlow","Register","registerComlete","setregisterComlete","registerFormFinished","values","loginFunc","variables","email","password","username","response","data"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,cAAP,CACA,OAASC,YAAT,KAA6B,gBAA7B,CACA,OAASC,mBAAT,KAAoC,kCAApC,CACA,OAASC,UAAT,KAA2B,mBAA3B,CAOA,MAAO,IAAMC,CAAAA,YAA6B,CAAG,QAAhCA,CAAAA,YAAgC,EAAM,0BAE5BF,mBAAmB,EAFS,8DAExCG,QAFwC,wCAGDL,QAAQ,CAAC,KAAD,CAHP,wCAGxCM,eAHwC,eAGvBC,kBAHuB,eAK/C,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,MAAD,CAA+C,CACxEC,SAAS,CAACD,MAAD,CAAT,CACH,CAFD,CAIA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOD,MAAP,qJACSJ,CAAAA,QAAQ,CAAC,CAC5BM,SAAS,CAAE,CACPC,KAAK,CAAEH,MAAM,CAACG,KADP,CAEPC,QAAQ,CAAEJ,MAAM,CAACI,QAFV,CAGPC,QAAQ,CAAE,EAHH,CADiB,CAAD,CADjB,QACRC,QADQ,eASd,GAAGA,QAAQ,EAAIA,QAAQ,CAACC,IAAxB,CAA6B,CACzBT,kBAAkB,CAAC,IAAD,CAAlB,CACH,CAXa,sDAAH,kBAATG,CAAAA,SAAS,4CAAf,CAaA,GAAGJ,eAAH,CAAmB,CACf,MACI,qBAAC,UAAD,MACI,6CADJ,oEAEoE,8BAFpE,yCADJ,CAMH,CAGD,MACI,qBAAC,YAAD,EAAc,oBAAoB,CAAEE,oBAApC,EADJ,CAGH,CAnCM","sourcesContent":["import React, { useState } from \"react\";\nimport './styles.css'\nimport { RegisterForm } from \"./RegisterForm\";\nimport { useRegisterMutation } from \"../../../../../generated/graphql\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface Props {\n\n}\n\n\nexport const RegisterFlow: React.FC<Props> = () => {\n\n    const [Register] = useRegisterMutation()\n    const [registerComlete, setregisterComlete] = useState(false)\n\n    const registerFormFinished = (values: {email: string, password: string}) => {\n        loginFunc(values);\n    }\n\n    const loginFunc = async (values: {email: string, password: string}) => {\n        const response = await Register({\n            variables: {\n                email: values.email, \n                password: values.password,\n                username: \"\"\n            }\n        })\n        \n        if(response && response.data){\n            setregisterComlete(true)\n        }\n    }\n    if(registerComlete){\n        return (\n            <Typography>\n                <div>Vielen Dank</div>\n                Wir haben Dir eine Email mit einem Akttivierungslink geschickt. <br/> Bitte aktiviere noch deinen Account.\n            </Typography>\n        )\n    }\n\n\n    return (\n        <RegisterForm registerFormFinished={registerFormFinished}/>\n    )\n};"]},"metadata":{},"sourceType":"module"}