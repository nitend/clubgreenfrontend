{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/PropertyList.tsx\";\nimport React from 'react';\nimport { usePropertiesQuery } from '../../generated/graphql';\nimport { Typography, Button, Container } from '@material-ui/core';\nexport const PropertyList = Props => {\n  var _data$allProperties;\n\n  const {\n    data,\n    loading,\n    error\n  } = usePropertiesQuery();\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"loading ....\");\n  }\n\n  if (error) {\n    console.log(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"err\");\n  }\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"no data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Gartenh\\xE4user\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, (_data$allProperties = data.allProperties) === null || _data$allProperties === void 0 ? void 0 : _data$allProperties.map(x => React.createElement(\"li\", {\n    key: x.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, x.title, \",\", x.location, React.createElement(Button, {\n    key: x.id,\n    onClick: () => {\n      Props.selectPropListener(x);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Buchen\"))))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/PropertyList.tsx"],"names":["React","usePropertiesQuery","Typography","Button","Container","PropertyList","Props","data","loading","error","console","log","allProperties","map","x","id","title","location","selectPropListener"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,SAA7B,QAA6C,mBAA7C;AAQA,OAAO,MAAMC,YAA8B,GAAIC,KAAD,IAAW;AAAA;;AACrD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,kBAAkB,EAAjD;;AAGA,MAAGO,OAAH,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAGH;;AAED,MAAGC,KAAH,EAAS;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAG,CAACF,IAAJ,EAAS;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAGH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACKA,IAAI,CAACK,aADV,wDACK,oBAAoBC,GAApB,CAAyBC,CAAD,IACrB;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,CAAC,CAACE,KADP,OAEKF,CAAC,CAACG,QAFP,EAGI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH,CAAC,CAACC,EAAf;AAAmB,IAAA,OAAO,EAAE,MAAM;AAACT,MAAAA,KAAK,CAACY,kBAAN,CAAyBJ,CAAzB;AAA4B,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADH,CADL,CAJJ,CADJ,CADJ;AAsBH,CA3CM","sourcesContent":["import React from 'react'\nimport { usePropertiesQuery } from '../../generated/graphql'\nimport { Typography, Button, Container} from '@material-ui/core';\n\ninterface Props {\n    selectPropListener: any\n    propertyActive: any\n}\n\n\nexport const PropertyList:  React.FC<Props> = (Props) => {\n    const {data, loading, error} = usePropertiesQuery();\n\n\n    if(loading){\n        return <div>\n            loading ....\n        </div>\n    }\n\n    if(error){\n        console.log(error)\n        return <div>err</div>\n    }\n\n    if(!data){\n        return <div>\n            no data\n        </div>\n    }\n    \n    return (\n        <div>\n            <Container>\n                <Typography variant=\"h6\">\n                    Gartenh√§user\n                </Typography>\n                <ul>\n                    {data.allProperties?.map((x) =>   \n                        <li key={x.id}>\n                            {x.title},\n                            {x.location}\n                            <Button key={x.id} onClick={() => {Props.selectPropListener(x)}}>\n                                Buchen\n                            </Button>\n                        </li>\n\n                    )}\n                </ul>\n            </Container>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}