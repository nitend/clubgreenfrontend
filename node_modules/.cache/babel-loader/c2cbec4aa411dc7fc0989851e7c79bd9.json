{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx\";\nimport React, { useContext, useMemo, useCallback } from 'react';\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation } from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './BookingButton';\nimport { Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../StyledComponents';\nexport const MyBooking = () => {\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useMyBookingQuery();\n  const [Booking] = useCreateMyBookingMutation();\n  const [deleteBooking] = useDeleteBookingMutation();\n  const {\n    setArrivalDate,\n    setDepartureDate,\n    selectedProperty,\n    arrivalDate,\n    departureDate,\n    isActive,\n    setIsActive\n  } = useContext(BookingContext);\n\n  if (loading) {\n    console.log(\"laoding\" + loading);\n  }\n\n  if (error) {\n    console.log(\"error\" + error);\n  }\n  /*\n  const booking = data?.myBooking;\n  var bookingArrival: number = 0;\n  var bookingDeparture: number = 0;\n  var property: Property | undefined = undefined;\n  if(booking && booking?.property) {\n      bookingArrival = booking.from;\n      bookingDeparture = booking.to;\n      property = booking.property\n  }\n  useMemo(() => {      \n        if(booking && booking.from && booking.to){\n          setArrivalDate(moment(bookingArrival));\n          setDepartureDate(moment(bookingDeparture))\n          setIsActive(true);\n          \n          if(booking.property){\n            setSelectedPropterty(property);\n          }\n        }\n  }, [bookingArrival, bookingDeparture, booking, property, setArrivalDate, setDepartureDate, setIsActive, setSelectedPropterty]) \n  \n  */\n\n\n  const setBooking = data => {\n    const myBooking = data === null || data === void 0 ? void 0 : data.myBooking;\n\n    if (myBooking && myBooking.from && myBooking.to) {\n      setArrivalDate(moment(myBooking.from));\n      setDepartureDate(moment(myBooking.to));\n      setIsActive(true);\n    }\n  };\n\n  const setBook = useCallback(setBooking, []);\n  useMemo(() => setBook(data), [data]);\n\n  const bookingButtonPressed = async () => {\n    if (isActive) {\n      deleteBook();\n    } else {\n      createBook();\n    }\n  };\n\n  const deleteBook = async () => {\n    if (data && data.myBooking) {\n      const result = await deleteBooking({\n        variables: {\n          bookingId: data.myBooking.id\n        }\n      });\n\n      if (result) {\n        console.log(\"result myBooking\" + result);\n        refetch();\n      }\n    }\n  };\n\n  const createBook = async () => {\n    if (selectedProperty && arrivalDate && departureDate) {\n      const result = await Booking({\n        variables: {\n          from: arrivalDate.unix(),\n          to: departureDate.unix(),\n          propertyId: selectedProperty.id\n        }\n      });\n\n      if (result) {\n        console.log(result);\n        refetch();\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(MyBookingArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(BasicContentBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(DateSelector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(PropertySelectionView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(BookingButton, {\n    aktiveBooking: isActive,\n    buttonPressedListener: bookingButtonPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx"],"names":["React","useContext","useMemo","useCallback","useMyBookingQuery","useDeleteBookingMutation","useCreateMyBookingMutation","DateSelector","PropertySelectionView","BookingButton","Grid","moment","BookingContext","MyBookingArea","BasicContentBox","MyBooking","data","loading","error","refetch","Booking","deleteBooking","setArrivalDate","setDepartureDate","selectedProperty","arrivalDate","departureDate","isActive","setIsActive","console","log","setBooking","myBooking","from","to","setBook","bookingButtonPressed","deleteBook","createBook","result","variables","bookingId","id","unix","propertyId"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo, useCallback} from 'react'\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation, MyBookingQuery} from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './BookingButton';\nimport { Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../StyledComponents';\n\ninterface Props {\n    \n}\n\nexport const MyBooking:  React.FC<Props> = () => {\n\n    const {data, loading, error, refetch} = useMyBookingQuery();\n\n    const [Booking] = useCreateMyBookingMutation();\n    const [deleteBooking] = useDeleteBookingMutation();\n    const { \n              setArrivalDate, \n              setDepartureDate,\n              selectedProperty,\n              arrivalDate, \n              departureDate,\n              isActive,\n              setIsActive} = useContext(BookingContext);\n\n    \n    if(loading){\n      console.log(\"laoding\" + loading)\n    }\n\n    if(error){\n      console.log(\"error\" + error) \n    }\n\n    /*\n    const booking = data?.myBooking;\n    var bookingArrival: number = 0;\n    var bookingDeparture: number = 0;\n    var property: Property | undefined = undefined;\n    if(booking && booking?.property) {\n        bookingArrival = booking.from;\n        bookingDeparture = booking.to;\n        property = booking.property\n    }\n    useMemo(() => {      \n          if(booking && booking.from && booking.to){\n            setArrivalDate(moment(bookingArrival));\n            setDepartureDate(moment(bookingDeparture))\n            setIsActive(true);\n            \n            if(booking.property){\n              setSelectedPropterty(property);\n            }\n          }\n    }, [bookingArrival, bookingDeparture, booking, property, setArrivalDate, setDepartureDate, setIsActive, setSelectedPropterty]) \n    \n    */\n\n   const setBooking = (data: MyBookingQuery | undefined) => {\n    const myBooking = data?.myBooking;\n    if(myBooking && myBooking.from && myBooking.to){\n      setArrivalDate(moment(myBooking.from));\n      setDepartureDate(moment(myBooking.to))\n      setIsActive(true);\n    }\n  }\n\n  const setBook = useCallback(\n   setBooking,\n    [],\n  )\n    useMemo(() =>       \n          setBook(data)\n    , [data]) \n    \n\n\n    const bookingButtonPressed = async () => {\n      if(isActive){\n          deleteBook();     \n      } else{\n          createBook()\n      }\n    }\n\n    const deleteBook = async () => {\n      if(data && data.myBooking){\n        const result = await deleteBooking({\n          variables: {\n            bookingId: data.myBooking.id\n          }\n        })\n        if(result){\n          console.log(\"result myBooking\" + result);\n          refetch();\n        }\n      } \n    }\n\n    const createBook = async () => {\n      if(selectedProperty && arrivalDate && departureDate){\n        const result = await Booking(\n          { \n            variables: {\n                from: arrivalDate.unix(),\n                to: departureDate.unix(),\n                propertyId: selectedProperty.id\n            }\n          })\n          if(result){\n\n            console.log(result);\n            refetch();\n          }  \n      }\n    }\n\n    \n    return (\n        <div>\n              <MyBookingArea>        \n                <BasicContentBox>\n                  <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                      <DateSelector />\n                    </Grid>\n                    <Grid item xs={9}>\n                      <PropertySelectionView />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <BookingButton aktiveBooking={isActive} buttonPressedListener={bookingButtonPressed}/>\n                    </Grid>\n                  </Grid>\n                  {}\n                  </BasicContentBox>               \n              </MyBookingArea>             \n          </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}