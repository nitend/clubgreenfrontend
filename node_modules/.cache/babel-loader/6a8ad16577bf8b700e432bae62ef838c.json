{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Routes}from'./pages/pageframe/Routes';import{setAccessToken}from'./accessToken';export var App=function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isloading=_useState2[0],setLoading=_useState2[1];useEffect(function(){fetch(\"http://localhost:4000/refresh_token\",{method:\"POST\",credentials:\"include\"}).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(x){var _ref2,accessToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return x.json();case 2:_ref2=_context.sent;accessToken=_ref2.accessToken;setAccessToken(accessToken);setLoading(false);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());},[]);if(isloading){return React.createElement(Routes,{serverConnected:false});}return React.createElement(Routes,{serverConnected:true});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/App.tsx"],"names":["React","useState","useEffect","Routes","setAccessToken","App","isloading","setLoading","fetch","method","credentials","then","x","json","accessToken"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,OAASC,MAAT,KAAuB,0BAAvB,CACA,OAASC,cAAT,KAA+B,eAA/B,CAUA,MAAO,IAAMC,CAAAA,GAAoB,CAAG,QAAvBA,CAAAA,GAAuB,EAAM,eAENJ,QAAQ,CAAC,IAAD,CAFF,wCAE/BK,SAF+B,eAEpBC,UAFoB,eAItCL,SAAS,CAAC,UAAM,CACZM,KAAK,CAAE,qCAAF,CAAyC,CAC1CC,MAAM,CAAE,MADkC,CAE1CC,WAAW,CAAE,SAF6B,CAAzC,CAAL,CAGGC,IAHH,0FAGQ,iBAAMC,CAAN,8JACwBA,CAAAA,CAAC,CAACC,IAAF,EADxB,4BACGC,WADH,OACGA,WADH,CAEJV,cAAc,CAACU,WAAD,CAAd,CACAP,UAAU,CAAC,KAAD,CAAV,CAHI,sDAHR,gEAUH,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAGD,SAAH,CAAa,CACT,MACI,qBAAC,MAAD,EAAQ,eAAe,CAAE,KAAzB,EADJ,CAGH,CAED,MAAO,qBAAC,MAAD,EAAQ,eAAe,CAAE,IAAzB,EAAP,CACH,CAxBM","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Routes } from './pages/pageframe/Routes'\nimport { setAccessToken } from './accessToken';\n\ninterface Props {\n}\n\ntype auth = {\n    isAuthenticated: () => boolean\n}\n\n\nexport const App: React.FC<Props> = () => {\n\n    const [isloading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch (\"http://localhost:4000/refresh_token\", {\n            method: \"POST\",\n            credentials: \"include\"\n        }).then(async x => {\n            const {accessToken} = await x.json();\n            setAccessToken(accessToken)\n            setLoading(false)\n            }\n        );\n        \n    }, [])\n\n    if(isloading){\n        return (         \n            <Routes serverConnected={false}/>\n        );\n    }\n\n    return <Routes serverConnected={true}/>\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}