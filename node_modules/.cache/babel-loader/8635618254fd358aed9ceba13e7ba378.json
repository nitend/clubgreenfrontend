{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useLoginMutation}from\"../../../../../generated/graphql\";import{setAccessToken}from\"../../../../../accessToken\";import{TextField,Button}from\"@material-ui/core\";import{Formik}from'formik';import{useHistory}from\"react-router-dom\";export var LoginForm=function LoginForm(){var history=useHistory();var _useLoginMutation=useLoginMutation(),_useLoginMutation2=_slicedToArray(_useLoginMutation,1),Login=_useLoginMutation2[0];var _useState=useState(),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var loginFunc=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Login({variables:values,update:function update(store,_ref2){var data=_ref2.data;if(!data){return null;}/*\n                    store.writeQuery<MeQuery>({\n                        query: MeDocument,\n                        data: {\n                            me: data.login.user\n                        }\n                    })\n                    */}});case 3:response=_context.sent;if(response&&response.data){setAccessToken(response.data.login.accessToken);history.push('/booking');}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);setError(true);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function loginFunc(_x){return _ref.apply(this,arguments);};}();return React.createElement(\"div\",{style:{maxWidth:'400px',margin:'auto'}},React.createElement(Formik,{initialValues:{email:\"\",password:\"\",acceptTerms:false},onSubmit:loginFunc},function(props){var values=props.values,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit;return React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(TextField,{error:error,fullWidth:true,id:\"email\",label:\"Email\",value:values.email,onChange:handleChange,onBlur:handleBlur}),React.createElement(TextField,{error:error,fullWidth:true,id:\"password\",label:\"Passwort\",type:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur}),React.createElement(Button,{variant:\"outlined\",style:{margin:'auto',display:'block',marginTop:'24px'},type:\"submit\"},\"anmelden\"));}));};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/login/LoginForm.tsx"],"names":["React","useState","useLoginMutation","setAccessToken","TextField","Button","Formik","useHistory","LoginForm","history","Login","error","setError","loginFunc","values","variables","update","store","data","response","login","accessToken","push","maxWidth","margin","email","password","acceptTerms","props","handleChange","handleBlur","handleSubmit","display","marginTop"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,gBAAT,KAAsD,kCAAtD,CACA,OAASC,cAAT,KAA+B,4BAA/B,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAiC,mBAAjC,CACA,OAAQC,MAAR,KAAqB,QAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAMA,MAAO,IAAMC,CAAAA,SAA0B,CAAG,QAA7BA,CAAAA,SAA6B,EAAM,CAC5C,GAAMC,CAAAA,OAAO,CAAGF,UAAU,EAA1B,CAD4C,sBAE5BL,gBAAgB,EAFY,wDAErCQ,KAFqC,qCAGlBT,QAAQ,EAHU,wCAGrCU,KAHqC,eAG9BC,QAH8B,eAK5C,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,MAAP,qKAEaJ,CAAAA,KAAK,CAAC,CACzBK,SAAS,CAAED,MADc,CAEzBE,MAAM,CAAE,gBAACC,KAAD,OAAmB,IAAVC,CAAAA,IAAU,OAAVA,IAAU,CACvB,GAAG,CAACA,IAAJ,CAAS,CACL,MAAO,KAAP,CACH,CACD;;;;;;;sBAQH,CAdwB,CAAD,CAFlB,QAEJC,QAFI,eAkBV,GAAGA,QAAQ,EAAIA,QAAQ,CAACD,IAAxB,CAA6B,CACzBf,cAAc,CAACgB,QAAQ,CAACD,IAAT,CAAcE,KAAd,CAAoBC,WAArB,CAAd,CACAZ,OAAO,CAACa,IAAR,CAAa,UAAb,EACH,CArBS,+EAuBVV,QAAQ,CAAC,IAAD,CAAR,CAvBU,oEAAH,kBAATC,CAAAA,SAAS,4CAAf,CA4BA,MACI,4BAAK,KAAK,CAAE,CAACU,QAAQ,CAAE,OAAX,CAAoBC,MAAM,CAAE,MAA5B,CAAZ,EACI,oBAAC,MAAD,EAAQ,aAAa,CAAE,CACnBC,KAAK,CAAE,EADY,CAEnBC,QAAQ,CAAE,EAFS,CAGnBC,WAAW,CAAE,KAHM,CAAvB,CAKA,QAAQ,CAAEd,SALV,EAMK,SAAAe,KAAK,CAAI,IAEVd,CAAAA,MAFU,CAMNc,KANM,CAEVd,MAFU,CAGVe,YAHU,CAMND,KANM,CAGVC,YAHU,CAIVC,UAJU,CAMNF,KANM,CAIVE,UAJU,CAKVC,YALU,CAMNH,KANM,CAKVG,YALU,CAOV,MACI,6BAAM,QAAQ,CAAEA,YAAhB,EACQ,oBAAC,SAAD,EACI,KAAK,CAAEpB,KADX,CAEI,SAAS,CAAE,IAFf,CAGI,EAAE,CAAC,OAHP,CAII,KAAK,CAAC,OAJV,CAKI,KAAK,CAAEG,MAAM,CAACW,KALlB,CAMI,QAAQ,CAAEI,YANd,CAOI,MAAM,CAAEC,UAPZ,EADR,CAUQ,oBAAC,SAAD,EACI,KAAK,CAAEnB,KADX,CAEI,SAAS,CAAE,IAFf,CAGI,EAAE,CAAC,UAHP,CAII,KAAK,CAAC,UAJV,CAKI,IAAI,CAAC,UALT,CAMI,KAAK,CAAEG,MAAM,CAACY,QANlB,CAOI,QAAQ,CAAEG,YAPd,CAQI,MAAM,CAAEC,UARZ,EAVR,CAoBQ,oBAAC,MAAD,EAAQ,OAAO,CAAE,UAAjB,CAA6B,KAAK,CAAE,CAACN,MAAM,CAAE,MAAT,CAAiBQ,OAAO,CAAE,OAA1B,CAAmCC,SAAS,CAAE,MAA9C,CAApC,CAA2F,IAAI,CAAC,QAAhG,aApBR,CADJ,CAuBH,CApCD,CADJ,CADJ,CAyCH,CA1EM","sourcesContent":["import React, { useState } from \"react\";\nimport { useLoginMutation, MeDocument, MeQuery } from \"../../../../../generated/graphql\";\nimport { setAccessToken } from \"../../../../../accessToken\";\nimport { TextField, Button} from \"@material-ui/core\";\nimport {Formik} from 'formik'\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n\n}\n\nexport const LoginForm: React.FC<Props> = () => {\n    const history = useHistory();\n    const [Login] = useLoginMutation();\n    const [error, setError] = useState()\n\n    const loginFunc = async (values: {email: string, password: string}) => {\n        try{\n            const response = await Login({\n                variables: values,\n                update: (store, {data}) => {\n                    if(!data){\n                        return null;\n                    }\n                    /*\n                    store.writeQuery<MeQuery>({\n                        query: MeDocument,\n                        data: {\n                            me: data.login.user\n                        }\n                    })\n                    */  \n                }\n            })\n            if(response && response.data){\n                setAccessToken(response.data.login.accessToken)\n                history.push('/booking')\n            } \n        } catch(error){\n            setError(true);\n        }\n       \n    }\n\n    return (\n        <div style={{maxWidth: '400px', margin: 'auto'}}>\n            <Formik initialValues={{\n                email: \"\",\n                password: \"\",\n                acceptTerms: false\n            }} \n            onSubmit={loginFunc} >\n                {props => {\n                const {\n                values,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                } = props;\n                return (\n                    <form onSubmit={handleSubmit}>\n                            <TextField \n                                error={error} \n                                fullWidth={true}\n                                id=\"email\" \n                                label=\"Email\"\n                                value={values.email} \n                                onChange={handleChange} \n                                onBlur={handleBlur}\n                            />\n                            <TextField \n                                error={error}\n                                fullWidth={true}\n                                id=\"password\" \n                                label=\"Passwort\"\n                                type=\"password\"\n                                value={values.password} \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            <Button variant={\"outlined\"} style={{margin: 'auto', display: 'block', marginTop: '24px'}} type=\"submit\">anmelden</Button>                          \n                    </form>);\n            }}\n            </Formik>\n            </div>)\n};"]},"metadata":{},"sourceType":"module"}