{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/Login.tsx\";\nimport React, { useState } from \"react\";\nimport { useLoginMutation, MeDocument } from \"../../../../generated/graphql\";\nimport { useHistory } from \"react-router-dom\";\nimport { setAccessToken } from \"../../../../accessToken\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { SectionContainer, BasicContentBox } from \"../StyledComponents\";\nimport './styles.css';\nexport const Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [responseValues, setResponseValue] = useState(\"\");\n  const [Login] = useLoginMutation();\n  return React.createElement(SectionContainer, {\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(BasicContentBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      try {\n        const response = await Login({\n          variables: {\n            email,\n            password\n          },\n          update: (store, {\n            data\n          }) => {\n            if (!data) {\n              return null;\n            }\n\n            store.writeQuery({\n              query: MeDocument,\n              data: {\n                me: data.login.user\n              }\n            });\n          }\n        });\n\n        if (response && response.data) {\n          setAccessToken(response.data.login.accessToken);\n        }\n\n        setResponseValue(\"\");\n        history.push('/booking');\n        console.log(response);\n      } catch (err) {\n        if (err.message) {\n          setResponseValue(\"Nutzername oder Password nicht richtig.\");\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    color: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, responseValues)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Login\")))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/Login.tsx"],"names":["React","useState","useLoginMutation","MeDocument","useHistory","setAccessToken","TextField","Button","Typography","SectionContainer","BasicContentBox","Login","email","setEmail","history","password","setPassword","responseValues","setResponseValue","e","preventDefault","response","variables","update","store","data","writeQuery","query","me","login","user","accessToken","push","console","log","err","message","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { useLoginMutation, MeDocument, MeQuery } from \"../../../../generated/graphql\";\nimport { useHistory } from \"react-router-dom\";\nimport { setAccessToken } from \"../../../../accessToken\";\nimport { TextField, Button, Typography } from \"@material-ui/core\";\nimport { SectionContainer, BasicContentBox } from \"../StyledComponents\";\nimport './styles.css'\n\ninterface Props {\n\n}\n\nexport const Login: React.FC<Props> = () => {\n    const [email, setEmail] = useState(\"\");\n    const history = useHistory();\n    const [password, setPassword] = useState(\"\");\n    const [responseValues, setResponseValue] = useState(\"\");\n    const [Login] = useLoginMutation()\n\n\n    return (\n        <SectionContainer maxWidth=\"xs\">\n            <BasicContentBox>\n        <div>\n            <form onSubmit={async e => {\n                e.preventDefault()\n                \n                try{\n                    const response = await Login({\n                        variables: {\n                            email, password\n                        },\n                        update: (store, {data}) => {\n                            if(!data){\n                                return null;\n                            }\n                            store.writeQuery<MeQuery>({\n                                query: MeDocument,\n\n                                data: {\n                                    me: data.login.user\n                                }\n                            })  \n                        }\n                    })\n                    if(response && response.data){\n                        setAccessToken(response.data.login.accessToken)\n                    }\n                    setResponseValue(\"\");\n                    history.push('/booking');\n                    console.log(response)\n                    \n\n                } catch(err){  \n                    if(err.message) {\n                        setResponseValue(\"Nutzername oder Password nicht richtig.\");\n                    }\n                }  \n                \n            }} >\n                <div>\n                    <Typography color=\"error\">\n                        {responseValues}\n                    </Typography>\n                    \n                </div>\n                <div>\n                    <TextField \n                        id=\"standard-basic\" \n                        label=\"Email\"\n                        value={email} \n                        onChange={e => {\n                            setEmail(e.target.value)\n                            }\n                        } \n                    />\n                </div>\n                <div>\n                    <TextField \n                        id=\"standard-basic\" \n                        label=\"Password\"\n                        type=\"password\"\n                        value={password} \n                        onChange={e => {\n                            setPassword(e.target.value)\n                            }\n                        } \n                    />\n                </div>\n                <Button type=\"submit\">Login</Button>\n            </form>\n        </div>\n        </BasicContentBox>\n    </SectionContainer>\n    )\n};"]},"metadata":{},"sourceType":"module"}