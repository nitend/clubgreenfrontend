{"ast":null,"code":"import React from'react';import{useAllRatingsQuery}from'../../../generated/graphql';import{Container,Button}from'@material-ui/core';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{useHistory,useRouteMatch}from'react-router-dom';import{TableList}from'../lists/TableList';import{RatingFields}from'./RatingObject';export var RatingList=function RatingList(props){var _useAllRatingsQuery=useAllRatingsQuery(),data=_useAllRatingsQuery.data,loading=_useAllRatingsQuery.loading,error=_useAllRatingsQuery.error;var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var history=useHistory();if(loading){return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}var onEntityEdit=function onEntityEdit(id){history.push(path+'/'+id);console.log(id);};var onEntityDelete=function onEntityDelete(id){return;};var onNewEntityClicked=function onNewEntityClicked(){onEntityEdit(0);};if(data&&data.getAllRatings){return React.createElement(Container,null,React.createElement(TableList,{fields:RatingFields,data:data.getAllRatings,onDeleteClicked:onEntityDelete,onEditClicked:onEntityEdit}),React.createElement(Button,{onClick:onNewEntityClicked},\"Neuer Interessanter Ort\"));}return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/ratings/RatingList.tsx"],"names":["React","useAllRatingsQuery","Container","Button","LoadingAnimation","ErrorMessage","useHistory","useRouteMatch","TableList","RatingFields","RatingList","props","data","loading","error","path","history","onEntityEdit","id","push","console","log","onEntityDelete","onNewEntityClicked","getAllRatings"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAkC,4BAAlC,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,kBAA1C,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAKA,MAAO,IAAMC,CAAAA,UAA2B,CAAG,QAA9BA,CAAAA,UAA8B,CAACC,KAAD,CAAW,yBAEnBV,kBAAkB,EAFC,CAE3CW,IAF2C,qBAE3CA,IAF2C,CAErCC,OAFqC,qBAErCA,OAFqC,CAE5BC,KAF4B,qBAE5BA,KAF4B,oBAGnCP,aAAa,EAHsB,CAG3CQ,IAH2C,gBAG3CA,IAH2C,CAKlD,GAAMC,CAAAA,OAAO,CAAGV,UAAU,EAA1B,CAGA,GAAGO,OAAH,CAAW,CACP,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAED,GAAGC,KAAH,CAAS,CACL,MACI,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EADJ,CAGH,CAED,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAa,CAC9BF,OAAO,CAACG,IAAR,CAAcJ,IAAI,CAAG,GAAP,CAAaG,EAA3B,EACAE,OAAO,CAACC,GAAR,CAAYH,EAAZ,EACH,CAHD,CAKA,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACJ,EAAD,CAAa,CAChC,OACH,CAFD,CAIA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BN,YAAY,CAAC,CAAD,CAAZ,CACH,CAFD,CAKA,GAAGL,IAAI,EAAIA,IAAI,CAACY,aAAhB,CAA8B,CAC1B,MACI,qBAAC,SAAD,MACI,oBAAC,SAAD,EACI,MAAM,CAAEf,YADZ,CAEI,IAAI,CAAEG,IAAI,CAACY,aAFf,CAGI,eAAe,CAAEF,cAHrB,CAII,aAAa,CAAEL,YAJnB,EADJ,CAMI,oBAAC,MAAD,EAAQ,OAAO,CAAEM,kBAAjB,4BANJ,CADJ,CAWH,CAED,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAnDM","sourcesContent":["import React from 'react'\nimport { useAllRatingsQuery} from '../../../generated/graphql'\nimport { Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { TableList } from '../lists/TableList';\nimport { RatingFields } from './RatingObject';\n\ninterface Props {\n}\n\nexport const RatingList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useAllRatingsQuery();\n    const {path} = useRouteMatch();\n\n    const history = useHistory();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onEntityEdit = (id: any) => {\n        history.push( path + '/' + id);\n        console.log(id)\n    }\n\n    const onEntityDelete = (id: any) => {\n        return\n    }\n\n    const onNewEntityClicked = () => {\n        onEntityEdit(0);\n    } \n\n\n    if(data && data.getAllRatings){\n        return(\n            <Container>\n                <TableList \n                    fields={RatingFields} \n                    data={data.getAllRatings} \n                    onDeleteClicked={onEntityDelete} \n                    onEditClicked={onEntityEdit}/>  \n                <Button onClick={onNewEntityClicked}>Neuer Interessanter Ort</Button>\n            </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}