{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/TravelDatesPicker.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { useBookingsByPropertyQuery } from '../../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nexport const TravelDatesPicker = props => {\n  const [blockedDates, setBlockedDates] = useState();\n  const {\n    data,\n    loading,\n    error\n  } = useBookingsByPropertyQuery({\n    variables: {\n      propertyId: props.propertyId\n    }\n  });\n  console.log(loading);\n  console.log(error);\n  console.log(data === null || data === void 0 ? void 0 : data.activeBookingsForProperty);\n\n  const generateBlockedDaysList = async () => {\n    var blockedDays = [];\n\n    if (data && data.activeBookingsForProperty) {\n      data.activeBookingsForProperty.map(dateRange => {\n        var start = moment(dateRange.from).startOf(\"d\");\n        var end = moment(dateRange.to);\n\n        do {\n          blockedDays.push(start);\n          start = start.add(1, \"day\");\n        } while (start.isBefore(end));\n\n        return dateRange;\n      });\n    }\n\n    return blockedDays;\n  };\n\n  useEffect(() => {\n    generateBlockedDaysList().then(data => {\n      setBlockedDates(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [data === null || data === void 0 ? void 0 : data.activeBookingsForProperty]);\n  return React.createElement(DateSelector, {\n    blockedDates: blockedDates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/TravelDatesPicker.tsx"],"names":["React","useState","useEffect","moment","useBookingsByPropertyQuery","DateSelector","TravelDatesPicker","props","blockedDates","setBlockedDates","data","loading","error","variables","propertyId","console","log","activeBookingsForProperty","generateBlockedDaysList","blockedDays","map","dateRange","start","from","startOf","end","to","push","add","isBefore","then","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAMA,OAAO,MAAMC,iBAAmC,GAAIC,KAAD,IAAW;AAG1D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM;AAACS,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,0BAA0B,CAAC;AAACS,IAAAA,SAAS,EAAC;AAACC,MAAAA,UAAU,EAAEP,KAAK,CAACO;AAAnB;AAAX,GAAD,CAAzD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEO,yBAAlB;;AAEA,QAAMC,uBAAuB,GAAG,YAAY;AAExC,QAAIC,WAAqB,GAAG,EAA5B;;AACA,QAAGT,IAAI,IAAIA,IAAI,CAACO,yBAAhB,EAA0C;AAExCP,MAAAA,IAAI,CAACO,yBAAL,CAA+BG,GAA/B,CAAoCC,SAAD,IAAe;AAC9C,YAAIC,KAAK,GAAGnB,MAAM,CAACkB,SAAS,CAACE,IAAX,CAAN,CAAuBC,OAAvB,CAA+B,GAA/B,CAAZ;AACA,YAAIC,GAAG,GAAGtB,MAAM,CAACkB,SAAS,CAACK,EAAX,CAAhB;;AACA,WAAE;AACEP,UAAAA,WAAW,CAACQ,IAAZ,CAAiBL,KAAjB;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAU,CAAV,EAAa,KAAb,CAAR;AACH,SAHD,QAGQN,KAAK,CAACO,QAAN,CAAeJ,GAAf,CAHR;;AAKA,eAAOJ,SAAP;AACH,OATD;AAUD;;AACD,WAAOF,WAAP;AACH,GAjBD;;AAkBAjB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,uBAAuB,GAAGY,IAA1B,CAAgCpB,IAAD,IAAU;AAACD,MAAAA,eAAe,CAACC,IAAD,CAAf;AAAsB,KAAhE,EAAkEqB,KAAlE,CAAyEnB,KAAD,IAAW;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAAmB,KAAvG;AACH,GAFQ,EAEN,CAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,yBAAP,CAFM,CAAT;AAIA,SACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAET,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIH,CArCM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport moment, { Moment } from 'moment'\nimport { useBookingsByPropertyQuery } from '../../../../generated/graphql'\nimport { DateSelector } from './DateSelector'\n\ninterface Props {\n    propertyId: number | undefined\n}\n\nexport const TravelDatesPicker:  React.FC<Props> = (props) => {\n\n\n    const [blockedDates, setBlockedDates] = useState()\n    const {data, loading, error} = useBookingsByPropertyQuery({variables:{propertyId: props.propertyId}})\n\n    console.log(loading);\n    console.log(error);\n\n    console.log(data?.activeBookingsForProperty);\n\n    const generateBlockedDaysList = async () => {\n\n        var blockedDays: Moment[] = [];\n        if(data && data.activeBookingsForProperty){\n\n          data.activeBookingsForProperty.map((dateRange) => {\n              var start = moment(dateRange.from).startOf(\"d\");\n              var end = moment(dateRange.to)\n              do{               \n                  blockedDays.push(start);\n                  start = start.add(1, \"day\");               \n              } while(start.isBefore(end))\n\n              return dateRange;\n          })\n        }\n        return blockedDays;\n    }\n    useEffect(() => {\n        generateBlockedDaysList().then((data) => {setBlockedDates(data)}).catch((error) => {console.log(error)})\n    }, [data?.activeBookingsForProperty])\n   \n    return  (\n        <DateSelector blockedDates={blockedDates} />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}