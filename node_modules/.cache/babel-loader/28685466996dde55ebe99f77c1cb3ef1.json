{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/sights/SightList.tsx\";\nimport React from 'react';\nimport { useSightsQuery } from '../../../generated/graphql';\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nexport const SightList = props => {\n  const {\n    data,\n    loading,\n    error\n  } = useSightsQuery();\n  const {\n    path\n  } = useRouteMatch();\n  const history = useHistory();\n\n  if (loading) {\n    return React.createElement(LoadingAnimation, {\n      message: 'Daten werden geladen',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      show: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  const onEntityEdit = id => {\n    history.push(path + '/' + id);\n    console.log(id);\n  };\n\n  const onEntityDelete = id => {};\n\n  const onNewEntityClicked = () => {\n    onEntityEdit(0);\n  };\n\n  if (data && data.getSights) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, data === null || data === void 0 ? void 0 : data.getSights.map(x => {\n      return React.createElement(ListItem, {\n        key: x.id,\n        onEditClicked: onEntityEdit,\n        onDeletClicked: onEntityDelete,\n        id: x.id,\n        title: x.title,\n        tagone: x.location,\n        tagtwo: x.subtext,\n        tagthree: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }))), React.createElement(Button, {\n      onClick: onNewEntityClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Neuer Interessanter Ort\"));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: 'Daten werden geladen',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/sights/SightList.tsx"],"names":["React","useSightsQuery","TableBody","Table","Container","Button","LoadingAnimation","ErrorMessage","ListItem","useHistory","useRouteMatch","SightList","props","data","loading","error","path","history","onEntityEdit","id","push","console","log","onEntityDelete","onNewEntityClicked","getSights","map","x","title","location","subtext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAmCC,cAAnC,QAAwD,4BAAxD;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AAKA,OAAO,MAAMC,SAA0B,GAAIC,KAAD,IAAW;AAEjD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBd,cAAc,EAA7C;AACA,QAAM;AAACe,IAAAA;AAAD,MAASN,aAAa,EAA5B;AAEA,QAAMO,OAAO,GAAGR,UAAU,EAA1B;;AAGA,MAAGK,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGC,KAAH,EAAS;AACL,WACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,IAAI,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,QAAMG,YAAY,GAAIC,EAAD,IAAa;AAC9BF,IAAAA,OAAO,CAACG,IAAR,CAAcJ,IAAI,GAAG,GAAP,GAAaG,EAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACH,GAHD;;AAKA,QAAMI,cAAc,GAAIJ,EAAD,IAAa,CAEnC,CAFD;;AAIA,QAAMK,kBAAkB,GAAG,MAAM;AAC7BN,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACH,GAFD;;AAIA,MAAGL,IAAI,IAAIA,IAAI,CAACY,SAAhB,EAA0B;AACtB,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,IADL,aACKA,IADL,uBACKA,IAAI,CAAEY,SAAN,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI;AAC1B,aACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,CAAC,CAACR,EADX;AAEI,QAAA,aAAa,EAAED,YAFnB;AAGI,QAAA,cAAc,EAAEK,cAHpB;AAII,QAAA,EAAE,EAAEI,CAAC,CAACR,EAJV;AAKI,QAAA,KAAK,EAAEQ,CAAC,CAACC,KALb;AAMI,QAAA,MAAM,EAAED,CAAC,CAACE,QANd;AAOI,QAAA,MAAM,EAAEF,CAAC,CAACG,OAPd;AAQI,QAAA,QAAQ,EAAE,EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWC,KAZA,CADL,CADJ,CADJ,EAkBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAlBJ,CADJ;AAuBH;;AAED,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA9DM","sourcesContent":["import React from 'react'\nimport { useTeaserPropertiesQuery, useSightsQuery} from '../../../generated/graphql'\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\ninterface Props {\n}\n\nexport const SightList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useSightsQuery();\n    const {path} = useRouteMatch();\n\n    const history = useHistory();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onEntityEdit = (id: any) => {\n        history.push( path + '/' + id);\n        console.log(id)\n    }\n\n    const onEntityDelete = (id: any) => {\n\n    }\n\n    const onNewEntityClicked = () => {\n        onEntityEdit(0);\n    } \n\n    if(data && data.getSights){\n        return(\n            <Container>\n                <Table>      \n                    <TableBody>\n                        {data?.getSights.map(x => {\n                        return (              \n                            <ListItem\n                                key={x.id} \n                                onEditClicked={onEntityEdit} \n                                onDeletClicked={onEntityDelete} \n                                id={x.id}\n                                title={x.title}\n                                tagone={x.location}\n                                tagtwo={x.subtext}\n                                tagthree={\"\"} />\n                            )                \n                        })}\n                    </TableBody>\n                </Table> \n                <Button onClick={onNewEntityClicked}>Neuer Interessanter Ort</Button>\n            </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}