{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/container/personalnameeditor/index.tsx\";\nimport React, { useState } from \"react\";\nimport { useMeQuery, useUpdateUserNameMutation } from \"../../generated/graphql\";\nimport { ErrorMessage } from \"../../pages/pageframe/global/Messages/ErrorMessage\";\nimport { NameForm } from \"../../components/nameform\";\nimport { LoadingAnimation } from \"../../pages/pageframe/global/Messages/LoadingAnimation\";\nimport { SuccessMessage } from \"../../pages/pageframe/global/Messages/SucessMessage\";\nexport const PersonalNameEditor = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useMeQuery();\n  const [username] = useUpdateUserNameMutation();\n  const [showSuccess, setshowSuccess] = useState(false);\n  const [showError, setshowError] = useState(false);\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      show: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  const handleSaveName = async name => {\n    const result = await username({\n      variables: {\n        username: name\n      }\n    });\n\n    if (result) {\n      setshowSuccess(true);\n    } else {\n      setshowError(true);\n    }\n  };\n\n  if (data && data.me) {\n    const user = data.me;\n    const name = {\n      gender: user.gender,\n      firstName: user.firstname,\n      surname: user.surname\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(NameForm, {\n      values: name,\n      onSubmit: handleSaveName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(SuccessMessage, {\n      show: showSuccess,\n      response: \"Dein Name wurde gespeichert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      error: new Error(\"Bei speichert ist ein Fehler aufgetreten\"),\n      show: showError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: \"Daten werden geladen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/container/personalnameeditor/index.tsx"],"names":["React","useState","useMeQuery","useUpdateUserNameMutation","ErrorMessage","NameForm","LoadingAnimation","SuccessMessage","PersonalNameEditor","data","loading","error","username","showSuccess","setshowSuccess","showError","setshowError","handleSaveName","name","result","variables","me","user","gender","firstName","firstname","surname","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,yBAArB,QAAsD,yBAAtD;AACA,SAASC,YAAT,QAA6B,oDAA7B;AACA,SAASC,QAAT,QAAmC,2BAAnC;AACA,SAASC,gBAAT,QAAiC,wDAAjC;AACA,SAASC,cAAT,QAA+B,qDAA/B;AAMA,OAAO,MAAMC,kBAAmC,GAAG,MAAM;AAErD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBT,UAAU,EAAzC;AACA,QAAM,CAACU,QAAD,IAAaT,yBAAyB,EAA5C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;;AAEA,MAAGU,KAAH,EAAS;AACL,WAAQ,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,IAAI,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAED,QAAMM,cAAc,GAAG,MAAOC,IAAP,IAA0B;AAC7C,UAAMC,MAAM,GAAG,MAAMP,QAAQ,CAAC;AACtBQ,MAAAA,SAAS,EAAE;AACPR,QAAAA,QAAQ,EAAEM;AADH;AADW,KAAD,CAA7B;;AAKA,QAAGC,MAAH,EAAU;AACNL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD,MAEO;AACHE,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GAXD;;AAaA,MAAGP,IAAI,IAAIA,IAAI,CAACY,EAAhB,EAAmB;AACf,UAAMC,IAAI,GAAGb,IAAI,CAACY,EAAlB;AAEA,UAAMH,IAAc,GAAE;AAClBK,MAAAA,MAAM,EAAED,IAAI,CAACC,MADK;AAElBC,MAAAA,SAAS,EAAEF,IAAI,CAACG,SAFE;AAGlBC,MAAAA,OAAO,EAAEJ,IAAI,CAACI;AAHI,KAAtB;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAER,IAAlB;AAAwB,MAAA,QAAQ,EAAED,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEJ,WAAtB;AAAmC,MAAA,QAAQ,EAAE,6BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE,IAAIc,KAAJ,CAAU,0CAAV,CAArB;AAA4E,MAAA,IAAI,EAAEZ,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AACD,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA/CM","sourcesContent":["import React, { useState } from \"react\";\nimport { useMeQuery, useUpdateUserNameMutation } from \"../../generated/graphql\";\nimport { ErrorMessage } from \"../../pages/pageframe/global/Messages/ErrorMessage\";\nimport { NameForm, NameData } from \"../../components/nameform\";\nimport { LoadingAnimation } from \"../../pages/pageframe/global/Messages/LoadingAnimation\";\nimport { SuccessMessage } from \"../../pages/pageframe/global/Messages/SucessMessage\";\n\ninterface Props {\n\n}\n\nexport const PersonalNameEditor: React.FC<Props> = () => {\n\n    const {data, loading, error} = useMeQuery();\n    const [username] = useUpdateUserNameMutation();\n    const [showSuccess, setshowSuccess] = useState(false)\n    const [showError, setshowError] = useState(false)\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>)\n    }\n\n    const handleSaveName = async (name: NameData) => {\n        const result = await username({\n                variables: {\n                    username: name\n                }\n        })\n        if(result){\n            setshowSuccess(true);\n        } else {\n            setshowError(true);\n        }\n    }\n\n    if(data && data.me){\n        const user = data.me;\n\n        const name: NameData ={\n            gender: user.gender as \"male\" | \"female\" | \"else\",\n            firstName: user.firstname,\n            surname: user.surname\n        }\n\n\n\n        return (\n            <div>\n                <NameForm values={name} onSubmit={handleSaveName}/>\n                <SuccessMessage show={showSuccess} response={\"Dein Name wurde gespeichert\"} />\n                <ErrorMessage error={new Error(\"Bei speichert ist ein Fehler aufgetreten\")} show={showError}/>\n            </div>\n            \n        )\n    }\n    return (\n        <LoadingAnimation message={\"Daten werden geladen\"} />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}