{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/homepage/sections/AssistentFlow.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, Stepper, Typography, StepLabel, Step, makeStyles } from \"@material-ui/core\";\nimport { LoginForm } from \"../../pageframe/global/user/LoginForm\";\nimport { PriceSection } from \"./priceSectio/PriceSection\";\nimport { SignInSection } from \"./SignInSection\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Konto erstellen', 'Club GrÃ¼n beitreten', 'Ausflug planen'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(SignInSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(PriceSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport const AssistentFlow = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = step => {\n    return step === 1;\n  };\n\n  const isStepSkipped = step => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    setSkipped(prevSkipped => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, steps.map((label, index) => {\n    const stepProps = {\n      completed: false\n    };\n    const labelProps = {\n      optional: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })\n    };\n\n    if (isStepOptional(index)) {\n      labelProps.optional = React.createElement(Typography, {\n        variant: \"caption\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Optional\");\n    }\n\n    if (isStepSkipped(index)) {\n      stepProps.completed = false;\n    }\n\n    return React.createElement(Step, Object.assign({\n      key: label\n    }, stepProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(StepLabel, Object.assign({}, labelProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), label));\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"All steps completed - you're finished\"), React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, getStepContent(activeStep)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Back\"), isStepOptional(activeStep) && React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleSkip,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Skip\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/homepage/sections/AssistentFlow.tsx"],"names":["React","useState","Button","Stepper","Typography","StepLabel","Step","makeStyles","LoginForm","PriceSection","SignInSection","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","AssistentFlow","classes","activeStep","setActiveStep","skipped","setSkipped","Set","steps","isStepOptional","isStepSkipped","has","handleNext","newSkipped","values","delete","prevActiveStep","handleBack","handleSkip","Error","prevSkipped","add","handleReset","map","label","index","stepProps","completed","labelProps","optional","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Button, Stepper, Typography, StepLabel, Step, makeStyles } from \"@material-ui/core\";\nimport { LoginForm } from \"../../pageframe/global/user/LoginForm\";\nimport { PriceSection } from \"./priceSectio/PriceSection\";\nimport { SignInSection } from \"./SignInSection\";\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n\nfunction getSteps() {\n    return ['Konto erstellen', 'Club GrÃ¼n beitreten', 'Ausflug planen'];\n  }\n  \n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <LoginForm />;\n      case 1:\n        return <SignInSection />;\n      case 2:\n        return <PriceSection />;\n      default:\n        return 'Unknown step';\n    }\n  }\n\nexport const AssistentFlow: React.FC<Props> = () => {\n\n    const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = (step: number) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n   \n   return (\n    <div className={classes.root}>\n    <Stepper activeStep={activeStep}>\n      {steps.map((label, index) => {\n        const stepProps = {completed: false};\n        const labelProps = {optional: <div></div>};\n        if (isStepOptional(index)) {\n          labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n        }\n        if (isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n        return (\n          <Step key={label} {...stepProps}>\n            <StepLabel {...labelProps}>{label}</StepLabel>\n          </Step>\n        );\n      })}\n    </Stepper>\n    <div>\n      {activeStep === steps.length ? (\n        <div>\n          <Typography className={classes.instructions}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </div>\n      ) : (\n        <div>\n           <div>\n               {getStepContent(activeStep)}\n            </div> \n          <div>\n            <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n              Back\n            </Button>\n            {isStepOptional(activeStep) && (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSkip}\n                className={classes.button}\n              >\n                Skip\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n              className={classes.button}\n            >\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  </div>\n   )\n}"]},"metadata":{},"sourceType":"module"}