{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/propertyeditor/PictureUpload.tsx\";\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nexport const PictureUpload = props => {\n  const [selectedFile, setSelectedFile] = useState();\n\n  const onSubmitHandler = file => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('prop', props.propertyId + \"\");\n    axios.post(\"http://localhost:4000/upload/property/image\", data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      myImage: null\n    },\n    onSubmit: values => {\n      if (values && values.myImage) {\n        onSubmitHandler(values.myImage);\n        console.log(values.myImage);\n      }\n    },\n    validationSchema: Yup.object().shape({\n      file: Yup.mixed().required()\n    }),\n    render: ({\n      values,\n      handleSubmit,\n      setFieldValue\n    }) => {\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"myImage\",\n        name: \"myImage\",\n        type: \"file\",\n        onChange: event => {\n          if ((event === null || event === void 0 ? void 0 : event.currentTarget) && event.currentTarget.files) setFieldValue(\"myImage\", event.currentTarget.files[0]);\n          console.log(\"test upload\");\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"submit\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/propertyeditor/PictureUpload.tsx"],"names":["React","useState","Formik","Yup","axios","PictureUpload","props","selectedFile","setSelectedFile","onSubmitHandler","file","data","FormData","append","propertyId","post","headers","then","response","console","log","myImage","values","object","shape","mixed","required","handleSubmit","setFieldValue","event","currentTarget","files"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAOA,OAAO,MAAMC,aAA8B,GAAIC,KAAD,IAAW;AAErD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;;AAGA,QAAMQ,eAAe,GAAIC,IAAD,IAAe;AACnC,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,IAApB;AACAC,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBP,KAAK,CAACQ,UAAN,GAAiB,EAArC;AACAV,IAAAA,KAAK,CAACW,IAAN,CAAW,6CAAX,EAA0DJ,IAA1D,EAAgE;AAC5DK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADmD,KAAhE,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAND;AAOH,GAXD;;AAaA,SACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAACG,MAAAA,OAAO,EAAE;AAAV,KADjB;AAEE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,UAAGA,MAAM,IAAIA,MAAM,CAACD,OAApB,EAA4B;AACxBZ,QAAAA,eAAe,CAACa,MAAM,CAACD,OAAR,CAAf;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACD,OAAnB;AAEH;AACF,KARH;AASE,IAAA,gBAAgB,EAAElB,GAAG,CAACoB,MAAJ,GAAaC,KAAb,CAAmB;AACnCd,MAAAA,IAAI,EAAEP,GAAG,CAACsB,KAAJ,GAAYC,QAAZ;AAD6B,KAAnB,CATpB;AAYE,IAAA,MAAM,EAAE,CAAC;AAAEJ,MAAAA,MAAF;AAAUK,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,KAAD,KAA6C;AACnD,aACE;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,IAAI,EAAC,SAAzB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,QAAQ,EAAGE,KAAD,IAAW;AAChE,cAAG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,aAAP,KAAwBD,KAAK,CAACC,aAAN,CAAoBC,KAA/C,EACFH,aAAa,CAAC,SAAD,EAAYC,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAZ,CAAb;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,SAJD;AAIG,QAAA,SAAS,EAAC,cAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF;AAaD,KA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA6BH,CA/CM","sourcesContent":["import React, { useState } from 'react'\nimport { newProperty } from './PropertyEditor';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport axios from 'axios'\n\n\ninterface Props {\n    propertyId: number\n}\n\nexport const PictureUpload: React.FC<Props> = (props) => {\n\n    const [selectedFile, setSelectedFile] = useState()\n\n\n    const onSubmitHandler = (file: any) => {\n        const data = new FormData()\n        data.append('file', file)\n        data.append('prop', props.propertyId+\"\")\n        axios.post(\"http://localhost:4000/upload/property/image\", data, { \n            headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n        }).then((response) => {\n            console.log(response)\n        })\n    }\n\n    return(\n        <Formik \n          initialValues={{myImage: null}}\n          onSubmit={(values) => {  \n            if(values && values.myImage){\n                onSubmitHandler(values.myImage)\n                console.log(values.myImage)\n                \n            } \n          }} \n          validationSchema={Yup.object().shape({\n            file: Yup.mixed().required(),\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <input id=\"myImage\" name=\"myImage\" type=\"file\" onChange={(event) => {\n                      if(event?.currentTarget && event.currentTarget.files)\n                    setFieldValue(\"myImage\", event.currentTarget.files[0]);\n                    console.log(\"test upload\")\n                  }} className=\"form-control\" />\n\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n              </form>\n            );\n          }} />\n    )\n}"]},"metadata":{},"sourceType":"module"}