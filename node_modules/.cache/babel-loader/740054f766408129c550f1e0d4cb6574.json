{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useGetSightQuery,useSaveSightMutation}from'../../../generated/graphql';import{useParams}from'react-router-dom';import{Editor}from'../form/Editor';import{MessageView}from'../../pageframe/global/Messages/MessageView';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{formatSight,newSight}from'./SightObject';import{SIGHT_IMAGE_UPLOAD_URL}from'../../../config';export var SightEditor=function SightEditor(props){var _useParams=useParams(),sightId=_useParams.sightId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMessage=_useState2[0],setshowMessage=_useState2[1];var _useGetSightQuery=useGetSightQuery({variables:{id:sightId?sightId:\"0\"}}),data=_useGetSightQuery.data,error=_useGetSightQuery.error;var _useSaveSightMutation=useSaveSightMutation(),_useSaveSightMutation2=_slicedToArray(_useSaveSightMutation,1),saveSight=_useSaveSightMutation2[0];function onSubmit(_x){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return saveSight({variables:{sight:formatSight(values)}});case 2:result=_context.sent;if(result){setshowMessage(true);}case 4:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}if(data&&data.getSight||sightId===\"0\"){var property=newSight;if(data===null||data===void 0?void 0:data.getSight){property=data.getSight;}return React.createElement(Editor,{entity:property,store:onSubmit,entityId:property.id,imageuploadurl:SIGHT_IMAGE_UPLOAD_URL},React.createElement(MessageView,{severity:\"success\",message:\"Die Daten wurden gespeichert\",show:showMessage}));}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}return React.createElement(LoadingAnimation,{message:\"Daten werden geladen ...\"});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/sights/SightEditor.tsx"],"names":["React","useState","useGetSightQuery","useSaveSightMutation","useParams","Editor","MessageView","LoadingAnimation","ErrorMessage","formatSight","newSight","SIGHT_IMAGE_UPLOAD_URL","SightEditor","props","sightId","showMessage","setshowMessage","variables","id","data","error","saveSight","onSubmit","values","sight","result","getSight","property"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAgBC,gBAAhB,CAAkCC,oBAAlC,KAA8D,4BAA9D,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,WAAT,CAAsBC,QAAtB,KAAsC,eAAtC,CACA,OAASC,sBAAT,KAAuC,iBAAvC,CAOA,MAAO,IAAMC,CAAAA,WAA4B,CAAG,QAA/BA,CAAAA,WAA+B,CAACC,KAAD,CAAW,gBAE/BT,SAAS,EAFsB,CAE3CU,OAF2C,YAE3CA,OAF2C,eAIbb,QAAQ,CAAC,KAAD,CAJK,wCAI5Cc,WAJ4C,eAI/BC,cAJ+B,qCAK7Bd,gBAAgB,CAAC,CACnCe,SAAS,CAAE,CACPC,EAAE,CAAEJ,OAAO,CAAGA,OAAH,CAAa,GADjB,CADwB,CAAD,CALa,CAK5CK,IAL4C,mBAK5CA,IAL4C,CAKtCC,KALsC,mBAKtCA,KALsC,2BAW/BjB,oBAAoB,EAXW,gEAW5CkB,SAX4C,mCAapCC,CAAAA,QAboC,oIAanD,iBAAwBC,MAAxB,mJACuBF,CAAAA,SAAS,CAAC,CACzBJ,SAAS,CAAE,CACPO,KAAK,CAAEf,WAAW,CAACc,MAAD,CADX,CADc,CAAD,CADhC,QACQE,MADR,eAMI,GAAGA,MAAH,CAAU,CACNT,cAAc,CAAC,IAAD,CAAd,CACH,CARL,sDAbmD,2CAyBnD,GAAIG,IAAI,EAAIA,IAAI,CAACO,QAAd,EAA4BZ,OAAO,GAAK,GAA3C,CAAiD,CAC7C,GAAIa,CAAAA,QAAQ,CAAGjB,QAAf,CACA,GAAGS,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEO,QAAT,CAAkB,CACdC,QAAQ,CAAGR,IAAI,CAACO,QAAhB,CACH,CAED,MACI,qBAAC,MAAD,EACI,MAAM,CAAEC,QADZ,CAEI,KAAK,CAAEL,QAFX,CAGI,QAAQ,CAAEK,QAAQ,CAACT,EAHvB,CAII,cAAc,CAAEP,sBAJpB,EAKI,oBAAC,WAAD,EAAa,QAAQ,CAAE,SAAvB,CAAkC,OAAO,CAAE,8BAA3C,CAA2E,IAAI,CAAEI,WAAjF,EALJ,CADJ,CASH,CAGD,GAAGK,KAAH,CAAS,CACL,MAAQ,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EAAR,CACH,CAED,MAAQ,qBAAC,gBAAD,EAAkB,OAAO,CAAE,0BAA3B,EAAR,CACH,CAhDM","sourcesContent":["import React, { useState } from 'react'\nimport { Sight, useGetSightQuery, useSaveSightMutation } from '../../../generated/graphql'\nimport { useParams } from 'react-router-dom';\nimport { Editor } from '../form/Editor';\nimport { MessageView } from '../../pageframe/global/Messages/MessageView';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { formatSight, newSight } from './SightObject';\nimport { SIGHT_IMAGE_UPLOAD_URL } from '../../../config';\n\n\ninterface Props {\n    \n}\n\nexport const SightEditor: React.FC<Props> = (props) => {\n\n    const { sightId } = useParams()\n\n    const [showMessage, setshowMessage] = useState(false);\n    const {data, error} = useGetSightQuery({\n        variables: {\n            id: sightId ? sightId : \"0\"\n        }\n    });\n    \n    const [saveSight] = useSaveSightMutation();\n\n    async function onSubmit(values: Sight) {     \n        var result = await saveSight({\n            variables: {\n                sight: formatSight(values)\n            }\n        });\n        if(result){\n            setshowMessage(true)\n        }\n    }\n\n    \n    if((data && data.getSight) || (sightId === \"0\")) {\n        var property = newSight;\n        if(data?.getSight){\n            property = data.getSight;\n        }\n        \n        return(\n            <Editor \n                entity={property} \n                store={onSubmit} \n                entityId={property.id}\n                imageuploadurl={SIGHT_IMAGE_UPLOAD_URL}>     \n                <MessageView severity={\"success\"} message={\"Die Daten wurden gespeichert\"} show={showMessage} />\n            </Editor>\n        )   \n    }\n\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>) \n    }\n   \n    return (<LoadingAnimation message={\"Daten werden geladen ...\"}/>)\n}"]},"metadata":{},"sourceType":"module"}