{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx\";\nimport React, { useState } from 'react';\nimport { MyBooking } from './myBooking/MyBooking';\nimport { PropertyList } from './propertyList/PropertyList';\nconst emptyBooking = {\n  selectedProperty: undefined,\n  arrivalDate: undefined,\n  departureDate: undefined\n};\nexport const BookingContext = React.createContext(emptyBooking);\nexport const BookingRouter = () => {\n  const [activeBookingProp, setActiveBookingProp] = useState();\n  const [propertySelected, setPropertySelected] = useState();\n\n  const bookingActiveListener = id => {\n    if (id) {\n      setActiveBookingProp(id);\n    } else {\n      setPropertySelected(undefined);\n    }\n  };\n\n  const selectedPropertyListener = property => {\n    setPropertySelected(property);\n    console.log(\"property selected \" + property.id);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(BookingContext.Provider, {\n    value: emptyBooking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(MyBooking, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(MyBooking, {\n    propertySelected: propertySelected,\n    bookingActiveListener: bookingActiveListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    propertyActive: activeBookingProp,\n    selectPropListener: selectedPropertyListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx"],"names":["React","useState","MyBooking","PropertyList","emptyBooking","selectedProperty","undefined","arrivalDate","departureDate","BookingContext","createContext","BookingRouter","activeBookingProp","setActiveBookingProp","propertySelected","setPropertySelected","bookingActiveListener","id","selectedPropertyListener","property","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAEC,SADD;AAEjBC,EAAAA,WAAW,EAAED,SAFI;AAGjBE,EAAAA,aAAa,EAAEF;AAHE,CAArB;AAMA,OAAO,MAAMG,cAAc,GAAGT,KAAK,CAACU,aAAN,CAAoBN,YAApB,CAAvB;AAGP,OAAO,MAAMO,aAA+B,GAAG,MAAM;AAEjD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,EAA1D;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,EAAxD;;AAEA,QAAMe,qBAAqB,GAAIC,EAAD,IAAe;AACzC,QAAGA,EAAH,EAAM;AACFJ,MAAAA,oBAAoB,CAACI,EAAD,CAApB;AAEH,KAHD,MAGO;AACHF,MAAAA,mBAAmB,CAACT,SAAD,CAAnB;AACH;AACJ,GAPD;;AASA,QAAMY,wBAAwB,GAAIC,QAAD,IAAkB;AAC/CJ,IAAAA,mBAAmB,CAACI,QAAD,CAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,QAAQ,CAACF,EAA5C;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEb,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAEU,gBAA7B;AAA+C,IAAA,qBAAqB,EAAEE,qBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,YAAD;AAAc,IAAA,cAAc,EAAEJ,iBAA9B;AAAiD,IAAA,kBAAkB,EAAEM,wBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAWH,CA9BM","sourcesContent":["import React, { useState } from 'react'\nimport { MyBooking } from './myBooking/MyBooking';\nimport { PropertyList } from './propertyList/PropertyList';\n\ninterface Props {\n    \n}\n\n\nconst emptyBooking = {\n    selectedProperty: undefined,\n    arrivalDate: undefined,\n    departureDate: undefined,\n}\n\nexport const BookingContext = React.createContext(emptyBooking);\n\n\nexport const BookingRouter:  React.FC<Props> = () => {\n\n    const [activeBookingProp, setActiveBookingProp] = useState();\n    const [propertySelected, setPropertySelected] = useState()\n\n    const bookingActiveListener = (id: number) =>{\n        if(id){\n            setActiveBookingProp(id);\n            \n        } else {\n            setPropertySelected(undefined);\n        } \n    }\n\n    const selectedPropertyListener = (property: any) =>{\n        setPropertySelected(property);\n        console.log(\"property selected \" + property.id)\n    }\n\n    return (\n        <div>\n            <BookingContext.Provider value={emptyBooking}>\n                <MyBooking ></MyBooking>\n                <PropertyList ></PropertyList>\n            </BookingContext.Provider>\n            <MyBooking propertySelected={propertySelected} bookingActiveListener={bookingActiveListener}></MyBooking>\n            <PropertyList propertyActive={activeBookingProp} selectPropListener={selectedPropertyListener}></PropertyList>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}