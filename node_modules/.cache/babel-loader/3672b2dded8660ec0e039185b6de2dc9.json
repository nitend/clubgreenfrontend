{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx\";\nimport React, { useState } from 'react';\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql';\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\nexport const BookingRouter = () => {\n  var arrival = new Date(Date.now());\n  var departure = new Date(Date.now());\n  var bookActiv = false;\n  var selectProp = null;\n  const {\n    data,\n    loading,\n    error\n  } = useMyBookingQuery();\n\n  if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n    bookActiv = true;\n    arrival = new Date(data.myBooking.from);\n    departure = new Date(data.myBooking.to);\n\n    if (data.myBooking.property) {\n      selectProp = data.myBooking.property;\n    }\n  }\n\n  const [selectedProp, setSelectedProp] = useState(selectProp);\n  const [bookingActive, setBookingActive] = useState(bookActiv);\n  const [arrivalDate, setArrivalDate] = useState(arrival);\n  const [departureDate, setDepartureDate] = useState(departure);\n  const [booking] = useCreateMyBookingMutation();\n\n  const bookPropListener = (from, to) => {\n    setArrivalDate(from);\n    setDepartureDate(to);\n    book(to.getTime(), from.getTime());\n  };\n\n  const cancleBookingListener = () => {\n    console.log(\"booking canceled\");\n  };\n\n  async function book(from, to) {\n    if (selectedProp) {\n      const response = await booking({\n        variables: {\n          from: from,\n          to: to,\n          propertyId: selectedProp.id\n        }\n      });\n      console.log(response);\n    }\n  }\n\n  const selectPropListener = property => {\n    setSelectedProp(property);\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"loading ....\");\n  }\n\n  if (error) {\n    console.log(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"err\");\n  }\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"no data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(MyBooking, {\n    bookingListener: bookPropListener,\n    cancleListener: cancleBookingListener,\n    arrivalDate: arrivalDate,\n    departureDate: departureDate,\n    property: selectedProp,\n    booking: bookingActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    selectPropListener: selectPropListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx"],"names":["React","useState","useMyBookingQuery","useCreateMyBookingMutation","MyBooking","PropertyList","BookingRouter","arrival","Date","now","departure","bookActiv","selectProp","data","loading","error","myBooking","from","to","property","selectedProp","setSelectedProp","bookingActive","setBookingActive","arrivalDate","setArrivalDate","departureDate","setDepartureDate","booking","bookPropListener","book","getTime","cancleBookingListener","console","log","response","variables","propertyId","id","selectPropListener"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql'\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\n\ninterface Props {\n    \n}\n\n\nexport const BookingRouter:  React.FC<Props> = () => {\n\n    var arrival = new Date(Date.now());\n    var departure = new Date(Date.now());\n    var bookActiv = false;\n    var selectProp = null;\n\n    const {data, loading, error} = useMyBookingQuery();\n\n    if(data && data?.myBooking){\n        bookActiv = true;\n        arrival = new Date(data.myBooking.from); \n        departure = new Date(data.myBooking.to); \n        if(data.myBooking.property){\n            selectProp = data.myBooking.property;\n        }\n    }\n\n    const [selectedProp, setSelectedProp] = useState(selectProp)\n    const [bookingActive, setBookingActive] = useState(bookActiv)\n    const [arrivalDate, setArrivalDate] = useState(arrival) \n    const [departureDate, setDepartureDate] = useState(departure)\n    \n    const [booking] = useCreateMyBookingMutation();\n\n    \n\n\n\n    const bookPropListener = (from: Date, to: Date) =>{\n        setArrivalDate(from);\n        setDepartureDate(to);\n        book(to.getTime(), from.getTime());\n    }\n    \n    const cancleBookingListener = () =>{\n        console.log(\"booking canceled\")\n    }\n\n    async function book(from: number, to: number) {\n        if(selectedProp){\n            const response = await booking({\n                variables: {\n                    from: from,\n                    to: to,\n                    propertyId: selectedProp.id\n                }\n            })\n            console.log(response)\n        }\n    }\n\n    const selectPropListener = (property: any) =>{\n        setSelectedProp(property);\n    }\n\n\n    if(loading){\n        return <div>\n            loading ....\n        </div>\n    }\n\n    if(error){\n        console.log(error)\n        return <div>err</div>\n    }\n\n    if(!data){\n        return <div>\n            no data\n        </div>\n    }\n\n\n    \n    return (\n        <div>\n            <MyBooking \n                bookingListener={bookPropListener} \n                cancleListener={cancleBookingListener}\n                arrivalDate={arrivalDate} \n                departureDate={departureDate} \n                property={selectedProp}\n                booking={bookingActive}></MyBooking>\n            <PropertyList selectPropListener={selectPropListener}></PropertyList>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}