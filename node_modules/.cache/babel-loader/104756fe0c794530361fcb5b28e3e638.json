{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/context/checkoutcontext/CheckoutContext.tsx\";\nimport React, { useState, useCallback } from \"react\";\nexport const initialCheckoutCtxt = {\n  product: undefined,\n  paymentMethod: undefined,\n  address: undefined,\n  personData: undefined,\n  setProduct: product => {},\n  setAddress: address => {},\n  setPersonData: personData => {},\n  setPaymentMethod: product => {}\n};\nexport const CheckoutContext = React.createContext(initialCheckoutCtxt);\nexport const CheckoutContextProvider = props => {\n  const [product, setpproduct] = useState();\n  const [paymentMethod, setpaymentMethod] = useState();\n  const [address, setaddress] = useState();\n  const [personData, setpersonData] = useState();\n  const setProduct = useCallback(product => {\n    setpproduct(product);\n  }, []);\n  const setPaymentMethod = useCallback(paymentMethod => {\n    setpaymentMethod(paymentMethod);\n  }, []);\n  const setAddress = useCallback(address => {\n    setaddress(address);\n  }, []);\n  const setPersonData = useCallback(personData => {\n    setpersonData(personData);\n  }, []);\n  const initValue = initialCheckoutCtxt;\n  initValue.product = product;\n  initValue.paymentMethod = paymentMethod;\n  initValue.address = address;\n  initValue.personData = personData;\n  initValue.setProduct = setProduct;\n  initValue.setPaymentMethod = setPaymentMethod;\n  initValue.setAddress = setAddress;\n  initValue.setPersonData = setPersonData;\n  return React.createElement(CheckoutContext.Provider, {\n    value: initValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/context/checkoutcontext/CheckoutContext.tsx"],"names":["React","useState","useCallback","initialCheckoutCtxt","product","undefined","paymentMethod","address","personData","setProduct","setAddress","setPersonData","setPaymentMethod","CheckoutContext","createContext","CheckoutContextProvider","props","setpproduct","setpaymentMethod","setaddress","setpersonData","initValue","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AA6BA,OAAO,MAAMC,mBAAiC,GAAG;AAC7CC,EAAAA,OAAO,EAAEC,SADoC;AAE7CC,EAAAA,aAAa,EAAED,SAF8B;AAG7CE,EAAAA,OAAO,EAAEF,SAHoC;AAI7CG,EAAAA,UAAU,EAAEH,SAJiC;AAK7CI,EAAAA,UAAU,EAAGL,OAAD,IAAsB,CAAE,CALS;AAM7CM,EAAAA,UAAU,EAAGH,OAAD,IAAsB,CAAE,CANS;AAO7CI,EAAAA,aAAa,EAAGH,UAAD,IAA4B,CAAE,CAPA;AAQ7CI,EAAAA,gBAAgB,EAAGR,OAAD,IAA4B,CAAE;AARH,CAA1C;AAWP,OAAO,MAAMS,eAAe,GAAGb,KAAK,CAACc,aAAN,CAAkCX,mBAAlC,CAAxB;AAEP,OAAO,MAAMY,uBAAiC,GAAIC,KAAD,IAAW;AAExD,QAAM,CAACZ,OAAD,EAAUa,WAAV,IAAyBhB,QAAQ,EAAvC;AACA,QAAM,CAACK,aAAD,EAAgBY,gBAAhB,IAAoCjB,QAAQ,EAAlD;AACA,QAAM,CAACM,OAAD,EAAUY,UAAV,IAAwBlB,QAAQ,EAAtC;AACA,QAAM,CAACO,UAAD,EAAaY,aAAb,IAA8BnB,QAAQ,EAA5C;AAIA,QAAMQ,UAAU,GAAGP,WAAW,CAAEE,OAAD,IAA4B;AACvDa,IAAAA,WAAW,CAACb,OAAD,CAAX;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAIA,QAAMQ,gBAAgB,GAAGV,WAAW,CAAEI,aAAD,IAAwC;AACzEY,IAAAA,gBAAgB,CAACZ,aAAD,CAAhB;AACH,GAFmC,EAElC,EAFkC,CAApC;AAIA,QAAMI,UAAU,GAAGR,WAAW,CAAEK,OAAD,IAA4B;AACvDY,IAAAA,UAAU,CAACZ,OAAD,CAAV;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAIA,QAAMI,aAAa,GAAGT,WAAW,CAAEM,UAAD,IAAkC;AAChEY,IAAAA,aAAa,CAACZ,UAAD,CAAb;AACH,GAFgC,EAE/B,EAF+B,CAAjC;AAID,QAAMa,SAAS,GAAGlB,mBAAlB;AACCkB,EAAAA,SAAS,CAACjB,OAAV,GAAoBA,OAApB;AACAiB,EAAAA,SAAS,CAACf,aAAV,GAA0BA,aAA1B;AACAe,EAAAA,SAAS,CAACd,OAAV,GAAoBA,OAApB;AACAc,EAAAA,SAAS,CAACb,UAAV,GAAuBA,UAAvB;AACAa,EAAAA,SAAS,CAACZ,UAAV,GAAuBA,UAAvB;AACAY,EAAAA,SAAS,CAACT,gBAAV,GAA6BA,gBAA7B;AACAS,EAAAA,SAAS,CAACX,UAAV,GAAuBA,UAAvB;AACAW,EAAAA,SAAS,CAACV,aAAV,GAA0BA,aAA1B;AAED,SACK,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEU,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACM,QADX,CADL;AAKF,CAxCM","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Product } from \"../../generated/graphql\";\nimport { PaymentMethod } from \"@stripe/stripe-js\";\n\n\ntype Address = {\n    street:  string, \n    number: number, \n    postalCode: string, \n    city: string }\n\ntype PersonData = {\n    firstName: string,\n    surname: string,\n    phoneNumber: string\n}\n\n\ntype CheckoutCtxt = {\n    product: Product | undefined\n    paymentMethod: PaymentMethod | undefined\n    address: Address | undefined\n    personData: PersonData | undefined\n    setProduct: (product: Product) => void \n    setAddress: (address: Address) => void\n    setPersonData: (personData: PersonData) => void\n    setPaymentMethod: (product: PaymentMethod) => void \n}\n\nexport const initialCheckoutCtxt: CheckoutCtxt = {\n    product: undefined,\n    paymentMethod: undefined,\n    address: undefined,\n    personData: undefined,\n    setProduct: (product: Product) => {},\n    setAddress: (address: Address) => {},\n    setPersonData: (personData: PersonData) => {},\n    setPaymentMethod: (product: PaymentMethod) => {}\n}\n\nexport const CheckoutContext = React.createContext<CheckoutCtxt>(initialCheckoutCtxt);\n\nexport const CheckoutContextProvider: React.FC = (props) => {\n\n    const [product, setpproduct] = useState()\n    const [paymentMethod, setpaymentMethod] = useState()\n    const [address, setaddress] = useState()\n    const [personData, setpersonData] = useState()\n\n \n\n    const setProduct = useCallback((product: Product): void => {\n        setpproduct(product);\n    },[])\n\n    const setPaymentMethod = useCallback((paymentMethod: PaymentMethod): void => {\n        setpaymentMethod(paymentMethod);\n    },[])\n\n    const setAddress = useCallback((address: Address): void => {\n        setaddress(address);\n    },[])\n\n    const setPersonData = useCallback((personData: PersonData): void => {\n        setpersonData(personData);\n    },[])\n\n   const initValue = initialCheckoutCtxt;\n    initValue.product = product;\n    initValue.paymentMethod = paymentMethod;\n    initValue.address = address;\n    initValue.personData = personData;\n    initValue.setProduct = setProduct;\n    initValue.setPaymentMethod = setPaymentMethod;\n    initValue.setAddress = setAddress;\n    initValue.setPersonData = setPersonData\n\n   return (\n        <CheckoutContext.Provider value={initValue}> \n            {props.children}\n        </CheckoutContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}