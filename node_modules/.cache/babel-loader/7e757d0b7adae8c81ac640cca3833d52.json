{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/DateSelector.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./customcss.css\";\nimport moment from \"moment\";\nimport { BookingContext } from \"../../BookingContext\";\nexport const DateSelector = props => {\n  const {\n    arrivalDate,\n    departureDate,\n    setArrivalDate,\n    setDepartureDate\n  } = useContext(BookingContext);\n  const [focusedInput, setFocusedInput] = useState();\n\n  function onDateChange(start, end) {\n    setArrivalDate(start);\n    setDepartureDate(end);\n  }\n\n  function onFocusChange(focusedInput) {\n    setFocusedInput(focusedInput);\n  }\n\n  const isOutsideRange = day => {\n    return day.isBefore(moment());\n  };\n\n  const isDayBlocked = day => {\n    console.log(props.blockedDates.length + ' date ');\n    var date = props.blockedDates.find(data => {\n      var istrue = day.isSame(data, 'd');\n      return istrue;\n    });\n\n    if (date) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(DateRangePicker, {\n    startDatePlaceholderText: \"Anreise\",\n    endDatePlaceholderText: \"Abfahrt\",\n    startDate: arrivalDate,\n    startDateId: \"your_unique_start_date_id\",\n    endDate: departureDate,\n    endDateId: \"your_unique_end_date_id\",\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      onDateChange(startDate, endDate);\n    },\n    isDayBlocked: isDayBlocked,\n    focusedInput: focusedInput,\n    displayFormat: () => \"DD. MMMM YYYY\",\n    onFocusChange: onFocusChange,\n    isOutsideRange: isOutsideRange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/DateSelector.tsx"],"names":["React","useState","useContext","DateRangePicker","moment","BookingContext","DateSelector","props","arrivalDate","departureDate","setArrivalDate","setDepartureDate","focusedInput","setFocusedInput","onDateChange","start","end","onFocusChange","isOutsideRange","day","isBefore","isDayBlocked","console","log","blockedDates","length","date","find","data","istrue","isSame","startDate","endDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,OAAO,sCAAP;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AASA,OAAO,MAAMC,YAA8B,GAAIC,KAAD,IAAW;AAErD,QAAM;AAACC,IAAAA,WAAD;AACJC,IAAAA,aADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA;AAHI,MAGgBT,UAAU,CAACG,cAAD,CAHhC;AAMA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;;AAGA,WAASa,YAAT,CAAsBC,KAAtB,EAA4CC,GAA5C,EAAgE;AACxDN,IAAAA,cAAc,CAACK,KAAD,CAAd;AACAJ,IAAAA,gBAAgB,CAACK,GAAD,CAAhB;AACL;;AAED,WAASC,aAAT,CAAuBL,YAAvB,EAA0C;AACxCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD;;AAED,QAAMM,cAAc,GAAIC,GAAD,IAAiB;AACtC,WAAOA,GAAG,CAACC,QAAJ,CAAahB,MAAM,EAAnB,CAAP;AACD,GAFD;;AAIA,QAAMiB,YAAY,GAAIF,GAAD,IAAiB;AACpCG,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACiB,YAAN,CAAmBC,MAAnB,GAA4B,QAAxC;AACA,QAAIC,IAAI,GAAGnB,KAAK,CAACiB,YAAN,CAAmBG,IAAnB,CAAyBC,IAAD,IAAU;AACzC,UAAIC,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAWF,IAAX,EAAiB,GAAjB,CAAb;AACA,aAAOC,MAAP;AACH,KAHU,CAAX;;AAIA,QAAGH,IAAH,EAAQ;AACN,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GAVD;;AAaF,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AACI,IAAA,wBAAwB,EAAE,SAD9B;AAEI,IAAA,sBAAsB,EAAE,SAF5B;AAGI,IAAA,SAAS,EAAElB,WAHf;AAII,IAAA,WAAW,EAAC,2BAJhB;AAKI,IAAA,OAAO,EAAEC,aALb;AAMI,IAAA,SAAS,EAAC,yBANd;AAOI,IAAA,aAAa,EAAE,CAAC;AAAEsB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAD,KAA4B;AAAElB,MAAAA,YAAY,CAAEiB,SAAF,EAAaC,OAAb,CAAZ;AAAmC,KAPpF;AAQI,IAAA,YAAY,EAAEX,YARlB;AASI,IAAA,YAAY,EAAET,YATlB;AAUI,IAAA,aAAa,EAAE,MAAM,eAVzB;AAWI,IAAA,aAAa,EAAEK,aAXnB;AAYI,IAAA,cAAc,EAAEC,cAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR;AAiBH,CAtDM","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport \"react-dates/initialize\"\nimport \"react-dates/lib/css/_datepicker.css\"\nimport {DateRangePicker} from \"react-dates\" \nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./customcss.css\"\nimport moment, { Moment } from \"moment\"\nimport { BookingContext } from \"../../BookingContext\"\n\n\n\ninterface Props {\n    blockedDates: Moment[]\n}\n\n\nexport const DateSelector:  React.FC<Props> = (props) => {\n\n    const {arrivalDate, \n      departureDate,\n      setArrivalDate,\n      setDepartureDate} = useContext(BookingContext);\n\n \n    const [focusedInput, setFocusedInput] = useState();\n\n\n    function onDateChange(start: Moment | null, end: Moment | null) {\n            setArrivalDate(start);\n            setDepartureDate(end);\n      }\n    \n      function onFocusChange(focusedInput: any) {\n        setFocusedInput(focusedInput);\n      }\n\n      const isOutsideRange = (day: Moment) => {        \n        return day.isBefore(moment()) \n      }\n\n      const isDayBlocked = (day: Moment) => {\n        console.log(props.blockedDates.length + ' date ');\n        var date = props.blockedDates.find((data) => {\n            var istrue = day.isSame(data, 'd');\n            return istrue;\n        })\n        if(date){\n          return true\n        }\n        return false;\n      } \n      \n\n    return (\n            <div>   \n                <DateRangePicker \n                    startDatePlaceholderText={\"Anreise\"}\n                    endDatePlaceholderText={\"Abfahrt\"}\n                    startDate={arrivalDate}\n                    startDateId=\"your_unique_start_date_id\"\n                    endDate={departureDate}\n                    endDateId=\"your_unique_end_date_id\"\n                    onDatesChange={({ startDate, endDate }) => { onDateChange( startDate, endDate )}}\n                    isDayBlocked={isDayBlocked}\n                    focusedInput={focusedInput}\n                    displayFormat={() => \"DD. MMMM YYYY\"}\n                    onFocusChange={onFocusChange}\n                    isOutsideRange={isOutsideRange}/>               \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}