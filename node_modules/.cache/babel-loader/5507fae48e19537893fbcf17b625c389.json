{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/login/LoginForm.tsx\";\nimport React, { useState } from \"react\";\nimport { useLoginMutation, MeDocument } from \"../../../../../generated/graphql\";\nimport { setAccessToken } from \"../../../../../accessToken\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { Formik } from 'formik';\nimport { useHistory } from \"react-router-dom\";\nexport const LoginForm = () => {\n  const history = useHistory();\n  const [Login] = useLoginMutation();\n  const [error, setError] = useState();\n\n  const loginFunc = async values => {\n    try {\n      const response = await Login({\n        variables: values,\n        update: (store, {\n          data\n        }) => {\n          if (!data) {\n            return null;\n          }\n\n          store.writeQuery({\n            query: MeDocument,\n            data: {\n              me: data.login.user\n            }\n          });\n        }\n      });\n\n      if (response && response.data) {\n        setAccessToken(response.data.login.accessToken);\n        history.push('/booking');\n      }\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      acceptTerms: false\n    },\n    onSubmit: loginFunc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props => {\n    const {\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: error,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: error,\n      fullWidth: true,\n      id: \"password\",\n      label: \"Passwort\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        margin: 'auto',\n        display: 'block',\n        marginTop: '24px'\n      },\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"anmelden\"));\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/login/LoginForm.tsx"],"names":["React","useState","useLoginMutation","MeDocument","setAccessToken","TextField","Button","Formik","useHistory","LoginForm","history","Login","error","setError","loginFunc","values","response","variables","update","store","data","writeQuery","query","me","login","user","accessToken","push","maxWidth","margin","email","password","acceptTerms","props","handleChange","handleBlur","handleSubmit","display","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useLoginMutation, MeDocument, MeQuery } from \"../../../../../generated/graphql\";\nimport { setAccessToken } from \"../../../../../accessToken\";\nimport { TextField, Button} from \"@material-ui/core\";\nimport {Formik} from 'formik'\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n\n}\n\nexport const LoginForm: React.FC<Props> = () => {\n    const history = useHistory();\n    const [Login] = useLoginMutation();\n    const [error, setError] = useState()\n\n    const loginFunc = async (values: {email: string, password: string}) => {\n        try{\n            const response = await Login({\n                variables: values,\n                update: (store, {data}) => {\n                    if(!data){\n                        return null;\n                    }\n                    store.writeQuery<MeQuery>({\n                        query: MeDocument,\n                        data: {\n                            me: data.login.user\n                        }\n                    })  \n                }\n            })\n            if(response && response.data){\n                setAccessToken(response.data.login.accessToken)\n                history.push('/booking')\n            } \n        } catch(error){\n            setError(true);\n        }\n       \n    }\n\n    return (\n        <div style={{maxWidth: '400px', margin: 'auto'}}>\n            <Formik initialValues={{\n                email: \"\",\n                password: \"\",\n                acceptTerms: false\n            }} \n            onSubmit={loginFunc} >\n                {props => {\n                const {\n                values,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                } = props;\n                return (\n                    <form onSubmit={handleSubmit}>\n                            <TextField \n                                error={error} \n                                fullWidth={true}\n                                id=\"email\" \n                                label=\"Email\"\n                                value={values.email} \n                                onChange={handleChange} \n                                onBlur={handleBlur}\n                            />\n                            <TextField \n                                error={error}\n                                fullWidth={true}\n                                id=\"password\" \n                                label=\"Passwort\"\n                                type=\"password\"\n                                value={values.password} \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                            />\n                            <Button variant={\"outlined\"} style={{margin: 'auto', display: 'block', marginTop: '24px'}} type=\"submit\">anmelden</Button>                          \n                    </form>);\n            }}\n            </Formik>\n            </div>)\n};"]},"metadata":{},"sourceType":"module"}