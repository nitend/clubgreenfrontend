{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/container/addresseditor/index.tsx\";\nimport React, { useState } from \"react\";\nimport { AddressForm } from \"../../components/addressform\";\nimport { useMeQuery, useUpdateUserAddressMutation } from \"../../generated/graphql\";\nimport { ErrorMessage } from \"../../pages/pageframe/global/Messages/ErrorMessage\";\nimport { LoadingAnimation } from \"../../pages/pageframe/global/Messages/LoadingAnimation\";\nimport { SuccessMessage } from \"../../pages/pageframe/global/Messages/SucessMessage\";\nexport const AddressEditor = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useMeQuery();\n  const [useraddress] = useUpdateUserAddressMutation();\n  const [addressUpdated, setaddressUpdated] = useState(false);\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      show: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  const handleSaveAddress = async address => {\n    console.log(\"onSubmit \" + JSON.stringify(address));\n    const result = await useraddress({\n      variables: {\n        useraddress: address\n      }\n    });\n\n    if (result) {\n      setaddressUpdated(true);\n    }\n  };\n\n  if (data && data.me) {\n    const user = data.me;\n    const address = {\n      streetName: user.street ? user.street : \"\",\n      streetNumber: user.streetNumber ? user.streetNumber : \"\",\n      postalCode: user.postalcode ? user.postalcode : \"\",\n      town: user.town ? user.town : \"\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(AddressForm, {\n      values: address,\n      onSubmit: handleSaveAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(SuccessMessage, {\n      response: \"Neue Adresse wurden gespeichert.\",\n      show: addressUpdated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: \"Daten werden geladen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/container/addresseditor/index.tsx"],"names":["React","useState","AddressForm","useMeQuery","useUpdateUserAddressMutation","ErrorMessage","LoadingAnimation","SuccessMessage","AddressEditor","data","loading","error","useraddress","addressUpdated","setaddressUpdated","handleSaveAddress","address","console","log","JSON","stringify","result","variables","me","user","streetName","street","streetNumber","postalCode","postalcode","town"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAkBC,WAAlB,QAAqC,8BAArC;AACA,SAASC,UAAT,EAAgDC,4BAAhD,QAAoF,yBAApF;AACA,SAASC,YAAT,QAA6B,oDAA7B;AAEA,SAASC,gBAAT,QAAiC,wDAAjC;AACA,SAASC,cAAT,QAA+B,qDAA/B;AAMA,OAAO,MAAMC,aAA8B,GAAG,MAAM;AAEhD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,UAAU,EAAzC;AACA,QAAM,CAACS,WAAD,IAAgBR,4BAA4B,EAAlD;AAEA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;;AAEA,MAAGU,KAAH,EAAS;AACL,WAAQ,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,IAAI,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAGD,QAAMI,iBAAiB,GAAG,MAAOC,OAAP,IAA4B;AAElDC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAaC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAzB;AACD,UAAMK,MAAM,GAAG,MAAMT,WAAW,CAAC;AAC5BU,MAAAA,SAAS,EAAE;AACPV,QAAAA,WAAW,EAAEI;AADN;AADiB,KAAD,CAAhC;;AAKC,QAAGK,MAAH,EAAU;AACNP,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;AACJ,GAXD;;AAaA,MAAGL,IAAI,IAAIA,IAAI,CAACc,EAAhB,EAAmB;AACf,UAAMC,IAAI,GAAGf,IAAI,CAACc,EAAlB;AAEA,UAAMP,OAAgB,GAAG;AACrBS,MAAAA,UAAU,EAAED,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACE,MAAnB,GAA4B,EADnB;AAErBC,MAAAA,YAAY,EAAEH,IAAI,CAACG,YAAL,GAAoBH,IAAI,CAACG,YAAzB,GAAwC,EAFjC;AAGrBC,MAAAA,UAAU,EAAEJ,IAAI,CAACK,UAAL,GAAkBL,IAAI,CAACK,UAAvB,GAAoC,EAH3B;AAIrBC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAjB,GAAwB;AAJT,KAAzB;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAEd,OAArB;AAA8B,MAAA,QAAQ,EAAED,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAE,kCAA1B;AAA8D,MAAA,IAAI,EAAEF,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AACD,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA/CM","sourcesContent":["import React, { useState } from \"react\";\nimport { Address, AddressForm } from \"../../components/addressform\";\nimport { useMeQuery, useUpdateUserNameMutation, useUpdateUserAddressMutation } from \"../../generated/graphql\";\nimport { ErrorMessage } from \"../../pages/pageframe/global/Messages/ErrorMessage\";\nimport { NameForm, NameData } from \"../../components/nameform\";\nimport { LoadingAnimation } from \"../../pages/pageframe/global/Messages/LoadingAnimation\";\nimport { SuccessMessage } from \"../../pages/pageframe/global/Messages/SucessMessage\";\n\ninterface Props {\n\n}\n\nexport const AddressEditor: React.FC<Props> = () => {\n\n    const {data, loading, error} = useMeQuery();\n    const [useraddress] = useUpdateUserAddressMutation();\n\n    const [addressUpdated, setaddressUpdated] = useState(false)\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>)\n    }\n\n\n    const handleSaveAddress = async (address: Address) => {\n\n        console.log(\"onSubmit \"+ JSON.stringify(address))\n       const result = await useraddress({\n            variables: {\n                useraddress: address\n            }\n        })\n        if(result){\n            setaddressUpdated(true) \n        }\n    }\n\n    if(data && data.me){\n        const user = data.me;\n\n        const address: Address = {\n            streetName: user.street ? user.street : \"\",\n            streetNumber: user.streetNumber ? user.streetNumber : \"\",\n            postalCode: user.postalcode ? user.postalcode : \"\",\n            town: user.town ? user.town : \"\" \n        }\n\n\n        return (\n            <div>\n                <AddressForm values={address} onSubmit={handleSaveAddress}/>\n                <SuccessMessage response={\"Neue Adresse wurden gespeichert.\"} show={addressUpdated} /> \n            </div>\n            \n        )\n    }\n    return (\n        <LoadingAnimation message={\"Daten werden geladen\"} />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}