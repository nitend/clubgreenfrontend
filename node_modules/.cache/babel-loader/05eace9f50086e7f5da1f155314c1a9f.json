{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/TravelDatesPicker.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useBookingsByPropertyQuery } from '../../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { generateBlockedDaysList } from './BlockedDatesConverter';\nexport const TravelDatesPicker = props => {\n  if (!props.propertyId) {\n    props.propertyId = 0;\n  }\n\n  const [blockedDates, setBlockedDates] = useState();\n  const {\n    data,\n    loading,\n    error\n  } = useBookingsByPropertyQuery({\n    variables: {\n      propertyId: props.propertyId\n    }\n  });\n  console.log(loading);\n  console.log(error);\n  var bookings;\n\n  if (data && data.activeBookingsForProperty) {\n    bookings = data.activeBookingsForProperty;\n  }\n\n  useEffect(() => {\n    if (bookings) {\n      generateBlockedDaysList(bookings).then(data => {\n        setBlockedDates(data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [bookings]);\n  return React.createElement(DateSelector, {\n    blockedDates: blockedDates,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/TravelDatesPicker.tsx"],"names":["React","useState","useEffect","useBookingsByPropertyQuery","DateSelector","generateBlockedDaysList","TravelDatesPicker","props","propertyId","blockedDates","setBlockedDates","data","loading","error","variables","console","log","bookings","activeBookingsForProperty","then","catch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,0BAAT,QAAoD,+BAApD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,uBAAT,QAAwC,yBAAxC;AAMA,OAAO,MAAMC,iBAAmC,GAAIC,KAAD,IAAW;AAE1D,MAAG,CAACA,KAAK,CAACC,UAAV,EAAqB;AACjBD,IAAAA,KAAK,CAACC,UAAN,GAAmB,CAAnB;AACH;;AAED,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AACA,QAAM;AAACU,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBV,0BAA0B,CAAC;AAACW,IAAAA,SAAS,EAAC;AAACN,MAAAA,UAAU,EAAED,KAAK,CAACC;AAAnB;AAAX,GAAD,CAAzD;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,MAAII,QAAJ;;AACA,MAAGN,IAAI,IAAIA,IAAI,CAACO,yBAAhB,EAA0C;AACtCD,IAAAA,QAAQ,GAAGN,IAAI,CAACO,yBAAhB;AACH;;AAGDhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,QAAH,EAAY;AACRZ,MAAAA,uBAAuB,CAACY,QAAD,CAAvB,CAAkCE,IAAlC,CAAwCR,IAAD,IAAU;AAACD,QAAAA,eAAe,CAACC,IAAD,CAAf;AAAsB,OAAxE,EAA0ES,KAA1E,CAAiFP,KAAD,IAAW;AAACE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAAmB,OAA/G;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,CAJM,CAAT;AAMA,SACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAER,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIH,CA5BM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport moment, { Moment } from 'moment'\nimport { useBookingsByPropertyQuery, Booking } from '../../../../generated/graphql'\nimport { DateSelector } from './DateSelector'\nimport { generateBlockedDaysList } from './BlockedDatesConverter'\n\ninterface Props {\n    propertyId: number | undefined\n}\n\nexport const TravelDatesPicker:  React.FC<Props> = (props) => {\n\n    if(!props.propertyId){\n        props.propertyId = 0;\n    }\n\n    const [blockedDates, setBlockedDates] = useState()\n    const {data, loading, error} = useBookingsByPropertyQuery({variables:{propertyId: props.propertyId}})\n\n    console.log(loading);\n    console.log(error);\n\n    var bookings: {id: number};\n    if(data && data.activeBookingsForProperty){\n        bookings = data.activeBookingsForProperty;\n    }\n\n    \n    useEffect(() => {\n        if(bookings){\n            generateBlockedDaysList(bookings).then((data) => {setBlockedDates(data)}).catch((error) => {console.log(error)})\n        }       \n    }, [bookings])\n   \n    return  (\n        <DateSelector blockedDates={blockedDates} />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}