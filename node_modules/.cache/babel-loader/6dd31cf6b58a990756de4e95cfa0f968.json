{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx\";\nimport React, { useState } from 'react';\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql';\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\nexport const BookingRouter = () => {\n  const [selectedProp, setSelectedProp] = useState();\n  const [bookingActive, setBookingActive] = useState(false);\n  const [arrivalDate, setArrivalDate] = useState(new Date(Date.now()));\n  const [departureDate, setDepartureDate] = useState(new Date(Date.now()));\n  const [booking] = useCreateMyBookingMutation();\n  const {\n    data,\n    loading,\n    error\n  } = useMyBookingQuery();\n\n  if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n    setBookingActive(true);\n    setArrivalDate(new Date(data.myBooking.from));\n    setDepartureDate(new Date(data.myBooking.to));\n\n    if (data.myBooking.property) {\n      setSelectedProp(data.myBooking.property);\n    }\n  }\n\n  const bookPropListener = (from, to) => {\n    book(to, from);\n  };\n\n  const cancleBookingListener = () => {\n    console.log(\"booking canceled\");\n  };\n\n  async function book(from, to) {\n    if (selectedProp) {\n      var propOb = selectedProp;\n      const response = await booking({\n        variables: {\n          from: from,\n          to: to,\n          propertyId: 1\n        }\n      });\n      console.log(response);\n    }\n  }\n\n  const selectPropListener = property => {\n    setSelectedProp(property);\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"loading ....\");\n  }\n\n  if (error) {\n    console.log(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"err\");\n  }\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"no data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(MyBooking, {\n    bookingListener: bookPropListener,\n    cancleListener: cancleBookingListener,\n    arrivalDate: arrivalDate,\n    departureDate: departureDate,\n    property: selectedProp,\n    booking: bookingActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    selectPropListener: selectPropListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx"],"names":["React","useState","useMyBookingQuery","useCreateMyBookingMutation","MyBooking","PropertyList","BookingRouter","selectedProp","setSelectedProp","bookingActive","setBookingActive","arrivalDate","setArrivalDate","Date","now","departureDate","setDepartureDate","booking","data","loading","error","myBooking","from","to","property","bookPropListener","book","cancleBookingListener","console","log","propOb","response","variables","propertyId","selectPropListener"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql'\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\n\ninterface Props {\n    \n}\n\n\nexport const BookingRouter:  React.FC<Props> = () => {\n\n    const [selectedProp, setSelectedProp] = useState()\n    const [bookingActive, setBookingActive] = useState(false)\n    const [arrivalDate, setArrivalDate] = useState(new Date(Date.now())) \n    const [departureDate, setDepartureDate] = useState(new Date(Date.now()))\n    \n    const [booking] = useCreateMyBookingMutation();\n\n    const {data, loading, error} = useMyBookingQuery();\n    if(data && data?.myBooking){\n        setBookingActive(true)\n      setArrivalDate(new Date(data.myBooking.from)) \n      setDepartureDate(new Date(data.myBooking.to)) \n      if(data.myBooking.property){\n        setSelectedProp(data.myBooking.property)\n      }\n    }\n\n    const bookPropListener = (from: number, to: number) =>{\n        book(to, from);\n    }\n    \n    const cancleBookingListener = () =>{\n        console.log(\"booking canceled\")\n    }\n\n    async function book(from: number, to: number) {\n        if(selectedProp){\n            var propOb: any = selectedProp;\n            const response = await booking({\n                variables: {\n                    from: from,\n                    to: to,\n                    propertyId: 1\n                }\n            })\n            console.log(response)\n        }\n    }\n\n    const selectPropListener = (property: any) =>{\n        setSelectedProp(property);\n    }\n\n\n    if(loading){\n        return <div>\n            loading ....\n        </div>\n    }\n\n    if(error){\n        console.log(error)\n        return <div>err</div>\n    }\n\n    if(!data){\n        return <div>\n            no data\n        </div>\n    }\n\n\n    \n    return (\n        <div>\n            <MyBooking \n                bookingListener={bookPropListener} \n                cancleListener={cancleBookingListener}\n                arrivalDate={arrivalDate} \n                departureDate={departureDate} \n                property={selectedProp}\n                booking={bookingActive}></MyBooking>\n            <PropertyList selectPropListener={selectPropListener}></PropertyList>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}