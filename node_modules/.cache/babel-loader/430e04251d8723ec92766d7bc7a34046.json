{"ast":null,"code":"import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,TextField,Grid}from'@material-ui/core';import{Formik,Form}from'formik';export var EditorForm=function EditorForm(props){return React.createElement(Formik,{initialValues:props.values,onSubmit:props.onSubmit,enableReinitialize:true},function(_ref){var values=_ref.values,handleChange=_ref.handleChange,handleBlur=_ref.handleBlur;return React.createElement(Form,null,React.createElement(Grid,{container:true,direction:\"column\",spacing:4},Object.entries(values).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];if(key!==\"id\"&&key!==\"__typename\"&&key!==\"images\"){return React.createElement(Grid,{item:true,key:key},React.createElement(TextField,{name:key,label:key,value:value?value:\"\",onChange:handleChange,onBlur:handleBlur}));}}),React.createElement(Grid,{item:true},React.createElement(Button,{variant:\"contained\",type:\"submit\"},\"speichern\"))));});};/*       \n<pre>\n{JSON.stringify(values, null, 2)}\n</pre>\n*/","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/form/EditorForm.tsx"],"names":["React","Button","TextField","Grid","Formik","Form","EditorForm","props","values","onSubmit","handleChange","handleBlur","Object","entries","map","key","value"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,IAA5B,KAAwC,mBAAxC,CACA,OAASC,MAAT,CAAkBC,IAAlB,KAA6B,QAA7B,CAOA,MAAO,IAAMC,CAAAA,UAA2B,CAAG,QAA9BA,CAAAA,UAA8B,CAACC,KAAD,CAAW,CAGlD,MACI,qBAAC,MAAD,EAAQ,aAAa,CAAEA,KAAK,CAACC,MAA7B,CAAqC,QAAQ,CAAED,KAAK,CAACE,QAArD,CAA+D,kBAAkB,CAAE,IAAnF,EACK,kBAAED,CAAAA,MAAF,MAAEA,MAAF,CAAUE,YAAV,MAAUA,YAAV,CAAwBC,UAAxB,MAAwBA,UAAxB,OACG,qBAAC,IAAD,MACA,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,CAAmC,OAAO,CAAE,CAA5C,EACSC,MAAM,CAACC,OAAP,CAAeL,MAAf,EAAuBM,GAAvB,CAA2B,eAAkB,mCAAhBC,GAAgB,UAAXC,KAAW,UAE1C,GAAGD,GAAG,GAAK,IAAR,EAAgBA,GAAG,GAAK,YAAxB,EAAwCA,GAAG,GAAK,QAAnD,CAA4D,CACxD,MAAO,qBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,GAAG,CAAEA,GAAhB,EACK,oBAAC,SAAD,EACA,IAAI,CAAEA,GADN,CAEA,KAAK,CAAEA,GAFP,CAGA,KAAK,CAAEC,KAAK,CAAGA,KAAH,CAAW,EAHvB,CAIA,QAAQ,CAAEN,YAJV,CAKA,MAAM,CAAEC,UALR,EADL,CAAP,CAUH,CACA,CAdJ,CADT,CAiBQ,oBAAC,IAAD,EAAM,IAAI,KAAV,EACI,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,QAAjC,cADJ,CAjBR,CADA,CADH,EADL,CADJ,CAiCH,CApCM,CAsCN","sourcesContent":["import React from 'react'\nimport { Button, TextField, Grid } from '@material-ui/core'\nimport { Formik , Form} from 'formik'\n\ninterface Props {\n    values: any;\n    onSubmit: (values: any) => void;\n}\n\nexport const EditorForm: React.FC<Props> = (props) => {\n\n\n    return (\n        <Formik initialValues={props.values} onSubmit={props.onSubmit} enableReinitialize={true}>\n            {({values, handleChange, handleBlur}) => (\n                <Form>\n                <Grid container direction=\"column\" spacing={4}>\n                        {Object.entries(values).map(([key, value]) => {\n                    \n                            if(key !== \"id\" && key !== \"__typename\" && key !== \"images\"){\n                                return <Grid item key={key}>\n                                            <TextField \n                                            name={key}\n                                            label={key}\n                                            value={value ? value : \"\"} \n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            />\n                                        </Grid>\n\n                            }\n                            }\n                        )} \n                        <Grid item>\n                            <Button variant=\"contained\" type=\"submit\">\n                                speichern\n                            </Button>\n                        </Grid>\n                    </Grid> \n                </Form>  \n            ) }           \n        </Formik>\n    )\n    \n\n}\n\n /*       \n<pre>\n{JSON.stringify(values, null, 2)}\n</pre>\n*/"]},"metadata":{},"sourceType":"module"}