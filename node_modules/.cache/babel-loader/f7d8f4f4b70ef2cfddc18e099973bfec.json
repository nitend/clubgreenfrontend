{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{AddressForm}from\"../../components/addressform\";import{useMeQuery,useUpdateUserAddressMutation}from\"../../generated/graphql\";import{ErrorMessage}from\"../../pages/pageframe/global/Messages/ErrorMessage\";import{LoadingAnimation}from\"../../pages/pageframe/global/Messages/LoadingAnimation\";import{SuccessMessage}from\"../../pages/pageframe/global/Messages/SucessMessage\";export var AddressEditor=function AddressEditor(props){var _useMeQuery=useMeQuery(),data=_useMeQuery.data,loading=_useMeQuery.loading,error=_useMeQuery.error;var _useUpdateUserAddress=useUpdateUserAddressMutation(),_useUpdateUserAddress2=_slicedToArray(_useUpdateUserAddress,1),useraddress=_useUpdateUserAddress2[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addressUpdated=_useState2[0],setaddressUpdated=_useState2[1];if(error){return React.createElement(ErrorMessage,{error:error,show:true});}var handleSaveAddress=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"onSubmit :\"+JSON.stringify(address));_context.next=3;return useraddress({variables:{useraddress:address}});case 3:result=_context.sent;if(result){setaddressUpdated(true);props.onDone();}else{console.log(\"onSubmit : false\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSaveAddress(_x){return _ref.apply(this,arguments);};}();if(data&&data.me){var user=data.me;var address={streetName:user.street?user.street:\"\",streetNumber:user.streetNumber?user.streetNumber:\"\",postalCode:user.postalcode?user.postalcode:\"\",town:user.town?user.town:\"\"};return React.createElement(\"div\",null,React.createElement(AddressForm,{values:address,onSubmit:handleSaveAddress}),React.createElement(SuccessMessage,{response:\"Neue Adresse wurden gespeichert.\",show:addressUpdated}));}return React.createElement(LoadingAnimation,{message:\"Daten werden geladen\"});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/container/addresseditor/index.tsx"],"names":["React","useState","AddressForm","useMeQuery","useUpdateUserAddressMutation","ErrorMessage","LoadingAnimation","SuccessMessage","AddressEditor","props","data","loading","error","useraddress","addressUpdated","setaddressUpdated","handleSaveAddress","address","console","log","JSON","stringify","variables","result","onDone","me","user","streetName","street","streetNumber","postalCode","postalcode","town"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAkBC,WAAlB,KAAqC,8BAArC,CACA,OAASC,UAAT,CAAqBC,4BAArB,KAAyD,yBAAzD,CACA,OAASC,YAAT,KAA6B,oDAA7B,CACA,OAASC,gBAAT,KAAiC,wDAAjC,CACA,OAASC,cAAT,KAA+B,qDAA/B,CAMA,MAAO,IAAMC,CAAAA,aAA8B,CAAG,QAAjCA,CAAAA,aAAiC,CAACC,KAAD,CAAW,iBAEtBN,UAAU,EAFY,CAE9CO,IAF8C,aAE9CA,IAF8C,CAExCC,OAFwC,aAExCA,OAFwC,CAE/BC,KAF+B,aAE/BA,KAF+B,2BAG/BR,4BAA4B,EAHG,gEAG9CS,WAH8C,yCAKTZ,QAAQ,CAAC,KAAD,CALC,wCAK9Ca,cAL8C,eAK9BC,iBAL8B,eAOrD,GAAGH,KAAH,CAAS,CACL,MAAQ,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EAAR,CACH,CAED,GAAMI,CAAAA,iBAAiB,0FAAG,iBAAOC,OAAP,6HAEtBC,OAAO,CAACC,GAAR,CAAY,aAAcC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAA1B,EAFsB,sBAGFJ,CAAAA,WAAW,CAAC,CAC5BS,SAAS,CAAE,CACPT,WAAW,CAAEI,OADN,CADiB,CAAD,CAHT,QAGjBM,MAHiB,eAQtB,GAAGA,MAAH,CAAU,CACNR,iBAAiB,CAAC,IAAD,CAAjB,CACAN,KAAK,CAACe,MAAN,GACH,CAHD,IAGO,CACHN,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CAbqB,sDAAH,kBAAjBH,CAAAA,iBAAiB,4CAAvB,CAgBA,GAAGN,IAAI,EAAIA,IAAI,CAACe,EAAhB,CAAmB,CACf,GAAMC,CAAAA,IAAI,CAAGhB,IAAI,CAACe,EAAlB,CAEA,GAAMR,CAAAA,OAAgB,CAAG,CACrBU,UAAU,CAAED,IAAI,CAACE,MAAL,CAAcF,IAAI,CAACE,MAAnB,CAA4B,EADnB,CAErBC,YAAY,CAAEH,IAAI,CAACG,YAAL,CAAoBH,IAAI,CAACG,YAAzB,CAAwC,EAFjC,CAGrBC,UAAU,CAAEJ,IAAI,CAACK,UAAL,CAAkBL,IAAI,CAACK,UAAvB,CAAoC,EAH3B,CAIrBC,IAAI,CAAEN,IAAI,CAACM,IAAL,CAAYN,IAAI,CAACM,IAAjB,CAAwB,EAJT,CAAzB,CAQA,MACI,gCACI,oBAAC,WAAD,EAAa,MAAM,CAAEf,OAArB,CAA8B,QAAQ,CAAED,iBAAxC,EADJ,CAEI,oBAAC,cAAD,EAAgB,QAAQ,CAAE,kCAA1B,CAA8D,IAAI,CAAEF,cAApE,EAFJ,CADJ,CAMH,CACD,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAhDM","sourcesContent":["import React, { useState } from \"react\";\nimport { Address, AddressForm } from \"../../components/addressform\";\nimport { useMeQuery, useUpdateUserAddressMutation } from \"../../generated/graphql\";\nimport { ErrorMessage } from \"../../pages/pageframe/global/Messages/ErrorMessage\";\nimport { LoadingAnimation } from \"../../pages/pageframe/global/Messages/LoadingAnimation\";\nimport { SuccessMessage } from \"../../pages/pageframe/global/Messages/SucessMessage\";\n\ninterface Props {\n    onDone: () => void\n}\n\nexport const AddressEditor: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useMeQuery();\n    const [useraddress] = useUpdateUserAddressMutation();\n\n    const [addressUpdated, setaddressUpdated] = useState(false)\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>)\n    }\n\n    const handleSaveAddress = async (address: Address) => {\n\n        console.log(\"onSubmit :\"+ JSON.stringify(address))\n       const result = await useraddress({\n            variables: {\n                useraddress: address\n            }\n        })\n        if(result){\n            setaddressUpdated(true)\n            props.onDone() \n        } else {\n            console.log(\"onSubmit : false\")\n        }\n    }\n\n    if(data && data.me){\n        const user = data.me;\n\n        const address: Address = {\n            streetName: user.street ? user.street : \"\",\n            streetNumber: user.streetNumber ? user.streetNumber : \"\",\n            postalCode: user.postalcode ? user.postalcode : \"\",\n            town: user.town ? user.town : \"\" \n        }\n\n\n        return (\n            <div>\n                <AddressForm values={address} onSubmit={handleSaveAddress}/>\n                <SuccessMessage response={\"Neue Adresse wurden gespeichert.\"} show={addressUpdated} /> \n            </div>\n        )\n    }\n    return (\n        <LoadingAnimation message={\"Daten werden geladen\"} />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}