{"ast":null,"code":"import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Formik}from'formik';import*as Yup from'yup';import axios from'axios';import{SuccessMessage}from'../../pageframe/global/Messages/SucessMessage';export var PictureUpload=function PictureUpload(props){console.log(props.propertyId);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUploaded=_useState2[0],setIsUploaded=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),file=_useState4[0],setfile=_useState4[1];var onSubmitHandler=function onSubmitHandler(file){var data=new FormData();data.append('targetId',props.propertyId+\"\");data.append('imageFile',file);axios.post(props.url,data,{headers:{'Content-Type':'multipart/form-data'}}).then(function(response){if(response){setIsUploaded(true);}});};return React.createElement(Formik,{initialValues:{file:null},onSubmit:function onSubmit(values){if(values&&values.file){onSubmitHandler(values.file);console.log(values.file);}},validationSchema:Yup.object().shape({file:Yup.mixed().required()}),render:function render(_ref){var values=_ref.values,handleSubmit=_ref.handleSubmit,setFieldValue=_ref.setFieldValue;return React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(\"div\",null,React.createElement(\"img\",{src:file,alt:\"Thumbnial\",style:{width:\"60px\",margin:\"8px\"}})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"input\",{id:\"file\",name:\"file\",type:\"file\",onChange:function onChange(event){if((event===null||event===void 0?void 0:event.currentTarget)&&event.currentTarget.files){setfile(URL.createObjectURL(event.currentTarget.files[0]));setFieldValue(\"file\",event.currentTarget.files[0]);}},className:\"form-control\"})),React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\"},\"Bild hochladen\"),React.createElement(SuccessMessage,{show:isUploaded,response:\"response\"}));}});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/imagehandler/PictureUpload.tsx"],"names":["React","useState","Formik","Yup","axios","SuccessMessage","PictureUpload","props","console","log","propertyId","isUploaded","setIsUploaded","file","setfile","onSubmitHandler","data","FormData","append","post","url","headers","then","response","values","object","shape","mixed","required","handleSubmit","setFieldValue","width","margin","event","currentTarget","files","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport { SuccessMessage } from '../../pageframe/global/Messages/SucessMessage';\n\n\ninterface Props {\n    propertyId: string\n    url: string\n}\n\nexport const PictureUpload: React.FC<Props> = (props) => {\n\n    console.log(props.propertyId);\n\n    const [isUploaded, setIsUploaded] = useState(false)\n    const [file, setfile] = useState()\n\n    const onSubmitHandler = (file: any) => {\n        const data = new FormData()\n        data.append('targetId', props.propertyId+\"\")\n        data.append('imageFile', file)   \n        axios.post(props.url, data, { \n            headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n        }).then((response) => {\n          if(response){\n            setIsUploaded(true);\n          }\n           \n        })\n    }\n\n    return(\n        <Formik \n          initialValues={{file: null}}\n          onSubmit={(values) => {  \n            if(values && values.file){\n                onSubmitHandler(values.file)\n                console.log(values.file)\n                \n            } \n          }} \n          validationSchema={Yup.object().shape({\n            file: Yup.mixed().required(),\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              \n              <form onSubmit={handleSubmit}>\n                <div>\n                  <img src={file} alt=\"Thumbnial\" style={{width: \"60px\", margin: \"8px\"}}/>\n                </div>\n                <div className=\"form-group\">\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                      if(event?.currentTarget && event.currentTarget.files){\n                        setfile(URL.createObjectURL(event.currentTarget.files[0]))\n                        setFieldValue(\"file\", event.currentTarget.files[0]);\n                      }\n                  }} className=\"form-control\" />\n                  \n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Bild hochladen</button>\n                <SuccessMessage show={isUploaded} response={\"response\"}></SuccessMessage>\n              </form>\n\n            );\n          }} />\n    )\n}"]},"metadata":{},"sourceType":"module"}