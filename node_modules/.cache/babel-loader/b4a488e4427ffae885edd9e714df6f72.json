{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useGetProductQuery,useUpdateProductMutation}from'../../../generated/graphql';import{Editor}from'../form/Editor';import{MessageView}from'../../pageframe/global/Messages/MessageView';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{formatProduct}from'./ProductObject';export var EditProperty=function EditProperty(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMessage=_useState2[0],setshowMessage=_useState2[1];var _useGetProductQuery=useGetProductQuery({variables:{id:props.id}}),data=_useGetProductQuery.data,error=_useGetProductQuery.error;var _useUpdateProductMuta=useUpdateProductMutation(),_useUpdateProductMuta2=_slicedToArray(_useUpdateProductMuta,1),updateProduct=_useUpdateProductMuta2[0];function onSubmit(_x){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return updateProduct({variables:{product:formatProduct(values)}});case 2:result=_context.sent;if(result){setshowMessage(true);// history.push(\"/admin#/properties\")\n}case 4:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}if(data&&data.getProduct){var product=data.getProduct;return React.createElement(Editor,{entity:product,store:onSubmit,entityId:product.id,imageuploadurl:\"http://localhost:4000/upload/property/image\"},React.createElement(MessageView,{severity:\"success\",message:\"Die Daten wurden gespeichert\",show:showMessage}));}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}return React.createElement(LoadingAnimation,{message:\"Daten werden geladen ...\"});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/products/EditProperty.tsx"],"names":["React","useState","useGetProductQuery","useUpdateProductMutation","Editor","MessageView","LoadingAnimation","ErrorMessage","formatProduct","EditProperty","props","showMessage","setshowMessage","variables","id","data","error","updateProduct","onSubmit","values","product","result","getProduct"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,kBAAT,CAAsCC,wBAAtC,KAA4F,4BAA5F,CAEA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,aAAT,KAA0C,iBAA1C,CAOA,MAAO,IAAMC,CAAAA,YAA6B,CAAG,QAAhCA,CAAAA,YAAgC,CAACC,KAAD,CAAW,eAEdT,QAAQ,CAAC,KAAD,CAFM,wCAE7CU,WAF6C,eAEhCC,cAFgC,uCAI1BV,kBAAkB,CAAC,CACrCW,SAAS,CAAE,CACPC,EAAE,CAAEJ,KAAK,CAACI,EADH,CAD0B,CAAD,CAJQ,CAIzCC,IAJyC,qBAIzCA,IAJyC,CAInCC,KAJmC,qBAInCA,KAJmC,2BAW5Bb,wBAAwB,EAXI,gEAW7Cc,aAX6C,mCAarCC,CAAAA,QAbqC,oIAapD,iBAAwBC,MAAxB,mJACuBF,CAAAA,aAAa,CAAC,CAC7BJ,SAAS,CAAE,CACPO,OAAO,CAAEZ,aAAa,CAACW,MAAD,CADf,CADkB,CAAD,CADpC,QACQE,MADR,eAMI,GAAGA,MAAH,CAAU,CACNT,cAAc,CAAC,IAAD,CAAd,CACA;AACH,CATL,sDAboD,2CA0BpD,GAAGG,IAAI,EAAIA,IAAI,CAACO,UAAhB,CAA4B,CACxB,GAAMF,CAAAA,OAAO,CAAGL,IAAI,CAACO,UAArB,CACA,MACI,qBAAC,MAAD,EACI,MAAM,CAAEF,OADZ,CAEI,KAAK,CAAEF,QAFX,CAGI,QAAQ,CAAEE,OAAO,CAACN,EAHtB,CAII,cAAc,CAAE,6CAJpB,EAKI,oBAAC,WAAD,EAAa,QAAQ,CAAE,SAAvB,CAAkC,OAAO,CAAE,8BAA3C,CAA2E,IAAI,CAAEH,WAAjF,EALJ,CADJ,CASH,CAGD,GAAGK,KAAH,CAAS,CACL,MAAQ,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EAAR,CACH,CAED,MAAQ,qBAAC,gBAAD,EAAkB,OAAO,CAAE,0BAA3B,EAAR,CACH,CA7CM","sourcesContent":["import React, { useState } from 'react'\nimport { useGetProductQuery, Product, useUpdateProductMutation, useCreateProductQuery} from '../../../generated/graphql'\nimport { useParams } from 'react-router-dom';\nimport { Editor } from '../form/Editor';\nimport { MessageView } from '../../pageframe/global/Messages/MessageView';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { formatProduct, newProduct } from './ProductObject';\n\n\ninterface Props {\n    id: string\n}\n\nexport const EditProperty: React.FC<Props> = (props) => {\n\n    const [showMessage, setshowMessage] = useState(false);\n    \n        const {data, error} = useGetProductQuery({\n            variables: {\n                id: props.id\n            }\n        });\n        \n    \n    const [updateProduct] = useUpdateProductMutation();\n\n    async function onSubmit(values: Product) {     \n        var result = await updateProduct({\n            variables: {\n                product: formatProduct(values)\n            }\n        });\n        if(result){\n            setshowMessage(true)\n            // history.push(\"/admin#/properties\")\n        }\n    }\n\n    \n    if(data && data.getProduct) { \n        const product = data.getProduct;    \n        return(\n            <Editor \n                entity={product} \n                store={onSubmit} \n                entityId={product.id}\n                imageuploadurl={\"http://localhost:4000/upload/property/image\"}>     \n                <MessageView severity={\"success\"} message={\"Die Daten wurden gespeichert\"} show={showMessage} />\n            </Editor>\n        )   \n    }\n\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>) \n    }\n   \n    return (<LoadingAnimation message={\"Daten werden geladen ...\"}/>)\n}"]},"metadata":{},"sourceType":"module"}