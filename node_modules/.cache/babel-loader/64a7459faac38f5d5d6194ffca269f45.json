{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./customcss.css\";\nimport moment from \"moment\";\nimport { Typography } from \"@material-ui/core\";\nimport { BookingContext } from \"../BookingContext\";\nexport const DateSelector = props => {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [focusedInput, setFocusedInput] = useState();\n  const {\n    arrivalDate,\n    departureDate,\n    setArrivalDate,\n    setDepartureDate\n  } = useContext(BookingContext);\n\n  if (!arrivalDate || !departureDate) {\n    const initStart = moment().add(7, 'd').locale('de');\n    const initEnd = initStart.add(3, 'd').locale('de');\n    setArrivalDate(initStart);\n    setDepartureDate(initEnd);\n  }\n\n  function onDateChange(start, end) {\n    setStartDate(start);\n    setEndDate(end);\n\n    if (start && end) {\n      setArrivalDate(start);\n      setDepartureDate(end);\n    }\n  }\n\n  function onFocusChange(focusedInput) {\n    setFocusedInput(focusedInput);\n  }\n\n  const isOutsideRange = day => {\n    return day.isBefore(moment());\n  };\n\n  const isDayBlocked = day => {\n    return false;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Der n\\xE4chste Kurzurlaub:\"), React.createElement(DateRangePicker, {\n    startDatePlaceholderText: \"Anreise\",\n    endDatePlaceholderText: \"Abfahrt\",\n    startDate: startDate,\n    startDateId: \"your_unique_start_date_id\",\n    endDate: endDate,\n    endDateId: \"your_unique_end_date_id\",\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      onDateChange(startDate, endDate);\n    },\n    isDayBlocked: isDayBlocked,\n    focusedInput: focusedInput,\n    displayFormat: () => \"DD. MMMM YYYY\",\n    onFocusChange: onFocusChange,\n    isOutsideRange: isOutsideRange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx"],"names":["React","useState","useContext","DateRangePicker","moment","Typography","BookingContext","DateSelector","props","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","arrivalDate","departureDate","setArrivalDate","setDepartureDate","initStart","add","locale","initEnd","onDateChange","start","end","onFocusChange","isOutsideRange","day","isBefore","isDayBlocked"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,OAAO,sCAAP;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAAqBC,cAArB,QAA2C,mBAA3C;AASA,OAAO,MAAMC,YAA8B,GAAIC,KAAD,IAAW;AAErD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD;AAEA,QAAM;AAACc,IAAAA,WAAD;AACEC,IAAAA,aADF;AAEEC,IAAAA,cAFF;AAGEC,IAAAA;AAHF,MAGsBhB,UAAU,CAACI,cAAD,CAHtC;;AAKA,MAAG,CAACS,WAAD,IAAgB,CAACC,aAApB,EAAkC;AAC9B,UAAMG,SAAS,GAAGf,MAAM,GAAGgB,GAAT,CAAa,CAAb,EAAgB,GAAhB,EAAqBC,MAArB,CAA4B,IAA5B,CAAlB;AACA,UAAMC,OAAO,GAAGH,SAAS,CAACC,GAAV,CAAc,CAAd,EAAiB,GAAjB,EAAsBC,MAAtB,CAA6B,IAA7B,CAAhB;AACAJ,IAAAA,cAAc,CAACE,SAAD,CAAd;AACAD,IAAAA,gBAAgB,CAACI,OAAD,CAAhB;AACH;;AAGD,WAASC,YAAT,CAAsBC,KAAtB,EAA4CC,GAA5C,EAAgE;AACxDf,IAAAA,YAAY,CAACc,KAAD,CAAZ;AACAZ,IAAAA,UAAU,CAACa,GAAD,CAAV;;AACA,QAAGD,KAAK,IAAIC,GAAZ,EAAgB;AACZR,MAAAA,cAAc,CAACO,KAAD,CAAd;AACAN,MAAAA,gBAAgB,CAACO,GAAD,CAAhB;AACH;AACN;;AAED,WAASC,aAAT,CAAuBb,YAAvB,EAA0C;AACxCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD;;AAED,QAAMc,cAAc,GAAIC,GAAD,IAAiB;AACtC,WAAOA,GAAG,CAACC,QAAJ,CAAazB,MAAM,EAAnB,CAAP;AACD,GAFD;;AAIA,QAAM0B,YAAY,GAAIF,GAAD,IAAiB;AACpC,WAAO,KAAP;AACD,GAFD;;AAKF,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAII,oBAAC,eAAD;AACI,IAAA,wBAAwB,EAAE,SAD9B;AAEI,IAAA,sBAAsB,EAAE,SAF5B;AAGI,IAAA,SAAS,EAAEnB,SAHf;AAII,IAAA,WAAW,EAAC,2BAJhB;AAKI,IAAA,OAAO,EAAEE,OALb;AAMI,IAAA,SAAS,EAAC,yBANd;AAOI,IAAA,aAAa,EAAE,CAAC;AAAEF,MAAAA,SAAF;AAAaE,MAAAA;AAAb,KAAD,KAA4B;AAAEY,MAAAA,YAAY,CAAEd,SAAF,EAAaE,OAAb,CAAZ;AAAmC,KAPpF;AAQI,IAAA,YAAY,EAAEmB,YARlB;AASI,IAAA,YAAY,EAAEjB,YATlB;AAUI,IAAA,aAAa,EAAE,MAAM,eAVzB;AAWI,IAAA,aAAa,EAAEa,aAXnB;AAYI,IAAA,cAAc,EAAEC,cAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADR;AAoBH,CA7DM","sourcesContent":["\nimport React, { useState, useContext } from \"react\"\nimport \"react-dates/initialize\"\nimport \"react-dates/lib/css/_datepicker.css\"\nimport {DateRangePicker} from \"react-dates\" \nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./customcss.css\"\nimport moment, { Moment } from \"moment\"\nimport { Typography } from \"@material-ui/core\"\nimport { useBooking, BookingContext } from \"../BookingContext\"\n\n\n\ninterface Props {\n\n}\n\n\nexport const DateSelector:  React.FC<Props> = (props) => {\n\n    const [startDate, setStartDate] = useState(); \n    const [endDate, setEndDate] = useState();\n    const [focusedInput, setFocusedInput] = useState();\n\n    const {arrivalDate, \n            departureDate,\n            setArrivalDate,\n            setDepartureDate} = useContext(BookingContext);\n\n    if(!arrivalDate || !departureDate){\n        const initStart = moment().add(7, 'd').locale('de');\n        const initEnd = initStart.add(3, 'd').locale('de');\n        setArrivalDate(initStart);\n        setDepartureDate(initEnd);\n    }\n\n\n    function onDateChange(start: Moment | null, end: Moment | null) {\n            setStartDate(start);\n            setEndDate(end);\n            if(start && end){\n                setArrivalDate(start);\n                setDepartureDate(end);\n            }\n      }\n    \n      function onFocusChange(focusedInput: any) {\n        setFocusedInput(focusedInput);\n      }\n\n      const isOutsideRange = (day: Moment) => {        \n        return day.isBefore(moment()) \n      }\n\n      const isDayBlocked = (day: Moment) => {\n        return false;\n      } \n      \n\n    return (\n            <div>  \n                <Typography>\n                    Der n√§chste Kurzurlaub:\n                    </Typography> \n                <DateRangePicker \n                    startDatePlaceholderText={\"Anreise\"}\n                    endDatePlaceholderText={\"Abfahrt\"}\n                    startDate={startDate}\n                    startDateId=\"your_unique_start_date_id\"\n                    endDate={endDate}\n                    endDateId=\"your_unique_end_date_id\"\n                    onDatesChange={({ startDate, endDate }) => { onDateChange( startDate, endDate )}}\n                    isDayBlocked={isDayBlocked}\n                    focusedInput={focusedInput}\n                    displayFormat={() => \"DD. MMMM YYYY\"}\n                    onFocusChange={onFocusChange}\n                    isOutsideRange={isOutsideRange}/>               \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}