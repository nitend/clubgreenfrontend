{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx\";\nimport React, { useState } from 'react';\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation } from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './ BookingButton';\nimport { Grid, Container, Paper } from '@material-ui/core';\nexport const MyBooking = Props => {\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useMyBookingQuery({\n    fetchPolicy: 'no-cache'\n  });\n  const [Booking] = useCreateMyBookingMutation();\n  const [deleteBooking] = useDeleteBookingMutation();\n  const [activeBook, setActiveBook] = useState(false);\n\n  if (loading) {\n    console.log(\"laoding\" + loading);\n  }\n\n  if (error) {\n    console.log(\"error\" + error);\n  }\n\n  var propertySelected = Props.propertySelected;\n  var activeBooking = false;\n  var arrival = Date.now();\n  var departure = Date.now() + 1700000;\n\n  if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n    console.log(\"booking loaded\" + data.myBooking);\n    arrival = data.myBooking.from;\n    departure = data.myBooking.to;\n\n    if (data.myBooking.property) {\n      propertySelected = data.myBooking.property;\n      activeBooking = true;\n      Props.bookingActiveListener(propertySelected.id);\n    }\n  }\n\n  console.log(\"daten geladen\" + activeBooking);\n\n  const bookingButtonPressed = async () => {\n    if (activeBooking) {\n      deleteBook();\n    } else {\n      createBook();\n    }\n  };\n\n  const deleteBook = async () => {\n    if (data && data.myBooking) {\n      const result = await deleteBooking({\n        variables: {\n          bookingId: data.myBooking.id\n        }\n      });\n\n      if (result) {\n        console.log(\"result myBooking\" + result);\n        setActiveBook(!activeBook);\n        refetch();\n      }\n    }\n  };\n\n  const createBook = async () => {\n    if (propertySelected && arrival && departure) {\n      const result = await Booking({\n        variables: {\n          from: arrival,\n          to: departure,\n          propertyId: propertySelected.id\n        }\n      });\n\n      if (result) {\n        setActiveBook(!activeBook);\n        console.log(result);\n        refetch();\n      }\n    }\n  };\n\n  const dateChangeListener = dates => {\n    arrival = dates.arrival;\n    departure = dates.departure;\n    console.log(\"dates changed: \" + dates.arrival + \" \" + dates.departure);\n  };\n\n  console.log(\"Buchung aktiv\" + activeBook);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(DateSelector, {\n    dates: {\n      arrival: arrival,\n      departure: departure\n    },\n    dateChangeListener: dateChangeListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(PropertySelectionView, {\n    property: propertySelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(BookingButton, {\n    aktiveBooking: activeBooking,\n    buttonPressedListener: bookingButtonPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx"],"names":["React","useState","useMyBookingQuery","useDeleteBookingMutation","useCreateMyBookingMutation","DateSelector","PropertySelectionView","BookingButton","Grid","Container","Paper","MyBooking","Props","data","loading","error","refetch","fetchPolicy","Booking","deleteBooking","activeBook","setActiveBook","console","log","propertySelected","activeBooking","arrival","Date","now","departure","myBooking","from","to","property","bookingActiveListener","id","bookingButtonPressed","deleteBook","createBook","result","variables","bookingId","propertyId","dateChangeListener","dates"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation} from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './ BookingButton';\nimport { Grid, Container, Divider, Paper } from '@material-ui/core';\n\ninterface Props {\n    bookingActiveListener: any\n    propertySelected: any\n}\n\n\nexport const MyBooking:  React.FC<Props> = (Props) => {\n\n    const {data, loading, error, refetch} = useMyBookingQuery({fetchPolicy: 'no-cache'});\n    const [Booking] = useCreateMyBookingMutation();\n    const [deleteBooking] = useDeleteBookingMutation();\n    const [activeBook, setActiveBook] = useState(false);\n\n    if(loading){\n      console.log(\"laoding\" + loading)\n    }\n\n    if(error){\n      console.log(\"error\" + error) \n    }\n\n    var propertySelected: any = Props.propertySelected;\n    var activeBooking: boolean = false;\n    var arrival = Date.now();\n    var departure = Date.now() + 1700000; \n  \n\n    if(data && data?.myBooking){\n      console.log(\"booking loaded\" + data.myBooking)\n      arrival = data.myBooking.from;\n      departure = data.myBooking.to;\n        if(data.myBooking.property){\n          propertySelected = data.myBooking.property\n          activeBooking = true;\n          Props.bookingActiveListener(propertySelected.id)\n        } \n    }\n\n    console.log(\"daten geladen\" + activeBooking);\n\n    const bookingButtonPressed = async () => {\n      if(activeBooking){\n          deleteBook();     \n      } else{\n          createBook()\n      }\n    }\n\n    const deleteBook = async () => {\n      if(data && data.myBooking){\n        const result = await deleteBooking({\n          variables: {\n            bookingId: data.myBooking.id\n          }\n        })\n        if(result){\n          console.log(\"result myBooking\" + result);\n          setActiveBook(!activeBook);\n          refetch();\n        }\n      } \n    }\n\n    const createBook = async () => {\n      if(propertySelected && arrival && departure){\n        const result = await Booking(\n          { \n            variables: {\n                from: arrival,\n                to: departure,\n                propertyId: propertySelected.id\n            }\n          })\n          if(result){\n            setActiveBook(!activeBook);\n            console.log(result)\n            refetch();\n          }  \n      }\n    }\n\n    const dateChangeListener = (dates: any) => {\n      arrival = dates.arrival;\n      departure = dates.departure;\n      console.log(\"dates changed: \" + dates.arrival + \" \" + dates.departure);\n    }\n    \n    console.log(\"Buchung aktiv\" + activeBook)\n    \n    return (\n        <div>\n          <Paper>\n            <Container maxWidth=\"lg\">\n              <Grid container spacing={4}>\n                <Grid item xs={12}>\n                  <DateSelector dates={{arrival: arrival, departure: departure}} dateChangeListener={dateChangeListener} />\n                </Grid>\n\n                <Grid item xs={9}>\n                  <PropertySelectionView property={propertySelected} />\n                </Grid>\n                <Grid item xs={3}>\n                  <BookingButton aktiveBooking={activeBooking} buttonPressedListener={bookingButtonPressed}/>\n                </Grid>\n              </Grid>\n            </Container>\n          </Paper>\n          </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}