{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/startpage/sections/PropTeaserSection/PropertyTeaser.tsx\";\nimport React from \"react\";\nimport { useTeaserPropertiesQuery } from \"../../../../generated/graphql\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { PropertyCard } from \"./PropertyCard\";\nexport const PropertyTeaser = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useTeaserPropertiesQuery();\n\n  if (loading) {\n    return React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  if (data && data.teaserProperties) {\n    var _data$teaserPropertie;\n\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, (_data$teaserPropertie = data.teaserProperties) === null || _data$teaserPropertie === void 0 ? void 0 : _data$teaserPropertie.map(prop => React.createElement(Grid, {\n      item: true,\n      key: prop.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(PropertyCard, {\n      property: prop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))));\n  }\n\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, error);\n  }\n\n  return React.createElement(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/startpage/sections/PropTeaserSection/PropertyTeaser.tsx"],"names":["React","useTeaserPropertiesQuery","CircularProgress","Grid","PropertyCard","PropertyTeaser","data","loading","error","teaserProperties","map","prop","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,gBAAT,EAA2BC,IAA3B,QAAuC,mBAAvC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAQA,OAAO,MAAMC,cAA+B,GAAG,MAAM;AAEjD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBP,wBAAwB,EAAvD;;AAEA,MAAGM,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGD,IAAI,IAAIA,IAAI,CAACG,gBAAhB,EAAiC;AAAA;;AAE9B,WACC,oBAAC,IAAD;AACA,MAAA,SAAS,MADT;AAEA,MAAA,OAAO,EAAE,CAFT;AAGA,MAAA,SAAS,EAAC,KAHV;AAIA,MAAA,OAAO,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKCH,IAAI,CAACG,gBALN,0DAKC,sBAAuBC,GAAvB,CAA2BC,IAAI,IAC5B,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,CALD,CADD;AAaF;;AAED,MAAGH,KAAH,EAAS;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KADL,CADJ;AAKF;;AACD,SACG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGJ,CArCM","sourcesContent":["import React from \"react\";\nimport { useTeaserPropertiesQuery } from \"../../../../generated/graphql\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\nimport { PropertyCard } from \"./PropertyCard\";\n\ninterface Props {\n\n}\n\n\n\nexport const PropertyTeaser: React.FC<Props> = () => {\n\n    const {data, loading, error} = useTeaserPropertiesQuery();\n\n    if(loading){\n        return (\n            <CircularProgress />\n        )\n    }\n\n    if(data && data.teaserProperties){\n\n       return (\n        <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"center\">\n        {data.teaserProperties?.map(prop => (\n            <Grid item key={prop.id}>\n              <PropertyCard property={prop} />\n            </Grid>\n        ))}\n    </Grid>\n       ) \n    }\n\n    if(error){\n        return (\n            <div>\n                {error}\n            </div>\n        ) \n     }\n     return (\n        <CircularProgress />\n    )\n}"]},"metadata":{},"sourceType":"module"}