{"ast":null,"code":"import React from'react';import{useTeaserPropertiesQuery}from'../../../generated/graphql';import{TableBody,Table,Container,Button}from'@material-ui/core';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{ListItem}from'../lists/ListItem';import{useHistory,useRouteMatch}from'react-router-dom';export var PropertyList=function PropertyList(props){var _useTeaserPropertiesQ=useTeaserPropertiesQuery(),data=_useTeaserPropertiesQ.data,loading=_useTeaserPropertiesQ.loading,error=_useTeaserPropertiesQ.error;var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var history=useHistory();if(loading){return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}var onPropertyEdit=function onPropertyEdit(id){history.push(path+'/'+id);console.log(id);};var onPropertyDelete=function onPropertyDelete(id){};var onNewPropertyClicked=function onNewPropertyClicked(){onPropertyEdit(0);};if(data&&data.teaserProperties){return React.createElement(Container,null,React.createElement(Table,null,React.createElement(TableBody,null,data===null||data===void 0?void 0:data.teaserProperties.map(function(x){return React.createElement(ListItem,{key:x.id,onEditClicked:onPropertyEdit,onDeletClicked:onPropertyDelete,id:x.id,title:x.title,tagone:x.location,tagtwo:x.subtext,tagthree:\"\"});}))),React.createElement(Button,{onClick:onNewPropertyClicked},\"New Property\"));}return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/PropertyList.tsx"],"names":["React","useTeaserPropertiesQuery","TableBody","Table","Container","Button","LoadingAnimation","ErrorMessage","ListItem","useHistory","useRouteMatch","PropertyList","props","data","loading","error","path","history","onPropertyEdit","id","push","console","log","onPropertyDelete","onNewPropertyClicked","teaserProperties","map","x","title","location","subtext"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,wBAAT,KAAwC,4BAAxC,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,SAA3B,CAAsCC,MAAtC,KAAoD,mBAApD,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,QAAT,KAAyB,mBAAzB,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,kBAA1C,CAKA,MAAO,IAAMC,CAAAA,YAA6B,CAAG,QAAhCA,CAAAA,YAAgC,CAACC,KAAD,CAAW,2BAErBX,wBAAwB,EAFH,CAE7CY,IAF6C,uBAE7CA,IAF6C,CAEvCC,OAFuC,uBAEvCA,OAFuC,CAE9BC,KAF8B,uBAE9BA,KAF8B,oBAGrCL,aAAa,EAHwB,CAG7CM,IAH6C,gBAG7CA,IAH6C,CAKpD,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAGA,GAAGK,OAAH,CAAW,CACP,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAED,GAAGC,KAAH,CAAS,CACL,MACI,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EADJ,CAGH,CAED,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAa,CAChCF,OAAO,CAACG,IAAR,CAAcJ,IAAI,CAAG,GAAP,CAAaG,EAA3B,EACAE,OAAO,CAACC,GAAR,CAAYH,EAAZ,EACH,CAHD,CAKA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,EAAD,CAAa,CAErC,CAFD,CAIA,GAAMK,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/BN,cAAc,CAAC,CAAD,CAAd,CACH,CAFD,CAIA,GAAGL,IAAI,EAAIA,IAAI,CAACY,gBAAhB,CAAiC,CAC7B,MACI,qBAAC,SAAD,MACI,oBAAC,KAAD,MACI,oBAAC,SAAD,MACKZ,IADL,SACKA,IADL,iBACKA,IAAI,CAAEY,gBAAN,CAAuBC,GAAvB,CAA2B,SAAAC,CAAC,CAAI,CACjC,MACI,qBAAC,QAAD,EACI,GAAG,CAAEA,CAAC,CAACR,EADX,CAEI,aAAa,CAAED,cAFnB,CAGI,cAAc,CAAEK,gBAHpB,CAII,EAAE,CAAEI,CAAC,CAACR,EAJV,CAKI,KAAK,CAAEQ,CAAC,CAACC,KALb,CAMI,MAAM,CAAED,CAAC,CAACE,QANd,CAOI,MAAM,CAAEF,CAAC,CAACG,OAPd,CAQI,QAAQ,CAAE,EARd,EADJ,CAWC,CAZA,CADL,CADJ,CADJ,CAkBI,oBAAC,MAAD,EAAQ,OAAO,CAAEN,oBAAjB,iBAlBJ,CADJ,CAuBH,CAED,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CA9DM","sourcesContent":["import React from 'react'\nimport { useTeaserPropertiesQuery} from '../../../generated/graphql'\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\ninterface Props {\n}\n\nexport const PropertyList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useTeaserPropertiesQuery();\n    const {path} = useRouteMatch();\n\n    const history = useHistory();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onPropertyEdit = (id: any) => {\n        history.push( path + '/' + id);\n        console.log(id)\n    }\n\n    const onPropertyDelete = (id: any) => {\n\n    }\n\n    const onNewPropertyClicked = () => {\n        onPropertyEdit(0);\n    } \n\n    if(data && data.teaserProperties){\n        return(\n            <Container>\n                <Table>      \n                    <TableBody>\n                        {data?.teaserProperties.map(x => {\n                        return (              \n                            <ListItem\n                                key={x.id} \n                                onEditClicked={onPropertyEdit} \n                                onDeletClicked={onPropertyDelete} \n                                id={x.id}\n                                title={x.title}\n                                tagone={x.location}\n                                tagtwo={x.subtext}\n                                tagthree={\"\"} />\n                            )                \n                        })}\n                    </TableBody>\n                </Table> \n                <Button onClick={onNewPropertyClicked}>New Property</Button>\n            </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}