{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/PropertyList.tsx\";\nimport React from 'react';\nimport { useTeaserPropertiesQuery } from '../../../generated/graphql';\nimport { TableBody, Table } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nexport const PropertyList = props => {\n  const {\n    data,\n    loading,\n    error\n  } = useTeaserPropertiesQuery();\n  const {\n    path\n  } = useRouteMatch();\n  const history = useHistory();\n\n  if (loading) {\n    return React.createElement(LoadingAnimation, {\n      message: 'Daten werden geladen',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  const onPropertyEdit = id => {\n    history.push(path + '/' + id);\n    console.log(id);\n  };\n\n  const onPropertyDelete = id => {};\n\n  if (data && data.teaserProperties) {\n    return React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, data === null || data === void 0 ? void 0 : data.teaserProperties.map(x => {\n      return React.createElement(ListItem, {\n        key: x.id,\n        onEditClicked: onPropertyEdit,\n        onDeletClicked: onPropertyDelete,\n        id: x.id,\n        title: x.title,\n        tagone: x.location,\n        tagtwo: x.subtext,\n        tagthree: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    })));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: 'Daten werden geladen',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/PropertyList.tsx"],"names":["React","useTeaserPropertiesQuery","TableBody","Table","LoadingAnimation","ErrorMessage","ListItem","useHistory","useRouteMatch","PropertyList","props","data","loading","error","path","history","onPropertyEdit","id","push","console","log","onPropertyDelete","teaserProperties","map","x","title","location","subtext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAwC,4BAAxC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,mBAAjC;AACA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;AAKA,OAAO,MAAMC,YAA6B,GAAIC,KAAD,IAAW;AAEpD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBZ,wBAAwB,EAAvD;AACA,QAAM;AAACa,IAAAA;AAAD,MAASN,aAAa,EAA5B;AAEA,QAAMO,OAAO,GAAGR,UAAU,EAA1B;;AAGA,MAAGK,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGC,KAAH,EAAS;AACL,WACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,QAAMG,cAAc,GAAIC,EAAD,IAAa;AAChCF,IAAAA,OAAO,CAACG,IAAR,CAAcJ,IAAI,GAAG,GAAP,GAAaG,EAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACH,GAHD;;AAKA,QAAMI,gBAAgB,GAAIJ,EAAD,IAAa,CAErC,CAFD;;AAIA,MAAGN,IAAI,IAAIA,IAAI,CAACW,gBAAhB,EAAiC;AAC7B,WACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,IADL,aACKA,IADL,uBACKA,IAAI,CAAEW,gBAAN,CAAuBC,GAAvB,CAA2BC,CAAC,IAAI;AACjC,aACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,CAAC,CAACP,EADX;AAEI,QAAA,aAAa,EAAED,cAFnB;AAGI,QAAA,cAAc,EAAEK,gBAHpB;AAII,QAAA,EAAE,EAAEG,CAAC,CAACP,EAJV;AAKI,QAAA,KAAK,EAAEO,CAAC,CAACC,KALb;AAMI,QAAA,MAAM,EAAED,CAAC,CAACE,QANd;AAOI,QAAA,MAAM,EAAEF,CAAC,CAACG,OAPd;AAQI,QAAA,QAAQ,EAAE,EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWC,KAZA,CADL,CADJ,CADJ;AAoBH;;AAED,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAvDM","sourcesContent":["import React from 'react'\nimport { useTeaserPropertiesQuery} from '../../../generated/graphql'\nimport { TableBody, Table } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\ninterface Props {\n}\n\nexport const PropertyList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useTeaserPropertiesQuery();\n    const {path} = useRouteMatch();\n\n    const history = useHistory();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error}/>\n        )\n    }\n\n    const onPropertyEdit = (id: any) => {\n        history.push( path + '/' + id);\n        console.log(id)\n    }\n\n    const onPropertyDelete = (id: any) => {\n\n    }\n\n    if(data && data.teaserProperties){\n        return(\n            <Table>      \n                <TableBody>\n                    {data?.teaserProperties.map(x => {\n                    return (              \n                        <ListItem\n                            key={x.id} \n                            onEditClicked={onPropertyEdit} \n                            onDeletClicked={onPropertyDelete} \n                            id={x.id}\n                            title={x.title}\n                            tagone={x.location}\n                            tagtwo={x.subtext}\n                            tagthree={\"\"} />\n                        )                \n                    })}\n                </TableBody>\n            </Table>  \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}