{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/imagehandler/PictureUpload.tsx\";\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { SuccessMessage } from '../../pageframe/global/Messages/SucessMessage';\nexport const PictureUpload = props => {\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [file, setfile] = useState();\n\n  const onSubmitHandler = file => {\n    const data = new FormData();\n    data.append('imageFile', file);\n    data.append('id', props.propertyId + \"\");\n    axios.post(props.url, data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      if (response) {}\n    });\n  };\n\n  return React.createElement(Formik, {\n    initialValues: {\n      file: null\n    },\n    onSubmit: values => {\n      if (values && values.file) {\n        onSubmitHandler(values.file);\n        console.log(values.file);\n      }\n    },\n    validationSchema: Yup.object().shape({\n      file: Yup.mixed().required()\n    }),\n    render: ({\n      values,\n      handleSubmit,\n      setFieldValue\n    }) => {\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: file,\n        alt: \"Thumbnial\",\n        style: {\n          width: \"60px\",\n          margin: \"8px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"file\",\n        name: \"file\",\n        type: \"file\",\n        onChange: event => {\n          if ((event === null || event === void 0 ? void 0 : event.currentTarget) && event.currentTarget.files) {\n            setfile(URL.createObjectURL(event.currentTarget.files[0]));\n            setFieldValue(\"file\", event.currentTarget.files[0]);\n          }\n        },\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"submit\"), React.createElement(SuccessMessage, {\n        show: isUploaded,\n        response: \"response\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/imagehandler/PictureUpload.tsx"],"names":["React","useState","Formik","Yup","axios","SuccessMessage","PictureUpload","props","isUploaded","setIsUploaded","file","setfile","onSubmitHandler","data","FormData","append","propertyId","post","url","headers","then","response","values","console","log","object","shape","mixed","required","handleSubmit","setFieldValue","width","margin","event","currentTarget","files","URL","createObjectURL"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,+CAA/B;AAQA,OAAO,MAAMC,aAA8B,GAAIC,KAAD,IAAW;AAErD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;;AAEA,QAAMW,eAAe,GAAIF,IAAD,IAAe;AACnC,UAAMG,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBL,IAAzB;AACAG,IAAAA,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBR,KAAK,CAACS,UAAN,GAAiB,EAAnC;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAWV,KAAK,CAACW,GAAjB,EAAsBL,IAAtB,EAA4B;AACxBM,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADe,KAA5B,EAIGC,IAJH,CAISC,QAAD,IAAc;AACpB,UAAGA,QAAH,EAAY,CAEX;AAEF,KATD;AAUH,GAdD;;AAgBA,SACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAACX,MAAAA,IAAI,EAAE;AAAP,KADjB;AAEE,IAAA,QAAQ,EAAGY,MAAD,IAAY;AACpB,UAAGA,MAAM,IAAIA,MAAM,CAACZ,IAApB,EAAyB;AACrBE,QAAAA,eAAe,CAACU,MAAM,CAACZ,IAAR,CAAf;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACZ,IAAnB;AAEH;AACF,KARH;AASE,IAAA,gBAAgB,EAAEP,GAAG,CAACsB,MAAJ,GAAaC,KAAb,CAAmB;AACnChB,MAAAA,IAAI,EAAEP,GAAG,CAACwB,KAAJ,GAAYC,QAAZ;AAD6B,KAAnB,CATpB;AAYE,IAAA,MAAM,EAAE,CAAC;AAAEN,MAAAA,MAAF;AAAUO,MAAAA,YAAV;AAAwBC,MAAAA;AAAxB,KAAD,KAA6C;AACnD,aAEE;AAAM,QAAA,QAAQ,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEnB,IAAV;AAAgB,QAAA,GAAG,EAAC,WAApB;AAAgC,QAAA,KAAK,EAAE;AAACqB,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,QAAQ,EAAGC,KAAD,IAAW;AAC1D,cAAG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,aAAP,KAAwBD,KAAK,CAACC,aAAN,CAAoBC,KAA/C,EAAqD;AACnDxB,YAAAA,OAAO,CAACyB,GAAG,CAACC,eAAJ,CAAoBJ,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAApB,CAAD,CAAP;AACAL,YAAAA,aAAa,CAAC,MAAD,EAASG,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAT,CAAb;AACD;AACJ,SALD;AAKG,QAAA,SAAS,EAAC,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,EAcE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAE3B,UAAtB;AAAkC,QAAA,QAAQ,EAAE,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CAFF;AAoBD,KAjCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAoCH,CA1DM","sourcesContent":["import React, { useState } from 'react'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup'\nimport axios from 'axios'\nimport { SuccessMessage } from '../../pageframe/global/Messages/SucessMessage';\n\n\ninterface Props {\n    propertyId: number\n    url: string\n}\n\nexport const PictureUpload: React.FC<Props> = (props) => {\n\n    const [isUploaded, setIsUploaded] = useState(false)\n\n    const [file, setfile] = useState()\n\n    const onSubmitHandler = (file: any) => {\n        const data = new FormData()\n        data.append('imageFile', file)\n        data.append('id', props.propertyId+\"\")\n        axios.post(props.url, data, { \n            headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n        }).then((response) => {\n          if(response){\n\n          }\n           \n        })\n    }\n\n    return(\n        <Formik \n          initialValues={{file: null}}\n          onSubmit={(values) => {  \n            if(values && values.file){\n                onSubmitHandler(values.file)\n                console.log(values.file)\n                \n            } \n          }} \n          validationSchema={Yup.object().shape({\n            file: Yup.mixed().required(),\n          })}\n          render={({ values, handleSubmit, setFieldValue }) => {\n            return (\n              \n              <form onSubmit={handleSubmit}>\n                <div>\n                  <img src={file} alt=\"Thumbnial\" style={{width: \"60px\", margin: \"8px\"}}/>\n                </div>\n                <div className=\"form-group\">\n                  <input id=\"file\" name=\"file\" type=\"file\" onChange={(event) => {\n                      if(event?.currentTarget && event.currentTarget.files){\n                        setfile(URL.createObjectURL(event.currentTarget.files[0]))\n                        setFieldValue(\"file\", event.currentTarget.files[0]);\n                      }\n                  }} className=\"form-control\" />\n                  \n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">submit</button>\n                <SuccessMessage show={isUploaded} response={\"response\"}></SuccessMessage>\n              </form>\n\n            );\n          }} />\n    )\n}"]},"metadata":{},"sourceType":"module"}