{"ast":null,"code":"import React from'react';import{useAllBookingQuery}from'../../../generated/graphql';import{TableBody,Table,Container,Button}from'@material-ui/core';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{ListItem}from'../lists/ListItem';export var BookingList=function BookingList(props){var _useAllBookingQuery=useAllBookingQuery(),data=_useAllBookingQuery.data,loading=_useAllBookingQuery.loading,error=_useAllBookingQuery.error;if(loading){return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}var onEntityEdit=function onEntityEdit(id){// history.push( path + '/' + id);\n// console.log(id)\n};var onEntityDelete=function onEntityDelete(id){};var onNewEntityClicked=function onNewEntityClicked(){// onEntityEdit(0);\n};if(data&&data.allBooking){return React.createElement(Container,null,React.createElement(Table,null,React.createElement(TableBody,null,data===null||data===void 0?void 0:data.allBooking.map(function(x){return React.createElement(ListItem,{key:x.id,onEditClicked:onEntityEdit,onDeletClicked:onEntityDelete,id:x.id+\"\",title:x.propertyId+\"\",tagone:new Date(x.from).toUTCString(),tagtwo:new Date(x.to).toUTCString(),tagthree:\"\"});}))),React.createElement(Button,{onClick:onNewEntityClicked},\"Neuer Nutzer\"));}return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/bookings/BookingList.tsx"],"names":["React","useAllBookingQuery","TableBody","Table","Container","Button","LoadingAnimation","ErrorMessage","ListItem","BookingList","props","data","loading","error","onEntityEdit","id","onEntityDelete","onNewEntityClicked","allBooking","map","x","propertyId","Date","from","toUTCString","to"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,kBAAT,KAAkC,4BAAlC,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,SAA3B,CAAsCC,MAAtC,KAAoD,mBAApD,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAMA,MAAO,IAAMC,CAAAA,WAA4B,CAAG,QAA/BA,CAAAA,WAA+B,CAACC,KAAD,CAAW,yBAEpBT,kBAAkB,EAFE,CAE5CU,IAF4C,qBAE5CA,IAF4C,CAEtCC,OAFsC,qBAEtCA,OAFsC,CAE7BC,KAF6B,qBAE7BA,KAF6B,CAInD,GAAGD,OAAH,CAAW,CACP,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAED,GAAGC,KAAH,CAAS,CACL,MACI,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EADJ,CAGH,CAED,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAa,CAC9B;AACA;AACH,CAHD,CAKA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACD,EAAD,CAAa,CAEnC,CAFD,CAIA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B;AACH,CAFD,CAIA,GAAGN,IAAI,EAAIA,IAAI,CAACO,UAAhB,CAA2B,CACvB,MACI,qBAAC,SAAD,MACI,oBAAC,KAAD,MACI,oBAAC,SAAD,MACKP,IADL,SACKA,IADL,iBACKA,IAAI,CAAEO,UAAN,CAAiBC,GAAjB,CAAqB,SAAAC,CAAC,CAAI,CAC3B,MACI,qBAAC,QAAD,EACI,GAAG,CAAEA,CAAC,CAACL,EADX,CAEI,aAAa,CAAED,YAFnB,CAGI,cAAc,CAAEE,cAHpB,CAII,EAAE,CAAEI,CAAC,CAACL,EAAF,CAAK,EAJb,CAKI,KAAK,CAAEK,CAAC,CAACC,UAAF,CAAe,EAL1B,CAMI,MAAM,CAAG,GAAIC,CAAAA,IAAJ,CAASF,CAAC,CAACG,IAAX,CAAD,CAAmBC,WAAnB,EANZ,CAOI,MAAM,CAAG,GAAIF,CAAAA,IAAJ,CAASF,CAAC,CAACK,EAAX,CAAD,CAAiBD,WAAjB,EAPZ,CAQI,QAAQ,CAAE,EARd,EADJ,CAWC,CAZA,CADL,CADJ,CADJ,CAkBI,oBAAC,MAAD,EAAQ,OAAO,CAAEP,kBAAjB,iBAlBJ,CADJ,CAuBH,CAED,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CA1DM","sourcesContent":["import React from 'react'\nimport { useAllBookingQuery} from '../../../generated/graphql'\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\ninterface Props {\n}\n\nexport const BookingList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useAllBookingQuery();\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onEntityEdit = (id: any) => {\n        // history.push( path + '/' + id);\n        // console.log(id)\n    }\n\n    const onEntityDelete = (id: any) => {\n\n    }\n\n    const onNewEntityClicked = () => {\n        // onEntityEdit(0);\n    } \n\n    if(data && data.allBooking){\n        return(\n            <Container>\n                <Table>      \n                    <TableBody>\n                        {data?.allBooking.map(x => {\n                        return (              \n                            <ListItem\n                                key={x.id} \n                                onEditClicked={onEntityEdit} \n                                onDeletClicked={onEntityDelete} \n                                id={x.id+\"\"}\n                                title={x.propertyId + \"\"}\n                                tagone={(new Date(x.from)).toUTCString()}\n                                tagtwo={(new Date(x.to)).toUTCString()}\n                                tagthree={\"\"} />\n                            )                \n                        })}\n                    </TableBody>\n                </Table> \n                <Button onClick={onNewEntityClicked}>Neuer Nutzer</Button>\n            </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}