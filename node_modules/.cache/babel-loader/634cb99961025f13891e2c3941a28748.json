{"ast":null,"code":"import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import\"react-dates/initialize\";import\"react-dates/lib/css/_datepicker.css\";import{DateRangePicker}from\"react-dates\";import\"bootstrap/dist/css/bootstrap.min.css\";import\"./customcss.css\";import moment from\"moment\";import{BookingContext}from\"../../BookingContext\";export var DateSelector=function DateSelector(props){var _useContext=useContext(BookingContext),arrivalDate=_useContext.arrivalDate,departureDate=_useContext.departureDate,setArrivalDate=_useContext.setArrivalDate,setDepartureDate=_useContext.setDepartureDate;var _useState=useState(),_useState2=_slicedToArray(_useState,2),focusedInput=_useState2[0],setFocusedInput=_useState2[1];function onDateChange(start,end){setArrivalDate(start);setDepartureDate(end);}function onFocusChange(focusedInput){setFocusedInput(focusedInput);}var isOutsideRange=function isOutsideRange(day){return day.isBefore(moment());};var isDayBlocked=function isDayBlocked(day){console.log(props.blockedDates.length+' date ');var date=props.blockedDates.find(function(data){var istrue=day.isSame(data,'d');return istrue;});if(date){return true;}return false;};return React.createElement(\"div\",null,React.createElement(DateRangePicker,{startDatePlaceholderText:\"Anreise\",endDatePlaceholderText:\"Abfahrt\",startDate:arrivalDate,startDateId:\"your_unique_start_date_id\",endDate:departureDate,endDateId:\"your_unique_end_date_id\",onDatesChange:function onDatesChange(_ref){var startDate=_ref.startDate,endDate=_ref.endDate;onDateChange(startDate,endDate);},isDayBlocked:isDayBlocked,focusedInput:focusedInput,displayFormat:function displayFormat(){return\"DD. MMMM YYYY\";},onFocusChange:onFocusChange,isOutsideRange:isOutsideRange}));};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/datasview/DateSelector.tsx"],"names":["React","useState","useContext","DateRangePicker","moment","BookingContext","DateSelector","props","arrivalDate","departureDate","setArrivalDate","setDepartureDate","focusedInput","setFocusedInput","onDateChange","start","end","onFocusChange","isOutsideRange","day","isBefore","isDayBlocked","console","log","blockedDates","length","date","find","data","istrue","isSame","startDate","endDate"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAO,wBAAP,CACA,MAAO,qCAAP,CACA,OAAQC,eAAR,KAA8B,aAA9B,CACA,MAAO,sCAAP,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,MAAP,KAA+B,QAA/B,CACA,OAASC,cAAT,KAA+B,sBAA/B,CASA,MAAO,IAAMC,CAAAA,YAA8B,CAAG,QAAjCA,CAAAA,YAAiC,CAACC,KAAD,CAAW,iBAK/BL,UAAU,CAACG,cAAD,CALqB,CAE9CG,WAF8C,aAE9CA,WAF8C,CAGnDC,aAHmD,aAGnDA,aAHmD,CAInDC,cAJmD,aAInDA,cAJmD,CAKnDC,gBALmD,aAKnDA,gBALmD,eAQbV,QAAQ,EARK,wCAQ9CW,YAR8C,eAQhCC,eARgC,eAWrD,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA4CC,GAA5C,CAAgE,CACxDN,cAAc,CAACK,KAAD,CAAd,CACAJ,gBAAgB,CAACK,GAAD,CAAhB,CACL,CAED,QAASC,CAAAA,aAAT,CAAuBL,YAAvB,CAA0C,CACxCC,eAAe,CAACD,YAAD,CAAf,CACD,CAED,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAiB,CACtC,MAAOA,CAAAA,GAAG,CAACC,QAAJ,CAAahB,MAAM,EAAnB,CAAP,CACD,CAFD,CAIA,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,GAAD,CAAiB,CACpCG,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACiB,YAAN,CAAmBC,MAAnB,CAA4B,QAAxC,EACA,GAAIC,CAAAA,IAAI,CAAGnB,KAAK,CAACiB,YAAN,CAAmBG,IAAnB,CAAwB,SAACC,IAAD,CAAU,CACzC,GAAIC,CAAAA,MAAM,CAAGV,GAAG,CAACW,MAAJ,CAAWF,IAAX,CAAiB,GAAjB,CAAb,CACA,MAAOC,CAAAA,MAAP,CACH,CAHU,CAAX,CAIA,GAAGH,IAAH,CAAQ,CACN,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CAVD,CAaF,MACQ,gCACI,oBAAC,eAAD,EACI,wBAAwB,CAAE,SAD9B,CAEI,sBAAsB,CAAE,SAF5B,CAGI,SAAS,CAAElB,WAHf,CAII,WAAW,CAAC,2BAJhB,CAKI,OAAO,CAAEC,aALb,CAMI,SAAS,CAAC,yBANd,CAOI,aAAa,CAAE,4BAA4B,IAAzBsB,CAAAA,SAAyB,MAAzBA,SAAyB,CAAdC,OAAc,MAAdA,OAAc,CAAElB,YAAY,CAAEiB,SAAF,CAAaC,OAAb,CAAZ,CAAmC,CAPpF,CAQI,YAAY,CAAEX,YARlB,CASI,YAAY,CAAET,YATlB,CAUI,aAAa,CAAE,+BAAM,eAAN,EAVnB,CAWI,aAAa,CAAEK,aAXnB,CAYI,cAAc,CAAEC,cAZpB,EADJ,CADR,CAiBH,CAtDM","sourcesContent":["import React, { useState, useContext } from \"react\"\nimport \"react-dates/initialize\"\nimport \"react-dates/lib/css/_datepicker.css\"\nimport {DateRangePicker} from \"react-dates\" \nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./customcss.css\"\nimport moment, { Moment } from \"moment\"\nimport { BookingContext } from \"../../BookingContext\"\n\n\n\ninterface Props {\n    blockedDates: Moment[]\n}\n\n\nexport const DateSelector:  React.FC<Props> = (props) => {\n\n    const {arrivalDate, \n      departureDate,\n      setArrivalDate,\n      setDepartureDate} = useContext(BookingContext);\n\n \n    const [focusedInput, setFocusedInput] = useState();\n\n\n    function onDateChange(start: Moment | null, end: Moment | null) {\n            setArrivalDate(start);\n            setDepartureDate(end);\n      }\n    \n      function onFocusChange(focusedInput: any) {\n        setFocusedInput(focusedInput);\n      }\n\n      const isOutsideRange = (day: Moment) => {        \n        return day.isBefore(moment()) \n      }\n\n      const isDayBlocked = (day: Moment) => {\n        console.log(props.blockedDates.length + ' date ');\n        var date = props.blockedDates.find((data) => {\n            var istrue = day.isSame(data, 'd');\n            return istrue;\n        })\n        if(date){\n          return true\n        }\n        return false;\n      } \n      \n\n    return (\n            <div>   \n                <DateRangePicker \n                    startDatePlaceholderText={\"Anreise\"}\n                    endDatePlaceholderText={\"Abfahrt\"}\n                    startDate={arrivalDate}\n                    startDateId=\"your_unique_start_date_id\"\n                    endDate={departureDate}\n                    endDateId=\"your_unique_end_date_id\"\n                    onDatesChange={({ startDate, endDate }) => { onDateChange( startDate, endDate )}}\n                    isDayBlocked={isDayBlocked}\n                    focusedInput={focusedInput}\n                    displayFormat={() => \"DD. MMMM YYYY\"}\n                    onFocusChange={onFocusChange}\n                    isOutsideRange={isOutsideRange}/>               \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}