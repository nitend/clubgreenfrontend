{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateControl.tsx\";\nimport React from 'react';\nimport moment from 'moment';\nimport { useBookingsByPropertyQuery } from '../../../generated/graphql';\nexport const DateControl = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useBookingsByPropertyQuery({\n    variables: {\n      propertyId: 1\n    }\n  });\n  console.log(loading);\n  console.log(error);\n  console.log(data === null || data === void 0 ? void 0 : data.activeBookingsForProperty);\n\n  const generateBlockedDaysList = () => {\n    var blockedDays = [];\n\n    if (data && data.activeBookingsForProperty) {\n      console.log(data === null || data === void 0 ? void 0 : data.activeBookingsForProperty);\n      data.activeBookingsForProperty.map(dateRange => {\n        var start = moment(dateRange.from).startOf(\"d\");\n\n        do {\n          blockedDays.push(start);\n          start = start.add(1, \"day\");\n        } while (start.isAfter(moment(dateRange.to)));\n\n        return dateRange;\n      });\n    }\n\n    return blockedDays;\n  };\n\n  const dates = generateBlockedDaysList()[0];\n\n  if (dates) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, dates.valueOf);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"keine Daten\");\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateControl.tsx"],"names":["React","moment","useBookingsByPropertyQuery","DateControl","data","loading","error","variables","propertyId","console","log","activeBookingsForProperty","generateBlockedDaysList","blockedDays","map","dateRange","start","from","startOf","push","add","isAfter","to","dates","valueOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAA+B,QAA/B;AACA,SAASC,0BAAT,QAA2C,4BAA3C;AAOA,OAAO,MAAMC,WAA6B,GAAG,MAAM;AAE/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBJ,0BAA0B,CAAC;AAACK,IAAAA,SAAS,EAAC;AAACC,MAAAA,UAAU,EAAE;AAAb;AAAX,GAAD,CAAzD;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEO,yBAAlB;;AAEA,QAAMC,uBAAuB,GAAG,MAAM;AAElC,QAAIC,WAAqB,GAAG,EAA5B;;AACA,QAAGT,IAAI,IAAIA,IAAI,CAACO,yBAAhB,EAA0C;AAEtCF,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEO,yBAAlB;AAEFP,MAAAA,IAAI,CAACO,yBAAL,CAA+BG,GAA/B,CAAoCC,SAAD,IAAe;AAC9C,YAAIC,KAAK,GAAGf,MAAM,CAACc,SAAS,CAACE,IAAX,CAAN,CAAuBC,OAAvB,CAA+B,GAA/B,CAAZ;;AACA,WAAE;AACEL,UAAAA,WAAW,CAACM,IAAZ,CAAiBH,KAAjB;AACAA,UAAAA,KAAK,GAAGA,KAAK,CAACI,GAAN,CAAU,CAAV,EAAa,KAAb,CAAR;AACH,SAHD,QAGQJ,KAAK,CAACK,OAAN,CAAcpB,MAAM,CAACc,SAAS,CAACO,EAAX,CAApB,CAHR;;AAKA,eAAOP,SAAP;AACH,OARD;AAUD;;AAED,WAAOF,WAAP;AACH,GApBD;;AAsBA,QAAMU,KAAK,GAAGX,uBAAuB,GAAG,CAAH,CAArC;;AAEA,MAAGW,KAAH,EAAS;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHA,KAAK,CAACC,OADH,CAAR;AAGH;;AAED,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR;AAGH,CA1CM","sourcesContent":["import React from 'react'\nimport moment, { Moment } from 'moment'\nimport { useBookingsByPropertyQuery } from '../../../generated/graphql'\n\ninterface Props {\n\n}\n\n\nexport const DateControl:  React.FC<Props> = () => {\n\n    const {data, loading, error} = useBookingsByPropertyQuery({variables:{propertyId: 1}})\n\n    console.log(loading);\n    console.log(error);\n\n    console.log(data?.activeBookingsForProperty);\n\n    const generateBlockedDaysList = () => {\n        \n        var blockedDays: Moment[] = [];\n        if(data && data.activeBookingsForProperty){\n\n            console.log(data?.activeBookingsForProperty);\n\n          data.activeBookingsForProperty.map((dateRange) => {\n              var start = moment(dateRange.from).startOf(\"d\");\n              do{               \n                  blockedDays.push(start);\n                  start = start.add(1, \"day\");               \n              } while(start.isAfter(moment(dateRange.to)))\n\n              return dateRange;\n          })\n          \n        }\n     \n        return blockedDays;\n    }\n\n    const dates = generateBlockedDaysList()[0];\n\n    if(dates){\n        return (<div>\n            {dates.valueOf}\n        </div>) \n    }\n    \n    return (<div>\n        keine Daten\n    </div>)\n}"]},"metadata":{},"sourceType":"module"}