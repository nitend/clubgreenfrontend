{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Observable } from 'apollo-link';\n\nvar OperationQueuing = function () {\n  function OperationQueuing() {\n    this.queuedRequests = [];\n    this.subscriptions = {};\n    this.queuedRequests = [];\n  }\n\n  OperationQueuing.prototype.enqueueRequest = function (request) {\n    var _this = this;\n\n    var requestCopy = __assign({}, request);\n\n    requestCopy.observable = requestCopy.observable || new Observable(function (observer) {\n      _this.queuedRequests.push(requestCopy);\n\n      if (typeof requestCopy.subscriber === 'undefined') {\n        requestCopy.subscriber = {};\n      }\n\n      requestCopy.subscriber.next = requestCopy.next || observer.next.bind(observer);\n      requestCopy.subscriber.error = requestCopy.error || observer.error.bind(observer);\n      requestCopy.subscriber.complete = requestCopy.complete || observer.complete.bind(observer);\n    });\n    return requestCopy.observable;\n  };\n\n  OperationQueuing.prototype.consumeQueue = function () {\n    var _this = this;\n\n    this.queuedRequests.forEach(function (request) {\n      var key = request.operation.toKey();\n      _this.subscriptions[key] = request.forward(request.operation).subscribe(request.subscriber);\n      return function () {\n        _this.subscriptions[key].unsubscribe();\n      };\n    });\n    this.queuedRequests = [];\n  };\n\n  return OperationQueuing;\n}();\n\nexport { OperationQueuing };","map":{"version":3,"sources":["../src/queuing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAS,UAAT,QAA6D,aAA7D;;AAsBA,IAAA,gBAAA,GAAA,YAAA;AAKE,WAAA,gBAAA,GAAA;AAJO,SAAA,cAAA,GAAkC,EAAlC;AAEC,SAAA,aAAA,GAA+D,EAA/D;AAGN,SAAK,cAAL,GAAsB,EAAtB;AACD;;AAEM,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAP,UAAsB,OAAtB,EAA4C;AAA5C,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,WAAW,GAAA,QAAA,CAAA,EAAA,EAAQ,OAAR,CAAjB;;AAEA,IAAA,WAAW,CAAC,UAAZ,GACE,WAAW,CAAC,UAAZ,IACA,IAAI,UAAJ,CAA4B,UAAA,QAAA,EAAQ;AAClC,MAAA,KAAI,CAAC,cAAL,CAAoB,IAApB,CAAyB,WAAzB;;AAEA,UAAI,OAAO,WAAW,CAAC,UAAnB,KAAkC,WAAtC,EAAmD;AACjD,QAAA,WAAW,CAAC,UAAZ,GAAyB,EAAzB;AACD;;AAED,MAAA,WAAW,CAAC,UAAZ,CAAuB,IAAvB,GAA8B,WAAW,CAAC,IAAZ,IAAoB,QAAQ,CAAC,IAAT,CAAc,IAAd,CAAmB,QAAnB,CAAlD;AACA,MAAA,WAAW,CAAC,UAAZ,CAAuB,KAAvB,GAA+B,WAAW,CAAC,KAAZ,IAAqB,QAAQ,CAAC,KAAT,CAAe,IAAf,CAAoB,QAApB,CAApD;AACA,MAAA,WAAW,CAAC,UAAZ,CAAuB,QAAvB,GACE,WAAW,CAAC,QAAZ,IAAwB,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAuB,QAAvB,CAD1B;AAED,KAXD,CAFF;AAeA,WAAO,WAAW,CAAC,UAAnB;AACD,GAnBM;;AAqBA,EAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,cAAL,CAAoB,OAApB,CAA4B,UAAA,OAAA,EAAO;AACjC,UAAM,GAAG,GAAG,OAAO,CAAC,SAAR,CAAkB,KAAlB,EAAZ;AACA,MAAA,KAAI,CAAC,aAAL,CAAmB,GAAnB,IACE,OAAO,CAAC,OAAR,CAAgB,OAAO,CAAC,SAAxB,EAAmC,SAAnC,CAA6C,OAAO,CAAC,UAArD,CADF;AAGA,aAAO,YAAA;AACL,QAAA,KAAI,CAAC,aAAL,CAAmB,GAAnB,EAAwB,WAAxB;AACD,OAFD;AAGD,KARD;AAUA,SAAK,cAAL,GAAsB,EAAtB;AACD,GAZM;;AAaT,SAAA,gBAAA;AAAC,CA3CD,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Observable } from 'apollo-link';\nvar OperationQueuing = (function () {\n    function OperationQueuing() {\n        this.queuedRequests = [];\n        this.subscriptions = {};\n        this.queuedRequests = [];\n    }\n    OperationQueuing.prototype.enqueueRequest = function (request) {\n        var _this = this;\n        var requestCopy = __assign({}, request);\n        requestCopy.observable =\n            requestCopy.observable ||\n                new Observable(function (observer) {\n                    _this.queuedRequests.push(requestCopy);\n                    if (typeof requestCopy.subscriber === 'undefined') {\n                        requestCopy.subscriber = {};\n                    }\n                    requestCopy.subscriber.next = requestCopy.next || observer.next.bind(observer);\n                    requestCopy.subscriber.error = requestCopy.error || observer.error.bind(observer);\n                    requestCopy.subscriber.complete =\n                        requestCopy.complete || observer.complete.bind(observer);\n                });\n        return requestCopy.observable;\n    };\n    OperationQueuing.prototype.consumeQueue = function () {\n        var _this = this;\n        this.queuedRequests.forEach(function (request) {\n            var key = request.operation.toKey();\n            _this.subscriptions[key] =\n                request.forward(request.operation).subscribe(request.subscriber);\n            return function () {\n                _this.subscriptions[key].unsubscribe();\n            };\n        });\n        this.queuedRequests = [];\n    };\n    return OperationQueuing;\n}());\nexport { OperationQueuing };\n//# sourceMappingURL=queuing.js.map"]},"metadata":{},"sourceType":"module"}