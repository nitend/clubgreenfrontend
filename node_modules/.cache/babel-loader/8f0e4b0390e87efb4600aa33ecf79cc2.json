{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/propertyeditor/PropertyForm.tsx\";\nimport React, { useState } from 'react';\nimport { Button, TextField, Grid } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nexport const PropertyForm = props => {\n  const [prop] = useState(props.property);\n  return React.createElement(Formik, {\n    initialValues: prop,\n    onSubmit: values => {\n      props.onSubmit(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, ({\n    values,\n    handleChange,\n    handleBlur\n  }) => React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, Object.keys(values).map(key => {\n    return React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"id\",\n      label: \"Property ID\",\n      value: values[key],\n      onChange: handleChange,\n      onBlur: handleBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"id\",\n    label: \"Property ID\",\n    value: values.id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Titel\",\n    name: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Subtext\",\n    name: \"subtext\",\n    value: values.subtext,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Ortsname\",\n    name: \"location\",\n    value: values.location,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Latitude\",\n    name: \"lat\",\n    value: values.lat,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Longitude\",\n    name: \"long\",\n    value: values.long,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"speichern\")))));\n};\n/*       \n<pre>\n{JSON.stringify(values, null, 2)}\n</pre>\n*/","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/propertyeditor/PropertyForm.tsx"],"names":["React","useState","Button","TextField","Grid","Formik","Form","PropertyForm","props","prop","property","values","onSubmit","handleChange","handleBlur","Object","keys","map","key","id","title","subtext","location","lat","long"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField, Grid } from '@material-ui/core'\nimport { Formik , Form} from 'formik'\nimport { Property } from '../../../../generated/graphql'\n\n\n\ninterface Props {\n    property: Property;\n    onSubmit: (values: Property) => void;\n}\n\n\nexport const PropertyForm: React.FC<Props> = (props) => { \n\n    const [prop] = useState(props.property);\n    return (\n        <Formik initialValues={prop} onSubmit={(values: Property) => {\n            props.onSubmit(values);\n        }}>\n            {({values, handleChange, handleBlur}) => (\n            <Form>\n                <Grid container direction=\"column\" spacing={4}>\n                        {Object.keys(values).map((key) => {\n                                return <Grid item>\n                                            <TextField \n                                            name=\"id\"\n                                            label=\"Property ID\"\n                                            value={values[key]} \n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            />\n                                        </Grid>\n                            }\n                        )}\n                        <Grid item>\n                            <TextField \n                                    name=\"id\"\n                                    label=\"Property ID\"\n                                    value={values.id} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <TextField \n                                    label=\"Titel\"\n                                    name=\"title\"\n                                    value={values.title} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <TextField \n                                    label=\"Subtext\"\n                                    name=\"subtext\"\n                                    value={values.subtext} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur} \n                                />\n                        </Grid>\n                        <Grid item>\n                            <TextField \n                                    label=\"Ortsname\"\n                                    name=\"location\"\n                                    value={values.location} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <TextField \n                                    label=\"Latitude\"\n                                    name=\"lat\"\n                                    value={values.lat} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <TextField \n                                    label=\"Longitude\"\n                                    name=\"long\"\n                                    value={values.long} \n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                />\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" type=\"submit\">\n                                speichern\n                            </Button>\n                        </Grid>\n                    </Grid>   \n            </Form>\n\n\n            ) }\n            \n        </Formik>\n    )\n    \n\n}\n\n /*       \n<pre>\n{JSON.stringify(values, null, 2)}\n</pre>\n*/"]},"metadata":{},"sourceType":"module"}