{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/header/Header.tsx\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMeQuery, useLogoutMutation } from '../../../generated/graphql';\nimport { setAccessToken } from '../../../accessToken';\nimport { AppBar, Toolbar, IconButton, Button, Menu, MenuItem, makeStyles, Typography, useScrollTrigger, Slide } from \"@material-ui/core\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nfunction HideOnScroll(props) {\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined\n  });\n  return React.createElement(Slide, {\n    appear: false,\n    direction: \"down\",\n    in: !trigger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children);\n}\n\nexport const Header = props => {\n  const {\n    data,\n    loading\n  } = useMeQuery();\n  const [logout, {\n    client\n  }] = useLogoutMutation();\n  const [auth] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  var isAuth = auth;\n  const open = Boolean(anchorEl);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      color: 'white',\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      color: 'white',\n      flexGrow: 1\n    },\n    button: {\n      color: 'white'\n    }\n  }));\n  const classes = useStyles();\n  console.log(data);\n  let history = useHistory();\n\n  if (loading) {// loading\n  } else if (data && data.me) {\n    isAuth = true;\n  }\n\n  const handleLogoutClicked = async () => {\n    setAccessToken(\"\");\n    client.clearStore().then(() => client.resetStore()).then(() => logout()).then(() => history.push(\"/\"));\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const loginMenu = () => {\n    if (!isAuth) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        href: \"/login\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Button, {\n        variant: \"outlined\",\n        className: classes.button,\n        href: \"/register\",\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Register\"));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"account of current user\",\n        \"aria-controls\": \"menu-appbar\",\n        \"aria-haspopup\": \"true\",\n        onClick: handleMenu,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(AccountCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"menu-appbar\",\n        anchorEl: anchorEl,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        keepMounted: true,\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        open: open,\n        onClose: handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: handleLogoutClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Logout\"), React.createElement(MenuItem, {\n        onClick: handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"My account\")));\n    }\n  };\n  /*\n  const handleChange = (event :any)  => {\n    setAuth(event.target.checked);\n  };\n  */\n\n\n  return React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"cg_header_logo.png\",\n    alt: \"Logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), loginMenu())));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/header/Header.tsx"],"names":["React","useHistory","useMeQuery","useLogoutMutation","setAccessToken","AppBar","Toolbar","IconButton","Button","Menu","MenuItem","makeStyles","Typography","useScrollTrigger","Slide","AccountCircle","HideOnScroll","props","children","window","trigger","target","undefined","Header","data","loading","logout","client","auth","useState","anchorEl","setAnchorEl","isAuth","open","Boolean","useStyles","theme","root","flexGrow","menuButton","color","marginRight","spacing","title","button","classes","console","log","history","me","handleLogoutClicked","clearStore","then","resetStore","push","handleClose","handleMenu","event","currentTarget","loginMenu","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useHistory} from 'react-router-dom'\nimport { useMeQuery, useLogoutMutation } from '../../../generated/graphql'\nimport { setAccessToken } from '../../../accessToken'\nimport {AppBar, Toolbar, IconButton, Button, Menu, MenuItem, makeStyles, Typography, useScrollTrigger, Slide, CssBaseline} from \"@material-ui/core\"\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\n\ninterface Props {\n    \n}\n\n\nfunction HideOnScroll(props: any) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\n\nexport const Header: React.FC<Props> = (props) => {\n    const {data, loading} = useMeQuery()\n    const [logout, {client}] = useLogoutMutation();\n    const [auth] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    var isAuth = auth;\n\n    const open = Boolean(anchorEl);\n\n    const useStyles = makeStyles(theme => ({\n      root: {\n        flexGrow: 1,\n      },\n      menuButton: {\n        color: 'white',\n        marginRight: theme.spacing(2),\n      },\n      title: {\n        color: 'white',\n        flexGrow: 1,\n      },\n      button: {\n        color: 'white'\n      }\n    }));\n\n    \n\n    const classes = useStyles();\n\n    console.log(data)\n\n    let history = useHistory();\n\n    if(loading){\n        // loading\n    } else if(data && data.me) {\n      isAuth= true;\n    }\n\n     \n    const handleLogoutClicked = async () => {\n      setAccessToken(\"\");   \n      client!.clearStore()\n          .then(() => client!.resetStore())         \n          .then(() => logout())\n          .then(() => history.push(\"/\"));\n      handleClose(); \n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n    const handleMenu = (event :any) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const loginMenu = () => {\n      if(!isAuth){       \n        return ( <div>\n          <Button className={classes.button} href=\"/login\" color=\"inherit\">Login</Button>\n          <Button variant=\"outlined\" className={classes.button} href=\"/register\" color=\"inherit\">Register</Button> \n        </div>);\n      } else {\n        return (\n          <div>\n            <IconButton aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\">\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleLogoutClicked}>Logout</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                </Menu>\n                \n                </div>)\n      }\n    }\n\n  \n    /*\n    const handleChange = (event :any)  => {\n      setAuth(event.target.checked);\n    };\n    */\n  \n \n    return (\n      <header>\n        <AppBar position=\"static\">   \n          <Toolbar>        \n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                  <img src=\"cg_header_logo.png\" alt=\"Logo\"/>\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              \n            </Typography>      \n            {loginMenu()}\n        </Toolbar>\n        </AppBar>\n      </header>\n        )\n}\n"]},"metadata":{},"sourceType":"module"}