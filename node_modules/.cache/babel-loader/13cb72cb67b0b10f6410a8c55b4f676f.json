{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/MyBooking.tsx\";\nimport React, { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Grid, Button } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql';\nexport const MyBooking = Props => {\n  const [bookingActive, setBookingActive] = useState();\n  const {\n    data,\n    loading,\n    error\n  } = useMyBookingQuery();\n  const [Booking] = useCreateMyBookingMutation();\n\n  if (loading) {\n    console.log(loading);\n  }\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n    const activeBooking = data.myBooking;\n\n    if (data.myBooking.property) {\n      const activeBookingProp = activeBooking.property;\n      Props.bookingActiveListener(activeBookingProp.id);\n      setBookingActive(activeBookingProp.id);\n    }\n  }\n\n  const saveBooking = () => {\n    const result = Booking({});\n    console.log(result);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd.MM.yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Ankunft\",\n    value: arrival,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(KeyboardDatePicker, {\n    variant: \"inline\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Abreise\",\n    format: \"dd.MM.yyyy\",\n    value: departure,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: saveBooking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Reservieren\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, property));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/MyBooking.tsx"],"names":["React","useState","DateFnsUtils","Grid","Button","MuiPickersUtilsProvider","KeyboardDatePicker","useMyBookingQuery","useCreateMyBookingMutation","MyBooking","Props","bookingActive","setBookingActive","data","loading","error","Booking","console","log","myBooking","activeBooking","property","activeBookingProp","bookingActiveListener","id","saveBooking","result","arrival","handleStartDateChange","departure","handleEndDateChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGS,sBAHT;AAIA,SAASC,iBAAT,EAA4BC,0BAA5B,QAA8D,yBAA9D;AAQA,OAAO,MAAMC,SAA2B,GAAIC,KAAD,IAAW;AAEnD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,EAAlD;AAEC,QAAM;AAACY,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,iBAAiB,EAAhD;AACA,QAAM,CAACS,OAAD,IAAYR,0BAA0B,EAA5C;;AAGA,MAAGM,OAAH,EAAW;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD;;AAED,MAAGC,KAAH,EAAS;AACPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;;AAED,MAAGF,IAAI,KAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEM,SAAV,CAAP,EAA2B;AACzB,UAAMC,aAAa,GAAGP,IAAI,CAACM,SAA3B;;AACE,QAAGN,IAAI,CAACM,SAAL,CAAeE,QAAlB,EAA2B;AACvB,YAAMC,iBAAiB,GAAGF,aAAa,CAACC,QAAxC;AACAX,MAAAA,KAAK,CAACa,qBAAN,CAA4BD,iBAAiB,CAACE,EAA9C;AACAZ,MAAAA,gBAAgB,CAACU,iBAAiB,CAACE,EAAnB,CAAhB;AACH;AACJ;;AAED,QAAMC,WAAW,GAAG,MAAK;AACrB,UAAMC,MAAM,GAAGV,OAAO,CACpB,EADoB,CAAtB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,GAND;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAExB,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AACA,IAAA,cAAc,MADd;AAEA,IAAA,OAAO,EAAC,QAFR;AAGA,IAAA,MAAM,EAAC,YAHP;AAIA,IAAA,MAAM,EAAC,QAJP;AAKA,IAAA,EAAE,EAAC,oBALH;AAMA,IAAA,KAAK,EAAC,SANN;AAOA,IAAA,KAAK,EAAEyB,OAPP;AAQA,IAAA,QAAQ,EAAEC,qBARV;AASA,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,oBAAC,kBAAD;AACA,IAAA,OAAO,EAAC,QADR;AAEA,IAAA,MAAM,EAAC,QAFP;AAGA,IAAA,EAAE,EAAC,oBAHH;AAIA,IAAA,KAAK,EAAC,SAJN;AAKA,IAAA,MAAM,EAAC,YALP;AAMA,IAAA,KAAK,EAAEC,SANP;AAOA,IAAA,QAAQ,EAAEC,mBAPV;AAQA,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EA2BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3BJ,CADD,CADH,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CAlCJ,CADJ;AAyCH,CA1EM","sourcesContent":["import React, { useState } from 'react'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Grid, Button } from '@material-ui/core';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql';\n\ninterface Props {\n    bookingActiveListener: any\n    propertySelected: any\n}\n\n\nexport const MyBooking:  React.FC<Props> = (Props) => {\n\n   const [bookingActive, setBookingActive] = useState();\n\n    const {data, loading, error} = useMyBookingQuery();\n    const [Booking] = useCreateMyBookingMutation();\n\n\n    if(loading){\n      console.log(loading)\n    }\n\n    if(error){\n      console.log(error)\n    }\n\n    if(data && data?.myBooking){\n      const activeBooking = data.myBooking;\n        if(data.myBooking.property){\n            const activeBookingProp = activeBooking.property\n            Props.bookingActiveListener(activeBookingProp.id)\n            setBookingActive(activeBookingProp.id)\n        } \n    }\n\n    const saveBooking = () =>{\n        const result = Booking(\n          {\n                    }\n        )\n        console.log(result)\n    }\n          \n    return (\n        <div>\n           <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n                <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Ankunft\"\n                value={arrival}\n                onChange={handleStartDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n                />\n                <KeyboardDatePicker\n                variant=\"inline\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Abreise\"\n                format=\"dd.MM.yyyy\"\n                value={departure}\n                onChange={handleEndDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n                />\n\n                <Button onClick={saveBooking}>\n                    Reservieren\n                </Button>\n            </Grid>\n            </MuiPickersUtilsProvider>\n            <div>  \n              {property}\n              </div>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}