{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/PropertyList.tsx\";\nimport React from 'react';\nimport { useTeaserPropertiesQuery } from '../../generated/graphql';\nimport { LoadingAnimation } from '../elements/LoadingAnimation';\nimport { ErrorView } from '../elements/ErrorView';\nimport { Button, Grid } from '@material-ui/core';\nimport { PropertyCard } from '../startpage/sections/PropTeaserSection/PropertyCard';\nexport const PropertyList = props => {\n  const {\n    data,\n    loading,\n    error\n  } = useTeaserPropertiesQuery();\n\n  if (loading) {\n    return React.createElement(LoadingAnimation, {\n      message: 'Daten werden geladen',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    return React.createElement(ErrorView, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  if (data && data.teaserProperties) {\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, data === null || data === void 0 ? void 0 : data.teaserProperties.map(x => {\n      return React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(PropertyCard, {\n        property: x,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => {\n          props.onPropertySelected(x);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"ausw\\xE4hlen\"));\n    }));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: 'Daten werden geladen',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/PropertyList.tsx"],"names":["React","useTeaserPropertiesQuery","LoadingAnimation","ErrorView","Button","Grid","PropertyCard","PropertyList","props","data","loading","error","teaserProperties","map","x","onPropertySelected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAmD,yBAAnD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,YAAT,QAA6B,sDAA7B;AAMA,OAAO,MAAMC,YAA6B,GAAIC,KAAD,IAAW;AAEpD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBV,wBAAwB,EAAvD;;AAGA,MAAGS,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGC,KAAH,EAAS;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGF,IAAI,IAAIA,IAAI,CAACG,gBAAhB,EAAiC;AAC7B,WAEI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IADL,aACKA,IADL,uBACKA,IAAI,CAAEG,gBAAN,CAAuBC,GAAvB,CAA2BC,CAAC,IAAI;AACjC,aACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,QAAQ,EAAEA,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACN,UAAAA,KAAK,CAACO,kBAAN,CAAyBD,CAAzB;AAA4B,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CADJ;AAKC,KANA,CADL,CAFJ;AAcH;;AAED,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CArCM","sourcesContent":["import React from 'react'\nimport { useTeaserPropertiesQuery, Property } from '../../generated/graphql'\nimport { LoadingAnimation } from '../elements/LoadingAnimation';\nimport { ErrorView } from '../elements/ErrorView';\nimport { Button, Grid } from '@material-ui/core';\nimport { PropertyCard } from '../startpage/sections/PropTeaserSection/PropertyCard';\n\ninterface Props {\n    onPropertySelected: (property: PropObject) => void; \n}\n\nexport const PropertyList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useTeaserPropertiesQuery();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorView error={error}/>\n        )\n    }\n\n    if(data && data.teaserProperties){\n        return(\n            \n            <Grid container>\n                {data?.teaserProperties.map(x => {\n                return (\n                    <Grid item>\n                        <PropertyCard property={x} />\n                        <Button onClick={() => {props.onPropertySelected(x)}}>ausw√§hlen</Button>\n                    </Grid>)                \n                })}\n            </Grid>\n            \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}