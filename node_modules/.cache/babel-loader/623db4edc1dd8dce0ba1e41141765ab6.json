{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/bookings/BookingList.tsx\";\nimport React from 'react';\nimport { useAllBookingQuery } from '../../../generated/graphql';\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nexport const BookingList = props => {\n  const {\n    data,\n    loading,\n    error\n  } = useAllBookingQuery();\n\n  if (loading) {\n    return React.createElement(LoadingAnimation, {\n      message: 'Daten werden geladen',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    return React.createElement(ErrorMessage, {\n      error: error,\n      show: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  const onEntityEdit = id => {// history.push( path + '/' + id);\n    // console.log(id)\n  };\n\n  const onEntityDelete = id => {};\n\n  const onNewEntityClicked = () => {// onEntityEdit(0);\n  };\n\n  if (data && data.allBooking) {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, data === null || data === void 0 ? void 0 : data.allBooking.map(x => {\n      return React.createElement(ListItem, {\n        key: x.id,\n        onEditClicked: onEntityEdit,\n        onDeletClicked: onEntityDelete,\n        id: x.id + \"\",\n        title: x.propertyId + \"\",\n        tagone: new Date(x.from).toUTCString(),\n        tagtwo: new Date(x.to).toUTCString(),\n        tagthree: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }))), React.createElement(Button, {\n      onClick: onNewEntityClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Neuer Nutzer\"));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    message: 'Daten werden geladen',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/bookings/BookingList.tsx"],"names":["React","useAllBookingQuery","TableBody","Table","Container","Button","LoadingAnimation","ErrorMessage","ListItem","BookingList","props","data","loading","error","onEntityEdit","id","onEntityDelete","onNewEntityClicked","allBooking","map","x","propertyId","Date","from","toUTCString","to"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAkC,4BAAlC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,SAASC,gBAAT,QAAiC,kDAAjC;AACA,SAASC,YAAT,QAA6B,8CAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAMA,OAAO,MAAMC,WAA4B,GAAIC,KAAD,IAAW;AAEnD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBZ,kBAAkB,EAAjD;;AAEA,MAAGW,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGC,KAAH,EAAS;AACL,WACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,IAAI,EAAE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,QAAMC,YAAY,GAAIC,EAAD,IAAa,CAC9B;AACA;AACH,GAHD;;AAKA,QAAMC,cAAc,GAAID,EAAD,IAAa,CAEnC,CAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAM,CAC7B;AACH,GAFD;;AAIA,MAAGN,IAAI,IAAIA,IAAI,CAACO,UAAhB,EAA2B;AACvB,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IADL,aACKA,IADL,uBACKA,IAAI,CAAEO,UAAN,CAAiBC,GAAjB,CAAqBC,CAAC,IAAI;AAC3B,aACI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAEA,CAAC,CAACL,EADX;AAEI,QAAA,aAAa,EAAED,YAFnB;AAGI,QAAA,cAAc,EAAEE,cAHpB;AAII,QAAA,EAAE,EAAEI,CAAC,CAACL,EAAF,GAAK,EAJb;AAKI,QAAA,KAAK,EAAEK,CAAC,CAACC,UAAF,GAAe,EAL1B;AAMI,QAAA,MAAM,EAAG,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,CAAD,CAAmBC,WAAnB,EANZ;AAOI,QAAA,MAAM,EAAG,IAAIF,IAAJ,CAASF,CAAC,CAACK,EAAX,CAAD,CAAiBD,WAAjB,EAPZ;AAQI,QAAA,QAAQ,EAAE,EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWC,KAZA,CADL,CADJ,CADJ,EAkBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBJ,CADJ;AAuBH;;AAED,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CA1DM","sourcesContent":["import React from 'react'\nimport { useAllBookingQuery} from '../../../generated/graphql'\nimport { TableBody, Table, Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { ListItem } from '../lists/ListItem';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\ninterface Props {\n}\n\nexport const BookingList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useAllBookingQuery();\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onEntityEdit = (id: any) => {\n        // history.push( path + '/' + id);\n        // console.log(id)\n    }\n\n    const onEntityDelete = (id: any) => {\n\n    }\n\n    const onNewEntityClicked = () => {\n        // onEntityEdit(0);\n    } \n\n    if(data && data.allBooking){\n        return(\n            <Container>\n                <Table>      \n                    <TableBody>\n                        {data?.allBooking.map(x => {\n                        return (              \n                            <ListItem\n                                key={x.id} \n                                onEditClicked={onEntityEdit} \n                                onDeletClicked={onEntityDelete} \n                                id={x.id+\"\"}\n                                title={x.propertyId + \"\"}\n                                tagone={(new Date(x.from)).toUTCString()}\n                                tagtwo={(new Date(x.to)).toUTCString()}\n                                tagthree={\"\"} />\n                            )                \n                        })}\n                    </TableBody>\n                </Table> \n                <Button onClick={onNewEntityClicked}>Neuer Nutzer</Button>\n            </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}