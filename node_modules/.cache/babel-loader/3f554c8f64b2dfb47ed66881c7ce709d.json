{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/ProtectedRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nexport const ProtectedRoute = ({\n  Component,\n  isAuthenticated,\n  ...rest\n}) => React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    if (isAuthenticated()) {\n      console.log(\"ProtectedRoute \" + isAuthenticated());\n      return React.createElement(Component, Object.assign({}, rest, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/ProtectedRoute.tsx"],"names":["React","Route","Redirect","ProtectedRoute","Component","isAuthenticated","rest","props","console","log","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAIA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,eAAb;AAA8B,KAAGC;AAAjC,CAAD,KAEtB,oBAAC,KAAD,oBACUA,IADV;AAEM,EAAA,MAAM,EAAEC,KAAK,IAAI;AACf,QAAGF,eAAe,EAAlB,EAAsB;AACpBG,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,eAAe,EAA/C;AACA,aAAO,oBAAC,SAAD,oBAAeC,IAAf,EAAyBC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAHD,MAGO;AACL,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACG,UAAAA,QAAQ,EAAE;AAAX,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFD","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useMeQuery } from '../../generated/graphql';\n\n\nexport const ProtectedRoute = ({ Component, isAuthenticated, ...rest }: any) => (\n\n        <Route \n              {...rest} \n              render={props => {\n                if(isAuthenticated()) {\n                  console.log(\"ProtectedRoute \" + isAuthenticated())\n                  return <Component {...rest} {...props}/>\n                } else {\n                  return <Redirect to={{pathname: \"/login\"}}/>\n                } \n              }} />\n)\n\n\n\n"]},"metadata":{},"sourceType":"module"}