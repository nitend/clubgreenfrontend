{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/AdminPage.tsx\";\nimport React from 'react';\nimport { useTeaserPropertiesQuery } from '../../generated/graphql';\nimport { AddLocation } from './AddLocation';\nexport const AdminPage = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useTeaserPropertiesQuery();\n  var selectedProperty = undefined;\n\n  if (data && data.teaserProperties) {\n    if (!selectedProperty) {\n      selectedProperty = data.teaserProperties[0];\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(AddLocation, {\n      property: selectedProperty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, data.teaserProperties.map(x => {\n      return React.createElement(\"li\", {\n        key: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \" \", x.id, \", \", x.title, \", \", x.location, \" \");\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"asdf\");\n  /*\n  const {data} = useAllBookingQuery()\n   return (<div>\n  \n      <div>Bookings</div>\n      <ul>\n              {data?.allBooking?.map(x => {\n              return <li key={x.id}> {x.id}, {x.to}, {x.from}, {x.propertyId}, {x.deleted} </li> })\n      }\n      </ul>\n  </div>)\n  */\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/AdminPage.tsx"],"names":["React","useTeaserPropertiesQuery","AddLocation","AdminPage","data","loading","error","selectedProperty","undefined","teaserProperties","map","x","id","title","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA6BC,wBAA7B,QAA6D,yBAA7D;AACA,SAASC,WAAT,QAA4B,eAA5B;AAMA,OAAO,MAAMC,SAA0B,GAAG,MAAM;AAG5C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBL,wBAAwB,EAAvD;AAEA,MAAIM,gBAAgB,GAAGC,SAAvB;;AAEA,MAAGJ,IAAI,IAAIA,IAAI,CAACK,gBAAhB,EAAiC;AAE7B,QAAG,CAACF,gBAAJ,EAAqB;AACjBA,MAAAA,gBAAgB,GAAGH,IAAI,CAACK,gBAAL,CAAsB,CAAtB,CAAnB;AACH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,IAAI,CAACK,gBAAL,CAAsBC,GAAtB,CAA0BC,CAAC,IAAI;AAChC,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiBD,CAAC,CAACC,EAAnB,QAAyBD,CAAC,CAACE,KAA3B,QAAoCF,CAAC,CAACG,QAAtC,MAAP;AAA8D,KAD7D,CADL,CAHJ,CADJ;AAcH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKA;;;;;;;;;;;;AAcH,CAhDM","sourcesContent":["import React from 'react'\nimport { useAllBookingQuery, useTeaserPropertiesQuery } from '../../generated/graphql'\nimport { AddLocation } from './AddLocation';\n\ninterface Props {\n    \n}\n\nexport const AdminPage: React.FC<Props> = () => {\n\n\n    const {data, loading, error} = useTeaserPropertiesQuery();\n\n    var selectedProperty = undefined;\n\n    if(data && data.teaserProperties){\n\n        if(!selectedProperty){\n            selectedProperty = data.teaserProperties[0];\n        }\n\n        return(\n            <div>\n                <AddLocation property={selectedProperty} />\n\n                <ul>\n                    {data.teaserProperties.map(x => {\n                    return <li key={x.id}> {x.id}, {x.title}, {x.location} </li> })\n                    }\n                </ul>\n            </div>\n\n\n        )\n\n    }\n\n    return(\n        <div>asdf</div>\n    )\n\n\n    /*\n    const {data} = useAllBookingQuery()\n\n    return (<div>\n    \n        <div>Bookings</div>\n        <ul>\n                {data?.allBooking?.map(x => {\n                return <li key={x.id}> {x.id}, {x.to}, {x.from}, {x.propertyId}, {x.deleted} </li> })\n        }\n        </ul>\n    </div>)\n    */\n\n}"]},"metadata":{},"sourceType":"module"}