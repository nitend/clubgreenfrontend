{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx\";\nimport React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\nexport const DateSelector = Props => {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [focusedInput, setFocusedInput] = useState();\n  const initStart = moment().add(7, 'd').locale('de');\n  const initEnd = initStart.add(3, 'd').locale('de');\n  console.log(initEnd);\n\n  function onDateChange(start, end) {\n    setStartDate(start);\n    setEndDate(end);\n  }\n\n  function onFocusChange(focusedInput) {\n    setFocusedInput(focusedInput);\n  }\n\n  const isOutsideRange = day => {\n    return day.isBefore(moment());\n  };\n\n  const isDayBlocked = day => {\n    return day.isAfter(initEnd);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(DateRangePicker, {\n    startDatePlaceholderText: \"Anreise\",\n    endDatePlaceholderText: \"Abreise\",\n    startDate: startDate,\n    startDateId: \"your_unique_start_date_id\",\n    endDate: endDate,\n    endDateId: \"your_unique_end_date_id\",\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => {\n      onDateChange(startDate, endDate);\n    },\n    isDayBlocked: isDayBlocked,\n    focusedInput: focusedInput,\n    displayFormat: () => \"DD. MMMM YYYY\",\n    onFocusChange: onFocusChange,\n    isOutsideRange: isOutsideRange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx"],"names":["React","useState","DateRangePicker","moment","DateSelector","Props","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","initStart","add","locale","initEnd","console","log","onDateChange","start","end","onFocusChange","isOutsideRange","day","isBefore","isDayBlocked","isAfter"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAAQC,eAAR,QAA8B,aAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAA+B,QAA/B;AAUA,OAAO,MAAMC,YAA8B,GAAIC,KAAD,IAAW;AAErD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AAEA,QAAMW,SAAS,GAAGT,MAAM,GAAGU,GAAT,CAAa,CAAb,EAAgB,GAAhB,EAAqBC,MAArB,CAA4B,IAA5B,CAAlB;AACA,QAAMC,OAAO,GAAGH,SAAS,CAACC,GAAV,CAAc,CAAd,EAAiB,GAAjB,EAAsBC,MAAtB,CAA6B,IAA7B,CAAhB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,WAASG,YAAT,CAAsBC,KAAtB,EAA4CC,GAA5C,EAAgE;AACxDb,IAAAA,YAAY,CAACY,KAAD,CAAZ;AACAV,IAAAA,UAAU,CAACW,GAAD,CAAV;AACL;;AAED,WAASC,aAAT,CAAuBX,YAAvB,EAA0C;AACxCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD;;AAED,QAAMY,cAAc,GAAIC,GAAD,IAAc;AACnC,WAAOA,GAAG,CAACC,QAAJ,CAAarB,MAAM,EAAnB,CAAP;AACD,GAFD;;AAIA,QAAMsB,YAAY,GAAIF,GAAD,IAAc;AAC/B,WAAOA,GAAG,CAACG,OAAJ,CAAYX,OAAZ,CAAP;AACH,GAFD;;AAMF,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,eAAD;AACI,IAAA,wBAAwB,EAAE,SAD9B;AAEI,IAAA,sBAAsB,EAAE,SAF5B;AAGI,IAAA,SAAS,EAAET,SAHf;AAII,IAAA,WAAW,EAAC,2BAJhB;AAKI,IAAA,OAAO,EAAEE,OALb;AAMI,IAAA,SAAS,EAAC,yBANd;AAOI,IAAA,aAAa,EAAE,CAAC;AAAEF,MAAAA,SAAF;AAAaE,MAAAA;AAAb,KAAD,KAA4B;AAAEU,MAAAA,YAAY,CAAEZ,SAAF,EAAaE,OAAb,CAAZ;AAAmC,KAPpF;AAQI,IAAA,YAAY,EAAEiB,YARlB;AASI,IAAA,YAAY,EAAEf,YATlB;AAUI,IAAA,aAAa,EAAE,MAAM,eAVzB;AAWI,IAAA,aAAa,EAAEW,aAXnB;AAYI,IAAA,cAAc,EAAEC,cAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADR;AAmBH,CAjDM","sourcesContent":["\nimport React, { useState } from \"react\"\nimport \"react-dates/initialize\"\nimport \"react-dates/lib/css/_datepicker.css\"\nimport {DateRangePicker} from \"react-dates\" \nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport moment, { Moment } from \"moment\"\n\n\n\ninterface Props {\n    dates: any\n    dateChangeListener: any\n}\n\n\nexport const DateSelector:  React.FC<Props> = (Props) => {\n\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const [focusedInput, setFocusedInput] = useState();\n\n    const initStart = moment().add(7, 'd').locale('de');\n    const initEnd = initStart.add(3, 'd').locale('de');\n\n    console.log(initEnd);\n\n    function onDateChange(start: Moment | null, end: Moment | null) {\n            setStartDate(start);\n            setEndDate(end);\n      }\n    \n      function onFocusChange(focusedInput: any) {\n        setFocusedInput(focusedInput);\n      }\n\n      const isOutsideRange = (day: any) => {\n        return day.isBefore(moment()) \n      }\n\n      const isDayBlocked = (day: any) => {\n          return day.isAfter(initEnd)\n      }\n        \n    \n\n    return (\n            <div>\n            \n            <DateRangePicker \n                startDatePlaceholderText={\"Anreise\"}\n                endDatePlaceholderText={\"Abreise\"}\n                startDate={startDate}\n                startDateId=\"your_unique_start_date_id\"\n                endDate={endDate}\n                endDateId=\"your_unique_end_date_id\"\n                onDatesChange={({ startDate, endDate }) => { onDateChange( startDate, endDate )}}\n                isDayBlocked={isDayBlocked}\n                focusedInput={focusedInput}\n                displayFormat={() => \"DD. MMMM YYYY\"}\n                onFocusChange={onFocusChange}\n                isOutsideRange={isOutsideRange}/>    \n            \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}