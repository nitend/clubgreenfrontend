{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/onboarding/payment/PaymentForm.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport { useStripe, useElements, CardCvcElement, CardNumberElement, CardExpiryElement } from \"@stripe/react-stripe-js\";\nimport { Button } from \"@material-ui/core\";\nimport { ErrorMessage } from \"../../pageframe/global/Messages/ErrorMessage\";\nimport { CheckoutContext } from \"../CheckoutContext\";\nimport styles from \"./PaymentForm.module.css\";\nconst style = {\n  base: {\n    backgroundColor: '#ffffff',\n    padding: 10,\n    fontSize: '22px',\n    color: '#424770',\n    '::placeholder': {\n      color: '#aab7c4'\n    }\n  },\n  invalid: {\n    color: '#9e2146'\n  }\n};\nexport const PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const context = useContext(CheckoutContext);\n  const [error, seterror] = useState();\n  const [success, setsuccess] = useState();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      seterror(new Error('Bazahldienst nicht erreichbar'));\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardNumberElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement ? cardElement : {\n        token: \"\"\n      }\n    });\n\n    if (error) {\n      console.log('[error]', error);\n      seterror(error);\n    }\n\n    if (paymentMethod) {\n      context.setPaymentMethod(paymentMethod);\n      context.setStep(context.step + 1);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: styles[\"payment-form\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles[\"payment-input-line\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CardNumberElement, {\n    options: {\n      style\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles[\"payment-input-line\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles[\"payment-input-field\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(CardExpiryElement, {\n    options: {\n      style\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles[\"payment-input-field\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(CardCvcElement, {\n    options: {\n      style\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !stripe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"weiter\"), error ? React.createElement(ErrorMessage, {\n    error: error,\n    show: error ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/onboarding/payment/PaymentForm.tsx"],"names":["React","useState","useContext","useStripe","useElements","CardCvcElement","CardNumberElement","CardExpiryElement","Button","ErrorMessage","CheckoutContext","styles","style","base","backgroundColor","padding","fontSize","color","invalid","PaymentForm","stripe","elements","context","error","seterror","success","setsuccess","handleSubmit","event","preventDefault","Error","cardElement","getElement","paymentMethod","createPaymentMethod","type","card","token","console","log","setPaymentMethod","setStep","step"],"mappings":"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","sourcesContent":["\nimport React, { useState, useContext } from \"react\";\nimport { CardElement, useStripe, useElements, CardCvcElement, CardNumberElement, CardExpiryElement } from \"@stripe/react-stripe-js\";\nimport { Button } from \"@material-ui/core\";\nimport { ErrorMessage } from \"../../pageframe/global/Messages/ErrorMessage\";\nimport { CheckoutContext } from \"../CheckoutContext\";\nimport styles from \"./PaymentForm.module.css\"\n\n\ninterface Props {\n     \n}\n\n\nconst style =  {\n    base: {\n      backgroundColor: '#ffffff',\n      padding: 10,\n      fontSize: '22px',\n      color: '#424770',\n      '::placeholder': {\n        color: '#aab7c4',\n      },\n    },\n    invalid: {\n      color: '#9e2146',\n    }\n}\n  \n\nexport const PaymentForm: React.FC<Props> = () => {\n\n    const stripe = useStripe();\n    const elements = useElements();\n    const context = useContext(CheckoutContext);\n\n    const [error, seterror] = useState()\n    const [success, setsuccess] = useState()\n\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        // Block native form submission.\n        event.preventDefault();\n    \n        if (!stripe || !elements) {\n          seterror(new Error('Bazahldienst nicht erreichbar'));\n          return;\n        }\n    \n        // Get a reference to a mounted CardElement. Elements knows how\n        // to find your CardElement because there can only ever be one of\n        // each type of element.\n        const cardElement = elements.getElement(CardNumberElement);\n    \n        // Use your card Element with other Stripe.js APIs\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n          type: 'card',\n          card: cardElement ? cardElement : {token: \"\"},\n        });\n    \n        if (error) {\n          console.log('[error]', error);\n          seterror(error)\n        } \n        if(paymentMethod){\n          context.setPaymentMethod(paymentMethod);\n          context.setStep(context.step + 1)\n        }        \n      };\n\n    \n\n\n    return(\n      <div className={styles[\"payment-form\"]}>\n        <form onSubmit={handleSubmit} >\n\n\n            <div className={styles[\"payment-input-line\"]}>\n              <CardNumberElement options={{style}}/>\n            </div>\n            <div className={styles[\"payment-input-line\"]}>\n              <div className={styles[\"payment-input-field\"]}>\n                <CardExpiryElement options={{style}}/>\n              </div>\n              <div className={styles[\"payment-input-field\"]}>\n                <CardCvcElement options={{style}}/> \n              </div>\n            </div>\n            <Button type=\"submit\" disabled={!stripe}>weiter</Button>\n            {error ? <ErrorMessage error={error} show={error ? true : false}/> : <div></div>}\n        </form>\n        </div>\n\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}