{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      selectionDisabled = _React$useContext.selectionDisabled,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (!selectionDisabled) {\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var printableCharacter = function printableCharacter(event, key) {\n    if (isPrintableCharacter(key)) {\n      focusByFirstCharacter(nodeId, key);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            selectNode(event, nodeId, true);\n          } else {\n            selectNode(event, nodeId);\n          }\n\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          selectAllNodes(event);\n          flag = true;\n        } else if (isPrintableCharacter(key)) {\n          flag = printableCharacter(event, key);\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && tabbable) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    var childIds = React.Children.map(children, function (child) {\n      return child.props.nodeId;\n    }) || [];\n\n    if (addNodeToNodeMap) {\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  return React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": !selectionDisabled && isSelected ? isSelected(nodeId) : undefined,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, icon), React.createElement(Typography, {\n    component: \"div\",\n    className: classes.label\n  }, label)), children && React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","Typography","Collapse","fade","withStyles","useTheme","useForkRef","TreeViewContext","styles","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","isPrintableCharacter","str","length","match","TreeItem","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","nodeId","onClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useContext","useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","selectionDisabled","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","useRef","contentRef","handleRef","expandable","Boolean","Array","isArray","focused","tabbable","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","handleClick","event","multiple","shiftKey","ctrlKey","metaKey","end","handleMouseDown","preventDefault","printableCharacter","key","handleNextArrow","handlePreviousArrow","parent","handleKeyDown","flag","altKey","currentTarget","target","ctrlPressed","current","stopPropagation","direction","toLowerCase","handleFocus","useEffect","childIds","Children","map","child","undefined","textContent","substring","createElement","role","tabIndex","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","node","object","string","isRequired","func","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      selectionDisabled = _React$useContext.selectionDisabled,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (!selectionDisabled) {\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var printableCharacter = function printableCharacter(event, key) {\n    if (isPrintableCharacter(key)) {\n      focusByFirstCharacter(nodeId, key);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            selectNode(event, nodeId, true);\n          } else {\n            selectNode(event, nodeId);\n          }\n\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          selectAllNodes(event);\n          flag = true;\n        } else if (isPrintableCharacter(key)) {\n          flag = printableCharacter(event, key);\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && tabbable) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    var childIds = React.Children.map(children, function (child) {\n      return child.props.nodeId;\n    }) || [];\n\n    if (addNodeToNodeMap) {\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  return React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": !selectionDisabled && isSelected ? isSelected(nodeId) : undefined,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, icon), React.createElement(Typography, {\n    component: \"div\",\n    className: classes.label\n  }, label)), children && React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);"]},"metadata":{},"sourceType":"module"}