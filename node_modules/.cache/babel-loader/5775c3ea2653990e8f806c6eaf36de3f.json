{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/PropertyList.tsx\";\nimport React, { useState } from 'react';\nimport { useTeaserPropertiesQuery } from '../../generated/graphql';\nimport { LoadingAnimation } from '../elements/LoadingAnimation';\nimport { ErrorView } from '../elements/ErrorView';\nimport { Button } from '@material-ui/core';\nexport const PropertyList = () => {\n  const [selectedProp, setSelectedProp] = useState();\n  const {\n    data,\n    loading,\n    error\n  } = useTeaserPropertiesQuery();\n\n  if (loading) {\n    return React.createElement(LoadingAnimation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  if (error) {\n    return React.createElement(ErrorView, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n  if (data && data.teaserProperties) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, JSON.stringify(selectedProp), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, data === null || data === void 0 ? void 0 : data.teaserProperties.map(x => {\n      return React.createElement(\"li\", {\n        key: x.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \" \", x.id, \", \", x.title, \", \", x.location, React.createElement(Button, {\n        onClick: () => {\n          setSelectedProp(x);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"ausw\\xE4hlen\"));\n    })));\n  }\n\n  return React.createElement(LoadingAnimation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/PropertyList.tsx"],"names":["React","useState","useTeaserPropertiesQuery","LoadingAnimation","ErrorView","Button","PropertyList","selectedProp","setSelectedProp","data","loading","error","teaserProperties","JSON","stringify","map","x","id","title","location"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,wBAAT,QAA8E,yBAA9E;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AAMA,OAAO,MAAMC,YAA6B,GAAG,MAAM;AAE/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBT,wBAAwB,EAAvD;;AAGA,MAAGQ,OAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGC,KAAH,EAAS;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,MAAGF,IAAI,IAAIA,IAAI,CAACG,gBAAhB,EAAiC;AAC7B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,IAAI,CAACC,SAAL,CAAeP,YAAf,CADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCE,IADD,aACCA,IADD,uBACCA,IAAI,CAAEG,gBAAN,CAAuBG,GAAvB,CAA2BC,CAAC,IAAI;AACjC,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiBD,CAAC,CAACC,EAAnB,QAAyBD,CAAC,CAACE,KAA3B,QAAoCF,CAAC,CAACG,QAAtC,EACH,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACX,UAAAA,eAAe,CAACQ,CAAD,CAAf;AAAmB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADG,CAAP;AAC0E,KAFzE,CADD,CAFJ,CADJ;AAYH;;AAED,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CApCM","sourcesContent":["import React, { useState } from 'react'\nimport { useTeaserPropertiesQuery, PropObject, useSavePropertyMutation } from '../../generated/graphql'\nimport { PropertyForm } from './PropertyForm';\nimport { LoadingAnimation } from '../elements/LoadingAnimation';\nimport { ErrorView } from '../elements/ErrorView';\nimport { SectionContainer, BasicContentBox } from '../StyledComponents';\nimport { Button } from '@material-ui/core';\n\ninterface Props {\n    \n}\n\nexport const PropertyList: React.FC<Props> = () => {\n\n    const [selectedProp, setSelectedProp] = useState();\n    const {data, loading, error} = useTeaserPropertiesQuery();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation />\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorView error={error}/>\n        )\n    }\n\n    if(data && data.teaserProperties){\n        return(\n            <div>\n                {JSON.stringify(selectedProp)}\n                <ul>\n                {data?.teaserProperties.map(x => {\n                return <li key={x.id}> {x.id}, {x.title}, {x.location} \n                    <Button onClick={() => {setSelectedProp(x)}}>ausw√§hlen</Button></li> })\n                }\n                </ul>              \n            </div>\n        )\n\n    }\n\n    return (\n        <LoadingAnimation />  \n    )\n}"]},"metadata":{},"sourceType":"module"}