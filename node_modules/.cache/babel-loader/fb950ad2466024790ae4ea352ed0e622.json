{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation } from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './BookingButton';\nimport { Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../StyledComponents';\nexport const MyBooking = () => {\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useMyBookingQuery();\n  const [aktiveBooking, setaktiveBooking] = useState(false);\n  const [Booking] = useCreateMyBookingMutation();\n  const [deleteBooking] = useDeleteBookingMutation();\n  const {\n    setSelectedPropterty,\n    setArrivalDate,\n    setDepartureDate,\n    selectedProperty,\n    arrivalDate,\n    departureDate\n  } = useContext(BookingContext);\n\n  if (loading) {\n    console.log(\"laoding\" + loading);\n  }\n\n  if (error) {\n    console.log(\"error\" + error);\n  }\n\n  if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n    var booking = data.myBooking;\n    if (booking.from && booking.to) useEffect(() => {\n      setArrivalDate(moment(booking.from));\n      setDepartureDate(moment(booking.to));\n      setaktiveBooking(true);\n    }, [booking.from, booking.to]);\n\n    if (data.myBooking.property) {\n      const property = data.myBooking.property;\n      setSelectedPropterty(property);\n    }\n  }\n\n  const bookingButtonPressed = async () => {\n    if (aktiveBooking) {\n      deleteBook();\n    } else {\n      createBook();\n    }\n  };\n\n  const deleteBook = async () => {\n    if (data && data.myBooking) {\n      const result = await deleteBooking({\n        variables: {\n          bookingId: data.myBooking.id\n        }\n      });\n\n      if (result) {\n        console.log(\"result myBooking\" + result);\n        refetch();\n      }\n    }\n  };\n\n  const createBook = async () => {\n    if (selectedProperty && arrivalDate && departureDate) {\n      const result = await Booking({\n        variables: {\n          from: arrivalDate.unix(),\n          to: departureDate.unix(),\n          propertyId: selectedProperty.id\n        }\n      });\n\n      if (result) {\n        console.log(result);\n        refetch();\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(MyBookingArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(BasicContentBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(DateSelector, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(PropertySelectionView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(BookingButton, {\n    aktiveBooking: aktiveBooking,\n    buttonPressedListener: bookingButtonPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx"],"names":["React","useState","useContext","useEffect","useMyBookingQuery","useDeleteBookingMutation","useCreateMyBookingMutation","DateSelector","PropertySelectionView","BookingButton","Grid","moment","BookingContext","MyBookingArea","BasicContentBox","MyBooking","data","loading","error","refetch","aktiveBooking","setaktiveBooking","Booking","deleteBooking","setSelectedPropterty","setArrivalDate","setDepartureDate","selectedProperty","arrivalDate","departureDate","console","log","myBooking","booking","from","to","property","bookingButtonPressed","deleteBook","createBook","result","variables","bookingId","id","unix","propertyId"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect} from 'react'\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation} from '../../../generated/graphql';\nimport { DateSelector } from './DateSelector';\nimport { PropertySelectionView } from './PropertySelectionView';\nimport { BookingButton } from './BookingButton';\nimport { Grid } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../StyledComponents';\n\ninterface Props {\n    \n}\n\nexport const MyBooking:  React.FC<Props> = () => {\n\n    const {data, loading, error, refetch} = useMyBookingQuery();\n\n    const [aktiveBooking, setaktiveBooking] = useState(false)\n\n    const [Booking] = useCreateMyBookingMutation();\n    const [deleteBooking] = useDeleteBookingMutation();\n    const {setSelectedPropterty, \n              setArrivalDate, \n              setDepartureDate,\n              selectedProperty,\n              arrivalDate, \n              departureDate} = useContext(BookingContext);\n\n    \n    if(loading){\n      console.log(\"laoding\" + loading)\n    }\n\n    if(error){\n      console.log(\"error\" + error) \n    }\n\n    if(data && data?.myBooking){\n      var booking = data.myBooking;\n      if(booking.from && booking.to)(\n        useEffect(() => {\n          setArrivalDate(moment(booking.from));\n          setDepartureDate(moment(booking.to))\n          setaktiveBooking(true);\n        }, [booking.from, booking.to]) \n      )\n   \n\n\n        if(data.myBooking.property){\n          const property = data.myBooking.property;\n          setSelectedPropterty(property);\n        } \n    }\n\n\n    const bookingButtonPressed = async () => {\n      if(aktiveBooking){\n          deleteBook();     \n      } else{\n          createBook()\n      }\n    }\n\n    const deleteBook = async () => {\n      if(data && data.myBooking){\n        const result = await deleteBooking({\n          variables: {\n            bookingId: data.myBooking.id\n          }\n        })\n        if(result){\n          console.log(\"result myBooking\" + result);\n          refetch();\n        }\n      } \n    }\n\n    const createBook = async () => {\n      if(selectedProperty && arrivalDate && departureDate){\n        const result = await Booking(\n          { \n            variables: {\n                from: arrivalDate.unix(),\n                to: departureDate.unix(),\n                propertyId: selectedProperty.id\n            }\n          })\n          if(result){\n\n            console.log(result);\n            refetch();\n          }  \n      }\n    }\n\n    \n    return (\n        <div>\n              <MyBookingArea>        \n                <BasicContentBox>\n                  <Grid container spacing={4}>\n                    <Grid item xs={12}>\n                      <DateSelector />\n                    </Grid>\n                    <Grid item xs={9}>\n                      <PropertySelectionView />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <BookingButton aktiveBooking={aktiveBooking} buttonPressedListener={bookingButtonPressed}/>\n                    </Grid>\n                  </Grid>\n                  {}\n                  </BasicContentBox>               \n              </MyBookingArea>             \n          </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}