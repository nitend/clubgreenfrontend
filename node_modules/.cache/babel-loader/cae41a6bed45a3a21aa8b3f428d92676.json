{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx\";\nimport React, { useState } from 'react';\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql';\nimport { PropertyList } from './PropertyList';\nexport const BookingRouter = () => {\n  const [selectedProp, setSelectedProp] = useState(\"\");\n  const [MyBooking] = useCreateMyBookingMutation(); // state implementing\n\n  const {\n    data,\n    loading,\n    error\n  } = useMyBookingQuery();\n\n  const bookPropListener = async (from, to) => {\n    if (selectedProp) {\n      var property = JSON.parse(selectedProp);\n      const response = await MyBooking({\n        variables: {\n          from: from,\n          to: to,\n          property: property\n        }\n      });\n    }\n  };\n\n  const selectPropListener = property => {\n    setSelectedProp(property);\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"loading ....\");\n  }\n\n  if (error) {\n    console.log(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"err\");\n  }\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"no data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MyBooking, {\n    listener: bookPropListener,\n    mybooking: data,\n    property: selectedProp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    selectPropListener: selectPropListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx"],"names":["React","useState","useMyBookingQuery","useCreateMyBookingMutation","PropertyList","BookingRouter","selectedProp","setSelectedProp","MyBooking","data","loading","error","bookPropListener","from","to","property","JSON","parse","response","variables","selectPropListener","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,EAA4BC,0BAA5B,QAA8D,yBAA9D;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AAOA,OAAO,MAAMC,aAA+B,GAAG,MAAM;AAEjD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,SAAD,IAAcL,0BAA0B,EAA9C,CAHiD,CAQrD;;AAEI,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBT,iBAAiB,EAAhD;;AAGA,QAAMU,gBAAgB,GAAG,OAAOC,IAAP,EAAqBC,EAArB,KAAmC;AACxD,QAAGR,YAAH,EAAgB;AACZ,UAAIS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAX,CAAf;AACA,YAAMY,QAAQ,GAAG,MAAMV,SAAS,CAAC;AAC7BW,QAAAA,SAAS,EAAE;AACPN,UAAAA,IAAI,EAAEA,IADC;AAEPC,UAAAA,EAAE,EAAEA,EAFG;AAGPC,UAAAA,QAAQ,EAAEA;AAHH;AADkB,OAAD,CAAhC;AAOH;AACJ,GAXD;;AAaA,QAAMK,kBAAkB,GAAIL,QAAD,IAAkB;AACzCR,IAAAA,eAAe,CAACQ,QAAD,CAAf;AACH,GAFD;;AAKA,MAAGL,OAAH,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAGH;;AAED,MAAGC,KAAH,EAAS;AACLU,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAG,CAACF,IAAJ,EAAS;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAGH;;AAID,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEG,gBAArB;AAAuC,IAAA,SAAS,EAAEH,IAAlD;AAAwD,IAAA,QAAQ,EAAEH,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,kBAAkB,EAAEc,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CAzDM","sourcesContent":["import React, { useState } from 'react'\nimport { useMyBookingQuery, useCreateMyBookingMutation } from '../../generated/graphql'\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\n\ninterface Props {\n    \n}\n\n\nexport const BookingRouter:  React.FC<Props> = () => {\n\n    const [selectedProp, setSelectedProp] = useState(\"\")\n    const [MyBooking] = useCreateMyBookingMutation();\n\n\n\n\n// state implementing\n\n    const {data, loading, error} = useMyBookingQuery()\n\n    \n    const bookPropListener = async (from: number, to: number) =>{\n        if(selectedProp){\n            var property = JSON.parse(selectedProp);\n            const response = await MyBooking({\n                variables: {\n                    from: from,\n                    to: to,\n                    property: property\n                }\n            })\n        }\n    }\n\n    const selectPropListener = (property: any) =>{\n        setSelectedProp(property);\n    }\n\n\n    if(loading){\n        return <div>\n            loading ....\n        </div>\n    }\n\n    if(error){\n        console.log(error)\n        return <div>err</div>\n    }\n\n    if(!data){\n        return <div>\n            no data\n        </div>\n    }\n\n\n    \n    return (\n        <div>\n            <MyBooking listener={bookPropListener} mybooking={data} property={selectedProp}></MyBooking>\n            <PropertyList selectPropListener={selectPropListener}></PropertyList>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}