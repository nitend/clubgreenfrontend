{"ast":null,"code":"import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useProductsQuery,useDeleteProductMutation}from'../../../generated/graphql';import{Container,Button}from'@material-ui/core';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{useHistory,useRouteMatch}from'react-router-dom';import{TableList}from'../lists/TableList';import{ProductFields}from'./ProductObject';export var ProductList=function ProductList(props){var _useProductsQuery=useProductsQuery(),data=_useProductsQuery.data,loading=_useProductsQuery.loading,error=_useProductsQuery.error;var _useDeleteProductMuta=useDeleteProductMutation(),_useDeleteProductMuta2=_slicedToArray(_useDeleteProductMuta,1),deleteProduct=_useDeleteProductMuta2[0];var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var history=useHistory();if(loading){return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}var onProductEdit=function onProductEdit(entity){history.push(path+'/'+entity.id);console.log(entity.id);};var onProductDelete=function onProductDelete(entity){var result=deleteProduct({variables:{id:entity.id}});console.log(result);};var onNewPropertyClicked=function onNewPropertyClicked(){onProductEdit(\"new\");};if(data&&data.getAllProducts){return React.createElement(Container,null,React.createElement(TableList,{fields:ProductFields,data:data.getAllProducts,onDeleteClicked:onProductDelete,onEditClicked:onProductEdit}),React.createElement(Button,{onClick:onNewPropertyClicked},\"Neues Product\"));}return React.createElement(LoadingAnimation,{message:'Daten werden geladen'});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/products/ProductList.tsx"],"names":["React","useProductsQuery","useDeleteProductMutation","Container","Button","LoadingAnimation","ErrorMessage","useHistory","useRouteMatch","TableList","ProductFields","ProductList","props","data","loading","error","deleteProduct","path","history","onProductEdit","entity","push","id","console","log","onProductDelete","result","variables","onNewPropertyClicked","getAllProducts"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,wBAA3B,KAA0D,4BAA1D,CACA,OAASC,SAAT,CAAoBC,MAApB,KAAkC,mBAAlC,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,UAAT,CAAqBC,aAArB,KAA0C,kBAA1C,CACA,OAASC,SAAT,KAA0B,oBAA1B,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAKA,MAAO,IAAMC,CAAAA,WAA4B,CAAG,QAA/BA,CAAAA,WAA+B,CAACC,KAAD,CAAW,uBAEpBX,gBAAgB,EAFI,CAE5CY,IAF4C,mBAE5CA,IAF4C,CAEtCC,OAFsC,mBAEtCA,OAFsC,CAE7BC,KAF6B,mBAE7BA,KAF6B,2BAG3Bb,wBAAwB,EAHG,gEAG5Cc,aAH4C,8CAIpCR,aAAa,EAJuB,CAI5CS,IAJ4C,gBAI5CA,IAJ4C,CAMnD,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAGA,GAAGO,OAAH,CAAW,CACP,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CAED,GAAGC,KAAH,CAAS,CACL,MACI,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EADJ,CAGH,CAED,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAiB,CACnCF,OAAO,CAACG,IAAR,CAAcJ,IAAI,CAAG,GAAP,CAAaG,MAAM,CAACE,EAAlC,EACAC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,EAAnB,EACH,CAHD,CAKA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACL,MAAD,CAAiB,CACrC,GAAMM,CAAAA,MAAM,CAAGV,aAAa,CACxB,CACIW,SAAS,CAAE,CACPL,EAAE,CAAEF,MAAM,CAACE,EADJ,CADf,CADwB,CAA5B,CAOAC,OAAO,CAACC,GAAR,CAAYE,MAAZ,EACH,CATD,CAWA,GAAME,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/BT,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,CAIA,GAAGN,IAAI,EAAIA,IAAI,CAACgB,cAAhB,CAA+B,CAC3B,MACI,qBAAC,SAAD,MACI,oBAAC,SAAD,EACI,MAAM,CAAEnB,aADZ,CAEI,IAAI,CAAEG,IAAI,CAACgB,cAFf,CAGI,eAAe,CAAEJ,eAHrB,CAII,aAAa,CAAEN,aAJnB,EADJ,CAMI,oBAAC,MAAD,EAAQ,OAAO,CAAES,oBAAjB,kBANJ,CADJ,CAWH,CAED,MACI,qBAAC,gBAAD,EAAkB,OAAO,CAAE,sBAA3B,EADJ,CAGH,CA1DM","sourcesContent":["import React from 'react'\nimport { useProductsQuery, useDeleteProductMutation} from '../../../generated/graphql'\nimport { Container, Button } from '@material-ui/core';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { TableList } from '../lists/TableList';\nimport { ProductFields } from './ProductObject';\n\ninterface Props {\n}\n\nexport const ProductList: React.FC<Props> = (props) => {\n\n    const {data, loading, error} = useProductsQuery();\n    const [deleteProduct] = useDeleteProductMutation()\n    const {path} = useRouteMatch();\n\n    const history = useHistory();\n\n\n    if(loading){\n        return (\n            <LoadingAnimation message={'Daten werden geladen'}/>\n        )\n    }\n\n    if(error){\n        return (\n            <ErrorMessage error={error} show={true}/>\n        )\n    }\n\n    const onProductEdit = (entity: any) => {\n        history.push( path + '/' + entity.id);\n        console.log(entity.id)\n    }\n\n    const onProductDelete = (entity: any) => {\n        const result = deleteProduct(\n            {\n                variables: {\n                    id: entity.id\n                }\n            }\n        )\n        console.log(result)\n    }\n\n    const onNewPropertyClicked = () => {\n        onProductEdit(\"new\");\n    } \n\n    if(data && data.getAllProducts){\n        return(\n            <Container>\n                <TableList \n                    fields={ProductFields} \n                    data={data.getAllProducts}\n                    onDeleteClicked={onProductDelete}\n                    onEditClicked={onProductEdit}></TableList>  \n                <Button onClick={onNewPropertyClicked}>Neues Product</Button>\n        </Container> \n        )\n\n    }\n\n    return (\n        <LoadingAnimation message={'Daten werden geladen'}/>  \n    )\n}"]},"metadata":{},"sourceType":"module"}