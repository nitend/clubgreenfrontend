{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/propertyeditor/PropertyEditor.tsx\";\nimport React from 'react';\nimport { useSavePropertyMutation, usePropertiesQuery } from '../../../generated/graphql';\nimport { PropertyForm } from './PropertyForm';\nimport { useParams } from 'react-router-dom';\nexport const newProperty = {\n  beds_adult: 0,\n  beds_kids: 0,\n  beds_tent: 0,\n  title: \"\",\n  id: 0,\n  images: [],\n  lat: 0.0,\n  location: \"\",\n  long: 0.0,\n  subtext: \"\"\n};\nexport const PropertyEditor = props => {\n  const {\n    propertyId\n  } = useParams();\n  const {\n    data,\n    loading,\n    error\n  } = usePropertiesQuery();\n  var property = newProperty;\n\n  if (data && data.allProperties && propertyId) {\n    var selectedProp = data.allProperties.find(prop => {\n      return prop.id === parseInt(propertyId);\n    });\n    console.log(selectedProp + ' prop');\n\n    if (selectedProp) {\n      property = selectedProp;\n    }\n  }\n\n  const [saveProperty] = useSavePropertyMutation();\n\n  async function onSubmit(values) {\n    values.__typename = undefined;\n    values.lat = parseFloat(values.lat + \"\");\n    values.long = parseFloat(values.long + \"\");\n    var result = await saveProperty({\n      variables: {\n        property: values\n      }\n    });\n    console.log(result);\n  }\n\n  return React.createElement(PropertyForm, {\n    property: property,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/propertyeditor/PropertyEditor.tsx"],"names":["React","useSavePropertyMutation","usePropertiesQuery","PropertyForm","useParams","newProperty","beds_adult","beds_kids","beds_tent","title","id","images","lat","location","long","subtext","PropertyEditor","props","propertyId","data","loading","error","property","allProperties","selectedProp","find","prop","parseInt","console","log","saveProperty","onSubmit","values","__typename","undefined","parseFloat","result","variables"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAmBC,uBAAnB,EAA4CC,kBAA5C,QAAsE,4BAAtE;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAOA,OAAO,MAAMC,WAAqB,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,SAAS,EAAE,CAFM;AAGjBC,EAAAA,SAAS,EAAE,CAHM;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,EAAE,EAAE,CALa;AAMjBC,EAAAA,MAAM,EAAE,EANS;AAOjBC,EAAAA,GAAG,EAAE,GAPY;AAQjBC,EAAAA,QAAQ,EAAE,EARO;AASjBC,EAAAA,IAAI,EAAE,GATW;AAUjBC,EAAAA,OAAO,EAAE;AAVQ,CAA9B;AAaP,OAAO,MAAMC,cAA+B,GAAIC,KAAD,IAAW;AAEtD,QAAM;AAAEC,IAAAA;AAAF,MAAiBd,SAAS,EAAhC;AAEA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBnB,kBAAkB,EAAjD;AAIA,MAAIoB,QAAQ,GAAGjB,WAAf;;AACA,MAAGc,IAAI,IAAIA,IAAI,CAACI,aAAb,IAA8BL,UAAjC,EAA6C;AACzC,QAAIM,YAAY,GAAGL,IAAI,CAACI,aAAL,CACdE,IADc,CACRC,IAAD,IAAU;AACR,aAAQA,IAAI,CAAChB,EAAL,KAAYiB,QAAQ,CAACT,UAAD,CAA5B;AACP,KAHc,CAAnB;AAICU,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,GAAG,OAA3B;;AACD,QAAGA,YAAH,EAAgB;AACZF,MAAAA,QAAQ,GAAGE,YAAX;AACH;AACJ;;AAED,QAAM,CAACM,YAAD,IAAiB7B,uBAAuB,EAA9C;;AAEA,iBAAe8B,QAAf,CAAwBC,MAAxB,EAA0C;AAEtCA,IAAAA,MAAM,CAACC,UAAP,GAAoBC,SAApB;AACAF,IAAAA,MAAM,CAACpB,GAAP,GAAauB,UAAU,CAACH,MAAM,CAACpB,GAAP,GAAW,EAAZ,CAAvB;AACAoB,IAAAA,MAAM,CAAClB,IAAP,GAAcqB,UAAU,CAACH,MAAM,CAAClB,IAAP,GAAY,EAAb,CAAxB;AAEA,QAAIsB,MAAM,GAAG,MAAMN,YAAY,CAAC;AAC5BO,MAAAA,SAAS,EAAE;AACPf,QAAAA,QAAQ,EAAEU;AADH;AADiB,KAAD,CAA/B;AAKAJ,IAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACH;;AAED,SACI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEd,QAAxB;AAAkC,IAAA,QAAQ,EAAES,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CA1CM","sourcesContent":["import React, { useState } from 'react'\nimport { Property, useSavePropertyMutation, usePropertiesQuery } from '../../../generated/graphql'\nimport { PropertyForm } from './PropertyForm';\nimport { useParams } from 'react-router-dom';\n\n\ninterface Props {\n    \n}\n\nexport const newProperty: Property = { \n                    beds_adult: 0,\n                    beds_kids: 0,\n                    beds_tent: 0,\n                    title: \"\",\n                    id: 0,\n                    images: [],\n                    lat: 0.0,\n                    location: \"\",\n                    long: 0.0,\n                    subtext: \"\",\n                }\n\nexport const PropertyEditor: React.FC<Props> = (props) => {\n\n    const { propertyId } = useParams()\n\n    const {data, loading, error} = usePropertiesQuery();\n\n   \n\n    var property = newProperty;\n    if(data && data.allProperties && propertyId) {\n        var selectedProp = data.allProperties\n            .find((prop) => {\n                    return (prop.id === parseInt(propertyId))\n            })\n         console.log(selectedProp + ' prop')   \n        if(selectedProp){\n            property = selectedProp;\n        }\n    }\n\n    const [saveProperty] = useSavePropertyMutation();\n\n    async function onSubmit(values: Property) {\n\n        values.__typename = undefined;\n        values.lat = parseFloat(values.lat+\"\");\n        values.long = parseFloat(values.long+\"\");\n  \n        var result = await saveProperty({\n            variables: {\n                property: values\n            }\n        });\n        console.log(result)\n    }\n\n    return(\n        <PropertyForm property={property} onSubmit={onSubmit}/>  \n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}