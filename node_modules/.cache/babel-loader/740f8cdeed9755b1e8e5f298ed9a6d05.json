{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation } from '../../../generated/graphql';\nimport { PropertySelectionView } from './propertyView/PropertySelectionView';\nimport { BookingButton } from './actions/BookingButton';\nimport { Grid, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../pageframe/global/StyledComponents';\nimport { TravelDatesPicker } from './datasview/TravelDatesPicker';\nimport { SuccessDialog } from '../../pageframe/global/dialogs/SuccessDialog';\nimport { SuccessDialogContent } from '../../pageframe/global/dialogs/SuccessDialogContent';\nimport { sunUmbrella } from '../../pageframe/global/dialogs/DialogIcons';\nimport { ShowMapButton } from './actions/ShowMapButton';\nexport const MyBooking = () => {\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useMyBookingQuery();\n  const [show, setShow] = useState(false);\n  const [Booking] = useCreateMyBookingMutation();\n  const [deleteBooking] = useDeleteBookingMutation();\n  const {\n    setArrivalDate,\n    setDepartureDate,\n    selectedProperty,\n    arrivalDate,\n    departureDate,\n    isActive,\n    setIsActive,\n    setSelectedPropterty\n  } = useContext(BookingContext);\n\n  if (loading) {\n    console.log(\"laoding\" + loading);\n  }\n\n  if (error) {\n    console.log(\"error\" + error);\n  }\n\n  function clearBookingView() {\n    setIsActive(false);\n    setArrivalDate(null);\n    setDepartureDate(null);\n    setSelectedPropterty(null);\n  }\n\n  const setBooking = data => {\n    const myBooking = data === null || data === void 0 ? void 0 : data.myBooking;\n\n    if (myBooking && myBooking.from && myBooking.to && myBooking.property) {\n      setArrivalDate(moment(myBooking.from));\n      setDepartureDate(moment(myBooking.to));\n      setSelectedPropterty(myBooking.property);\n      setIsActive(true);\n    } else {\n      clearBookingView();\n    }\n  };\n\n  const booking = data === null || data === void 0 ? void 0 : data.myBooking;\n  useEffect(() => {\n    if (data) {\n      setBooking(data);\n    }\n  }, [booking]);\n\n  const bookingButtonPressed = async () => {\n    console.log(isActive);\n\n    if (isActive) {\n      deleteBook();\n    } else {\n      createBook();\n    }\n  };\n\n  const deleteBook = async () => {\n    if (data && data.myBooking) {\n      const result = await deleteBooking({\n        variables: {\n          bookingId: data.myBooking.id\n        }\n      });\n\n      if (result) {\n        console.log(\"result myBooking\" + result);\n        refetch();\n        clearBookingView();\n      }\n    }\n  };\n\n  const createBook = async () => {\n    if (selectedProperty && arrivalDate && departureDate) {\n      const result = await Booking({\n        variables: {\n          from: arrivalDate.valueOf(),\n          to: departureDate.valueOf(),\n          propertyId: selectedProperty.id\n        }\n      });\n\n      if (result) {\n        console.log(result);\n        refetch();\n        setShow(true);\n        setIsActive(true);\n      }\n    }\n  };\n\n  const closeDialog = () => {\n    setShow(false);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      position: \"sticky\",\n      top: 0,\n      zIndex: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(MyBookingArea, {\n    elevation: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(BasicContentBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Dein n\\xE4chster Ausflug:\")), React.createElement(TravelDatesPicker, {\n    propertyId: selectedProperty === null || selectedProperty === void 0 ? void 0 : selectedProperty.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    alignItems: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(PropertySelectionView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(SuccessDialog, {\n    open: show,\n    handleClose: closeDialog,\n    buttonText: \"Los\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(SuccessDialogContent, {\n    title: \"Super\",\n    text: \"Dann kann es bald los gehen...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, sunUmbrella)), React.createElement(ShowMapButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(BookingButton, {\n    aktiveBooking: isActive,\n    disabled: selectedProperty && arrivalDate && departureDate ? false : true,\n    buttonPressedListener: bookingButtonPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/MyBooking.tsx"],"names":["React","useContext","useEffect","useState","useMyBookingQuery","useDeleteBookingMutation","useCreateMyBookingMutation","PropertySelectionView","BookingButton","Grid","Typography","moment","BookingContext","MyBookingArea","BasicContentBox","TravelDatesPicker","SuccessDialog","SuccessDialogContent","sunUmbrella","ShowMapButton","MyBooking","data","loading","error","refetch","show","setShow","Booking","deleteBooking","setArrivalDate","setDepartureDate","selectedProperty","arrivalDate","departureDate","isActive","setIsActive","setSelectedPropterty","console","log","clearBookingView","setBooking","myBooking","from","to","property","booking","bookingButtonPressed","deleteBook","createBook","result","variables","bookingId","id","valueOf","propertyId","closeDialog","position","top","zIndex","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState} from 'react'\nimport { useMyBookingQuery, useDeleteBookingMutation, useCreateMyBookingMutation, MyBookingQuery} from '../../../generated/graphql';\nimport { PropertySelectionView } from './propertyView/PropertySelectionView';\nimport { BookingButton } from './actions/BookingButton';\nimport { Grid, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport { BookingContext } from '../BookingContext';\nimport { MyBookingArea, BasicContentBox } from '../../pageframe/global/StyledComponents';\nimport { TravelDatesPicker } from './datasview/TravelDatesPicker';\nimport { SuccessDialog } from '../../pageframe/global/dialogs/SuccessDialog';\nimport { SuccessDialogContent } from '../../pageframe/global/dialogs/SuccessDialogContent';\nimport { sunUmbrella } from '../../pageframe/global/dialogs/DialogIcons';\nimport { ShowMapButton } from './actions/ShowMapButton';\n\n\ninterface Props {\n    \n}\n\nexport const MyBooking:  React.FC<Props> = () => {\n\n    const {data, loading, error, refetch} = useMyBookingQuery();\n\n    const [show, setShow] = useState(false);\n\n    const [Booking] = useCreateMyBookingMutation();\n    const [deleteBooking] = useDeleteBookingMutation();\n    const { \n              setArrivalDate, \n              setDepartureDate,\n              selectedProperty,\n              arrivalDate, \n              departureDate,\n              isActive,\n              setIsActive,\n              setSelectedPropterty} = useContext(BookingContext);\n\n    \n    if(loading){\n      console.log(\"laoding\" + loading)\n    }\n\n    if(error){\n      console.log(\"error\" + error) \n    }\n\n    function clearBookingView() {\n      setIsActive(false);\n      setArrivalDate(null);\n      setDepartureDate(null);\n      setSelectedPropterty(null)\n    }\n\n   const setBooking = (data: MyBookingQuery | undefined) => {\n    const myBooking = data?.myBooking;\n    if(myBooking && myBooking.from && myBooking.to && myBooking.property){\n      setArrivalDate(moment(myBooking.from));\n      setDepartureDate(moment(myBooking.to))\n      setSelectedPropterty(myBooking.property)\n      setIsActive(true);\n    } else {\n      clearBookingView()\n    }\n  }\n\n\n\n  const booking = data?.myBooking;\n\n    useEffect(() => {\n      if(data){\n        setBooking(data)\n      }\n        \n    } , [booking]) \n    \n\n    const bookingButtonPressed = async () => {\n      console.log(isActive)\n      if(isActive){\n          deleteBook();     \n      } else{\n          createBook()\n      }\n    }\n\n    const deleteBook = async () => {\n      if(data && data.myBooking){\n        const result = await deleteBooking({\n          variables: {\n            bookingId: data.myBooking.id\n          }\n        })\n        if(result){\n          console.log(\"result myBooking\" + result);\n          refetch();\n          clearBookingView()\n        }\n      } \n    }\n\n    const createBook = async () => {\n      if(selectedProperty && arrivalDate && departureDate){\n        const result = await Booking(\n          { \n            variables: {\n                from: arrivalDate.valueOf(),\n                to: departureDate.valueOf(),\n                propertyId: selectedProperty.id\n            }\n          })\n          if(result){\n\n            console.log(result);\n            refetch();\n            setShow(true)\n            setIsActive(true)\n          }  \n      }\n    }\n\n    const closeDialog = () => {\n        setShow(false)\n    }\n\n    \n    return (\n        <div style={{position: \"sticky\", top: 0, zIndex: 2}}>\n              <MyBookingArea elevation={4}>        \n                <BasicContentBox>\n                  <div style={{marginBottom: \"8px\"}}>\n                  <Typography variant=\"h4\">\n                    Dein nächster Ausflug:\n                    </Typography>\n                    </div>\n                    <TravelDatesPicker propertyId={selectedProperty?.id} />\n                  \n                  <Grid container spacing={4} alignItems=\"flex-end\">\n                    <Grid item xs={12} sm>\n                      <PropertySelectionView />\n                    </Grid>\n                    <Grid item >\n\n\n                      <SuccessDialog \n                          open={show} \n                          handleClose={closeDialog}\n                          buttonText={\"Los\"} \n                          >\n                            <SuccessDialogContent\n                            title={\"Super\"}\n                            text={\"Dann kann es bald los gehen...\"}>\n                              {sunUmbrella}\n\n                            </SuccessDialogContent>\n                          </SuccessDialog>\n                      <ShowMapButton />\n                      <BookingButton \n                          aktiveBooking={isActive} \n                          disabled={selectedProperty && arrivalDate && departureDate? false : true} \n                          buttonPressedListener={bookingButtonPressed}/>\n                    </Grid>\n                  </Grid>\n                  </BasicContentBox>               \n              </MyBookingArea>             \n          </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}