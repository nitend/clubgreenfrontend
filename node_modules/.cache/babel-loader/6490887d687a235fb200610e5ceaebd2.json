{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/register/RegisterForm.tsx\";\nimport React from \"react\";\nimport { TextField, Button, Checkbox, Typography } from \"@material-ui/core\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\nexport const RegisterForm = props => {\n  const history = useHistory();\n  return React.createElement(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      acceptTerms: false\n    },\n    onSubmit: props.registerFormFinished,\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email().required(\"Required\"),\n      password: Yup.string().min(8).required(\"Required\"),\n      acceptTerms: Yup.bool().oneOf([true]).required()\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = props;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      error: errors.email && touched.email ? true : false,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.password && touched.password ? \"Gib eine gültige Email-Adresse an.\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      error: errors.password && touched.password ? true : false,\n      fullWidth: true,\n      id: \"password\",\n      label: \"Passwort\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.password && touched.password ? \"Dein Passwort muss mindestens 8 Zeichen lang sein.\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      style: {\n        fontSize: '14px',\n        margin: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: values.acceptTerms,\n      required: true,\n      id: \"acceptTerms\",\n      onChange: handleChange,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \" Bitte best\\xE4tige unsere \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Nutzungsbedingungen\"), \" und die \", React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Erkl\\xE4rung zum Datenschutz\"), \".\"), React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        margin: 'auto',\n        display: 'block',\n        marginTop: '24px'\n      },\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"anmelden\"));\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/pageframe/global/user/register/RegisterForm.tsx"],"names":["React","TextField","Button","Checkbox","Typography","Formik","Yup","useHistory","RegisterForm","props","history","maxWidth","margin","email","password","acceptTerms","registerFormFinished","object","shape","string","required","min","bool","oneOf","values","touched","errors","handleChange","handleBlur","handleSubmit","fontSize","display","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRegisterMutation } from \"../../../../../generated/graphql\";\n\nimport { TextField, Button, Checkbox, Typography} from \"@material-ui/core\";\nimport {Formik} from 'formik'\nimport * as Yup from 'yup'\nimport { useHistory } from \"react-router-dom\";\n\ninterface Props {\n    registerFormFinished: (values: {email: string, password: string}) => void\n}\n\nexport const RegisterForm: React.FC<Props> = (props) => {\n    const history = useHistory();\n\n\n    return (\n        <div style={{maxWidth: '400px', margin: 'auto'}}>\n            <Formik initialValues={{\n                email: \"\",\n                password: \"\",\n                acceptTerms: false\n            }} \n            onSubmit={props.registerFormFinished}\n            validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email()\n                  .required(\"Required\"),\n                  password: Yup.string().min(8).required(\"Required\"),\n                  acceptTerms: Yup.bool().oneOf([true]).required()\n              })} >\n                {props => {\n                const {\n                values,\n                touched,\n                errors,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                } = props;\n                return (\n                    <form onSubmit={handleSubmit}>\n                            <TextField \n                                error={errors.email && touched.email\n                                    ? true\n                                    : false\n                                }\n                                fullWidth={true}\n                                id=\"email\" \n                                label=\"Email\"\n                                value={values.email} \n                                onChange={handleChange} \n                                onBlur={handleBlur}\n                                helperText={errors.password && touched.password \n                                    ? \"Gib eine gültige Email-Adresse an.\"\n                                    : \"\"\n                                }\n                            />\n                            <TextField \n                                error={errors.password && touched.password\n                                    ? true\n                                    : false\n                                }\n                                fullWidth={true}\n                                id=\"password\" \n                                label=\"Passwort\"\n                                type=\"password\"\n                                value={values.password} \n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.password && touched.password \n                                    ? \"Dein Passwort muss mindestens 8 Zeichen lang sein.\"\n                                    : \"\"\n                                }\n                            />\n                            <Typography style={{fontSize: '14px',margin: '8px'}}>\n                            <Checkbox\n                                    checked={values.acceptTerms}\n                                    required={true}\n                                    id=\"acceptTerms\"\n                                    onChange={handleChange}\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                /> Bitte bestätige unsere <a href=\"/\">Nutzungsbedingungen</a> und die <a href=\"/\">Erklärung zum Datenschutz</a>.\n                            </Typography>\n\n                            <Button variant={\"outlined\"} style={{margin: 'auto', display: 'block', marginTop: '24px'}} type=\"submit\">anmelden</Button>                          \n                    </form>);\n            }}\n            </Formik>\n            </div>)\n};"]},"metadata":{},"sourceType":"module"}