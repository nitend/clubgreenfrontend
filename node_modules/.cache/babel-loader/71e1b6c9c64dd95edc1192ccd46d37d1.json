{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/Login.tsx\";\nimport React, { useState } from \"react\";\nimport { useLoginMutation, MeDocument } from \"../generated/graphql\";\nimport { setAccessToken } from \"../accessToken\";\nimport { Container, TextField, Button } from \"@material-ui/core\";\nexport const Login = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [responseValues, setResponseValue] = useState(\"\");\n  const [Login, {\n    error,\n    loading,\n    data\n  }] = useLoginMutation();\n  return React.createElement(Container, {\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      try {\n        const response = await Login({\n          variables: {\n            email,\n            password\n          },\n          update: (store, {\n            data\n          }) => {\n            if (!data) {\n              return null;\n            }\n\n            store.writeQuery({\n              query: MeDocument,\n              data: {\n                me: data.login.user\n              }\n            });\n          }\n        });\n\n        if (response && response.data) {\n          setAccessToken(response.data.login.accessToken);\n        } // history.push('/')\n\n\n        console.log(response);\n      } catch (err) {\n        setResponseValue(error === null || error === void 0 ? void 0 : error.message.toString);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, responseValues), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login\"))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/Login.tsx"],"names":["React","useState","useLoginMutation","MeDocument","setAccessToken","Container","TextField","Button","Login","history","email","setEmail","password","setPassword","responseValues","setResponseValue","error","loading","data","e","preventDefault","response","variables","update","store","writeQuery","query","me","login","user","accessToken","console","log","err","message","toString","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAAsD,sBAAtD;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,mBAA7C;AAGA,OAAO,MAAMC,KAAoC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC/D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,cAAD,EAAiBC,gBAAjB,IAAqCd,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACO,KAAD,EAAQ;AAACQ,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAR,IAAmChB,gBAAgB,EAAzD;AAGA,SACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAE,MAAMiB,CAAN,IAAW;AACvBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAC;AACzBc,UAAAA,SAAS,EAAE;AACPZ,YAAAA,KADO;AACAE,YAAAA;AADA,WADc;AAIzBW,UAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAACN,YAAAA;AAAD,WAAR,KAAmB;AACvB,gBAAG,CAACA,IAAJ,EAAS;AACL,qBAAO,IAAP;AACH;;AACDM,YAAAA,KAAK,CAACC,UAAN,CAA0B;AACtBC,cAAAA,KAAK,EAAEvB,UADe;AAGtBe,cAAAA,IAAI,EAAE;AACFS,gBAAAA,EAAE,EAAET,IAAI,CAACU,KAAL,CAAWC;AADb;AAHgB,aAA1B;AAOH;AAfwB,SAAD,CAA5B;;AAiBA,YAAGR,QAAQ,IAAIA,QAAQ,CAACH,IAAxB,EAA6B;AACzBd,UAAAA,cAAc,CAACiB,QAAQ,CAACH,IAAT,CAAcU,KAAd,CAAoBE,WAArB,CAAd;AACH,SApBF,CAsBC;;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AAEH,OAzBD,CAyBE,OAAMY,GAAN,EAAU;AACRlB,QAAAA,gBAAgB,CAACC,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEkB,OAAP,CAAeC,QAAhB,CAAhB;AACH;AAEJ,KAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,cADL,CAjCJ,EAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,gBADP;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,KAAK,EAAEJ,KAHX;AAII,IAAA,QAAQ,EAAES,CAAC,IAAI;AACXR,MAAAA,QAAQ,CAACQ,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAR;AACC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApCJ,EA+CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,gBADP;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAEzB,QAJX;AAKI,IAAA,QAAQ,EAAEO,CAAC,IAAI;AACXN,MAAAA,WAAW,CAACM,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAX;AACC,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA/CJ,EA2DI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3DJ,CADJ,CADA,CADJ;AAmEH,CA1EM","sourcesContent":["import React, {useState} from \"react\";\nimport { useLoginMutation, MeDocument, MeQuery } from \"../generated/graphql\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { setAccessToken } from \"../accessToken\";\nimport { Container, TextField, Button } from \"@material-ui/core\";\n\n\nexport const Login: React.FC<RouteComponentProps> = ({history}) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [responseValues, setResponseValue] = useState(\"\");\n    const [Login, {error, loading, data,}] = useLoginMutation()\n\n\n    return (\n        <Container maxWidth=\"xs\">\n        <div>\n            <form onSubmit={async e => {\n                e.preventDefault()\n                \n                try{\n                    const response = await Login({\n                        variables: {\n                            email, password\n                        },\n                        update: (store, {data}) => {\n                            if(!data){\n                                return null;\n                            }\n                            store.writeQuery<MeQuery>({\n                                query: MeDocument,\n\n                                data: {\n                                    me: data.login.user\n                                }\n                            })  \n                        }\n                    })\n                    if(response && response.data){\n                        setAccessToken(response.data.login.accessToken)\n                    }\n    \n                    // history.push('/')\n                    console.log(response)\n\n                } catch(err){\n                    setResponseValue(error?.message.toString);\n                }  \n                \n            }} >\n                <div>\n                    {responseValues}\n                </div>\n                <div>\n                    <TextField \n                        id=\"standard-basic\" \n                        label=\"Email\"\n                        value={email} \n                        onChange={e => {\n                            setEmail(e.target.value)\n                            }\n                        } \n                    />\n                </div>\n                <div>\n                    <TextField \n                        id=\"standard-basic\" \n                        label=\"Password\"\n                        type=\"password\"\n                        value={password} \n                        onChange={e => {\n                            setPassword(e.target.value)\n                            }\n                        } \n                    />\n                </div>\n                <Button type=\"submit\">Login</Button>\n            </form>\n        </div>\n        </Container>\n    )\n};"]},"metadata":{},"sourceType":"module"}