{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/form/Editor.tsx\";\nimport React from 'react';\nimport { EditorForm } from './EditorForm';\nimport { Container } from '@material-ui/core';\nimport { PictureUpload } from '../imagehandler/PictureUpload';\nimport { ImageList } from '../imagehandler/ImageList';\nexport const Editor = ({\n  entity,\n  entityId,\n  imageuploadurl,\n  store,\n  children\n}) => {\n  function onImageDelete(imageUrl) {\n    console.log(\"try to delete\");\n    const newEntity = entity;\n    const index = entity.images.indexOf(imageUrl);\n\n    if (index >= 0) {\n      newEntity.images.splice(index, 1);\n      console.log(\"delete \" + index + \" \" + newEntity);\n      store(newEntity);\n    }\n  }\n\n  const imagelist = () => {\n    if (entity.images) {\n      return React.createElement(ImageList, {\n        imageUrlApends: entity.images,\n        onDeleteHandler: onImageDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: \"16px\",\n      marginBottom: \"16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, imagelist(), React.createElement(PictureUpload, {\n    url: imageuploadurl,\n    propertyId: entityId,\n    onStore: () => {\n      store(entity);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), children), React.createElement(EditorForm, {\n    values: entity,\n    onSubmit: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/form/Editor.tsx"],"names":["React","EditorForm","Container","PictureUpload","ImageList","Editor","entity","entityId","imageuploadurl","store","children","onImageDelete","imageUrl","console","log","newEntity","index","images","indexOf","splice","imagelist","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AAWA,OAAO,MAAMC,MAAuB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,cAAnB;AAAmCC,EAAAA,KAAnC;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAE5F,WAASC,aAAT,CAAwBC,QAAxB,EAA0C;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,SAAS,GAAGT,MAAlB;AACA,UAAMU,KAAa,GAAGV,MAAM,CAACW,MAAP,CAAcC,OAAd,CAAsBN,QAAtB,CAAtB;;AACA,QAAGI,KAAK,IAAI,CAAZ,EAAc;AACVD,MAAAA,SAAS,CAACE,MAAV,CAAiBE,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYE,KAAZ,GAAoB,GAApB,GAA0BD,SAAtC;AACAN,MAAAA,KAAK,CAACM,SAAD,CAAL;AACH;AACJ;;AAED,QAAMK,SAAS,GAAG,MAAK;AACnB,QAAGd,MAAM,CAACW,MAAV,EAAiB;AACb,aAAO,oBAAC,SAAD;AAAW,QAAA,cAAc,EAAEX,MAAM,CAACW,MAAlC;AAA0C,QAAA,eAAe,EAAEN,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAJD;;AAOA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAACU,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,YAAY,EAAE;AAAlC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,EADd,EAEI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEZ,cAApB;AAAoC,IAAA,UAAU,EAAED,QAAhD;AAA0D,IAAA,OAAO,EAAE,MAAM;AAACE,MAAAA,KAAK,CAACH,MAAD,CAAL;AAAc,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKI,QAHL,CADJ,EAMI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEJ,MAApB;AAA4B,IAAA,QAAQ,EAAEG,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAaH,CAjCM","sourcesContent":["import React from 'react'\nimport { EditorForm } from './EditorForm'\nimport { Container } from '@material-ui/core'\nimport { PictureUpload } from '../imagehandler/PictureUpload'\nimport { ImageList } from '../imagehandler/ImageList'\n\n\n\ninterface Props {\n    entity: any\n    entityId: number\n    imageuploadurl: string\n    store: (entity: any) => void\n}\n\nexport const Editor: React.FC<Props> = ({entity, entityId, imageuploadurl, store, children}) => {\n\n    function onImageDelete (imageUrl: string) {\n        console.log(\"try to delete\")\n        const newEntity = entity;\n        const index: number = entity.images.indexOf(imageUrl);\n        if(index >= 0){\n            newEntity.images.splice(index, 1);\n            console.log(\"delete \" + index + \" \" + newEntity)\n            store(newEntity); \n        }\n    }\n\n    const imagelist = () =>{\n        if(entity.images){\n            return <ImageList imageUrlApends={entity.images} onDeleteHandler={onImageDelete}/>\n        }\n    } \n    \n\n    return(\n        <Container>\n            <div style={{marginTop: \"16px\", marginBottom: \"16px\"}}>\n                {imagelist()}\n                <PictureUpload url={imageuploadurl} propertyId={entityId} onStore={() => {store(entity)}}/>     \n                {children}\n            </div>\n            <EditorForm values={entity} onSubmit={store}/>\n        </Container>\n    )\n\n\n\n}"]},"metadata":{},"sourceType":"module"}