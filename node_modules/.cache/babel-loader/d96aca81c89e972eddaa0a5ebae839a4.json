{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useUpdateProductMutation,useCreateProductQuery}from'../../../generated/graphql';import{Editor}from'../form/Editor';import{MessageView}from'../../pageframe/global/Messages/MessageView';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{formatProduct}from'./ProductObject';export var EditNewProperty=function EditNewProperty(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMessage=_useState2[0],setshowMessage=_useState2[1];var _useCreateProductQuer=useCreateProductQuery(),data=_useCreateProductQuer.data,error=_useCreateProductQuer.error;var _useUpdateProductMuta=useUpdateProductMutation(),_useUpdateProductMuta2=_slicedToArray(_useUpdateProductMuta,1),updateProduct=_useUpdateProductMuta2[0];function onSubmit(_x){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return updateProduct({variables:{product:formatProduct(values)}});case 2:result=_context.sent;if(result){setshowMessage(true);// history.push(\"/admin#/properties\")\n}case 4:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}if(data&&data.getNewProduct){var product=data.getNewProduct;return React.createElement(Editor,{entity:product,store:onSubmit,entityId:product.id,imageuploadurl:\"http://localhost:4000/upload/property/image\"},React.createElement(MessageView,{severity:\"success\",message:\"Die Daten wurden gespeichert\",show:showMessage}));}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}return React.createElement(LoadingAnimation,{message:\"Daten werden geladen ...\"});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/products/EditNewProperty.tsx"],"names":["React","useState","useUpdateProductMutation","useCreateProductQuery","Editor","MessageView","LoadingAnimation","ErrorMessage","formatProduct","EditNewProperty","props","showMessage","setshowMessage","data","error","updateProduct","onSubmit","values","variables","product","result","getNewProduct","id"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAsCC,wBAAtC,CAAgEC,qBAAhE,KAA4F,4BAA5F,CAEA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,aAAT,KAA0C,iBAA1C,CAOA,MAAO,IAAMC,CAAAA,eAAgC,CAAG,QAAnCA,CAAAA,eAAmC,CAACC,KAAD,CAAW,eAEjBT,QAAQ,CAAC,KAAD,CAFS,wCAEhDU,WAFgD,eAEnCC,cAFmC,yCAIjCT,qBAAqB,EAJY,CAIhDU,IAJgD,uBAIhDA,IAJgD,CAI1CC,KAJ0C,uBAI1CA,KAJ0C,2BAO/BZ,wBAAwB,EAPO,gEAOhDa,aAPgD,mCASxCC,CAAAA,QATwC,oIASvD,iBAAwBC,MAAxB,mJACuBF,CAAAA,aAAa,CAAC,CAC7BG,SAAS,CAAE,CACPC,OAAO,CAAEX,aAAa,CAACS,MAAD,CADf,CADkB,CAAD,CADpC,QACQG,MADR,eAMI,GAAGA,MAAH,CAAU,CACNR,cAAc,CAAC,IAAD,CAAd,CACA;AACH,CATL,sDATuD,2CAsBvD,GAAGC,IAAI,EAAIA,IAAI,CAACQ,aAAhB,CAA+B,CAC3B,GAAMF,CAAAA,OAAO,CAAGN,IAAI,CAACQ,aAArB,CACA,MACI,qBAAC,MAAD,EACI,MAAM,CAAEF,OADZ,CAEI,KAAK,CAAEH,QAFX,CAGI,QAAQ,CAAEG,OAAO,CAACG,EAHtB,CAII,cAAc,CAAE,6CAJpB,EAKI,oBAAC,WAAD,EAAa,QAAQ,CAAE,SAAvB,CAAkC,OAAO,CAAE,8BAA3C,CAA2E,IAAI,CAAEX,WAAjF,EALJ,CADJ,CASH,CAGD,GAAGG,KAAH,CAAS,CACL,MAAQ,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EAAR,CACH,CAED,MAAQ,qBAAC,gBAAD,EAAkB,OAAO,CAAE,0BAA3B,EAAR,CACH,CAzCM","sourcesContent":["import React, { useState } from 'react'\nimport { useGetProductQuery, Product, useUpdateProductMutation, useCreateProductQuery} from '../../../generated/graphql'\nimport { useParams } from 'react-router-dom';\nimport { Editor } from '../form/Editor';\nimport { MessageView } from '../../pageframe/global/Messages/MessageView';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { formatProduct, newProduct } from './ProductObject';\n\n\ninterface Props {\n    \n}\n\nexport const EditNewProperty: React.FC<Props> = (props) => {\n\n    const [showMessage, setshowMessage] = useState(false);\n  \n    const {data, error} = useCreateProductQuery();\n    \n    \n    const [updateProduct] = useUpdateProductMutation();\n\n    async function onSubmit(values: Product) {     \n        var result = await updateProduct({\n            variables: {\n                product: formatProduct(values)\n            }\n        });\n        if(result){\n            setshowMessage(true)\n            // history.push(\"/admin#/properties\")\n        }\n    }\n\n    \n    if(data && data.getNewProduct) {\n        const product = data.getNewProduct;     \n        return(\n            <Editor \n                entity={product} \n                store={onSubmit} \n                entityId={product.id}\n                imageuploadurl={\"http://localhost:4000/upload/property/image\"}>     \n                <MessageView severity={\"success\"} message={\"Die Daten wurden gespeichert\"} show={showMessage} />\n            </Editor>\n        )   \n    }\n\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>) \n    }\n   \n    return (<LoadingAnimation message={\"Daten werden geladen ...\"}/>)\n}"]},"metadata":{},"sourceType":"module"}