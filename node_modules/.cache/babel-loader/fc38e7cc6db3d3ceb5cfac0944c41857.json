{"ast":null,"code":"import _regeneratorRuntime from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useSavePropertyMutation,useGetPropertyQuery}from'../../../generated/graphql';import{useParams}from'react-router-dom';import{Editor}from'../form/Editor';import{MessageView}from'../../pageframe/global/Messages/MessageView';import{LoadingAnimation}from'../../pageframe/global/Messages/LoadingAnimation';import{ErrorMessage}from'../../pageframe/global/Messages/ErrorMessage';import{formatProperty,newProperty}from'./PropertyObject';export var PropertyEditor=function PropertyEditor(props){var _useParams=useParams(),propertyId=_useParams.propertyId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showMessage=_useState2[0],setshowMessage=_useState2[1];var _useGetPropertyQuery=useGetPropertyQuery({variables:{id:propertyId?propertyId:\"0\"}}),data=_useGetPropertyQuery.data,error=_useGetPropertyQuery.error;var _useSavePropertyMutat=useSavePropertyMutation(),_useSavePropertyMutat2=_slicedToArray(_useSavePropertyMutat,1),saveProperty=_useSavePropertyMutat2[0];function onSubmit(_x){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return saveProperty({variables:{property:formatProperty(values)}});case 2:result=_context.sent;if(result){setshowMessage(true);// history.push(\"/admin#/properties\")\n}case 4:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}if(data&&data.getProperty||propertyId==\"0\"){var property=newProperty;if(data===null||data===void 0?void 0:data.getProperty){property=data.getProperty;}return React.createElement(Editor,{entity:property,store:onSubmit,entityId:property.id,imageuploadurl:\"http://localhost:4000/upload/property/image\"},React.createElement(MessageView,{severity:\"success\",message:\"Die Daten wurden gespeichert\",show:showMessage}));}if(error){return React.createElement(ErrorMessage,{error:error,show:true});}return React.createElement(LoadingAnimation,{message:\"Daten werden geladen ...\"});};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/admin/properties/PropertyEditor.tsx"],"names":["React","useState","useSavePropertyMutation","useGetPropertyQuery","useParams","Editor","MessageView","LoadingAnimation","ErrorMessage","formatProperty","newProperty","PropertyEditor","props","propertyId","showMessage","setshowMessage","variables","id","data","error","saveProperty","onSubmit","values","property","result","getProperty"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAmBC,uBAAnB,CAA4CC,mBAA5C,KAAuE,4BAAvE,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,gBAAT,KAAiC,kDAAjC,CACA,OAASC,YAAT,KAA6B,8CAA7B,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,kBAA5C,CAOA,MAAO,IAAMC,CAAAA,cAA+B,CAAG,QAAlCA,CAAAA,cAAkC,CAACC,KAAD,CAAW,gBAE/BR,SAAS,EAFsB,CAE9CS,UAF8C,YAE9CA,UAF8C,eAIhBZ,QAAQ,CAAC,KAAD,CAJQ,wCAI/Ca,WAJ+C,eAIlCC,cAJkC,wCAKhCZ,mBAAmB,CAAC,CACtCa,SAAS,CAAE,CACPC,EAAE,CAAEJ,UAAU,CAAGA,UAAH,CAAgB,GADvB,CAD2B,CAAD,CALa,CAK/CK,IAL+C,sBAK/CA,IAL+C,CAKzCC,KALyC,sBAKzCA,KALyC,2BAW/BjB,uBAAuB,EAXQ,gEAW/CkB,YAX+C,mCAavCC,CAAAA,QAbuC,oIAatD,iBAAwBC,MAAxB,mJACuBF,CAAAA,YAAY,CAAC,CAC5BJ,SAAS,CAAE,CACPO,QAAQ,CAAEd,cAAc,CAACa,MAAD,CADjB,CADiB,CAAD,CADnC,QACQE,MADR,eAMI,GAAGA,MAAH,CAAU,CACNT,cAAc,CAAC,IAAD,CAAd,CACA;AACH,CATL,sDAbsD,2CA0BtD,GAAIG,IAAI,EAAIA,IAAI,CAACO,WAAd,EAA+BZ,UAAU,EAAI,GAAhD,CAAsD,CAClD,GAAIU,CAAAA,QAAQ,CAAGb,WAAf,CACA,GAAGQ,IAAH,SAAGA,IAAH,iBAAGA,IAAI,CAAEO,WAAT,CAAqB,CACjBF,QAAQ,CAAGL,IAAI,CAACO,WAAhB,CACH,CAED,MACI,qBAAC,MAAD,EACI,MAAM,CAAEF,QADZ,CAEI,KAAK,CAAEF,QAFX,CAGI,QAAQ,CAAEE,QAAQ,CAACN,EAHvB,CAII,cAAc,CAAE,6CAJpB,EAKI,oBAAC,WAAD,EAAa,QAAQ,CAAE,SAAvB,CAAkC,OAAO,CAAE,8BAA3C,CAA2E,IAAI,CAAEH,WAAjF,EALJ,CADJ,CASH,CAGD,GAAGK,KAAH,CAAS,CACL,MAAQ,qBAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,CAA4B,IAAI,CAAE,IAAlC,EAAR,CACH,CAED,MAAQ,qBAAC,gBAAD,EAAkB,OAAO,CAAE,0BAA3B,EAAR,CACH,CAjDM","sourcesContent":["import React, { useState } from 'react'\nimport { Property, useSavePropertyMutation, useGetPropertyQuery } from '../../../generated/graphql'\nimport { useParams } from 'react-router-dom';\nimport { Editor } from '../form/Editor';\nimport { MessageView } from '../../pageframe/global/Messages/MessageView';\nimport { LoadingAnimation } from '../../pageframe/global/Messages/LoadingAnimation';\nimport { ErrorMessage } from '../../pageframe/global/Messages/ErrorMessage';\nimport { formatProperty, newProperty } from './PropertyObject';\n\n\ninterface Props {\n    \n}\n\nexport const PropertyEditor: React.FC<Props> = (props) => {\n\n    const { propertyId } = useParams()\n\n    const [showMessage, setshowMessage] = useState(false);\n    const {data, error} = useGetPropertyQuery({\n        variables: {\n            id: propertyId ? propertyId : \"0\"\n        }\n    });\n    \n    const [saveProperty] = useSavePropertyMutation();\n\n    async function onSubmit(values: Property) {     \n        var result = await saveProperty({\n            variables: {\n                property: formatProperty(values)\n            }\n        });\n        if(result){\n            setshowMessage(true)\n            // history.push(\"/admin#/properties\")\n        }\n    }\n\n    \n    if((data && data.getProperty) || (propertyId == \"0\")) {\n        var property = newProperty;\n        if(data?.getProperty){\n            property = data.getProperty;\n        }\n        \n        return(\n            <Editor \n                entity={property} \n                store={onSubmit} \n                entityId={property.id}\n                imageuploadurl={\"http://localhost:4000/upload/property/image\"}>     \n                <MessageView severity={\"success\"} message={\"Die Daten wurden gespeichert\"} show={showMessage} />\n            </Editor>\n        )   \n    }\n\n\n    if(error){\n        return (<ErrorMessage error={error} show={true}/>) \n    }\n   \n    return (<LoadingAnimation message={\"Daten werden geladen ...\"}/>)\n}"]},"metadata":{},"sourceType":"module"}