{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/MyBooking.tsx\";\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Grid, Button } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { useMyBookingQuery } from '../../generated/graphql';\nexport const MyBooking = Props => {\n  // const [propTitle, setPropTitle] = useState(undefined)\n  const d = new Date(Date.now());\n  const [selectedStartDate, setSelectedStartDate] = React.useState(d);\n  const [selectedEndDate, setSelectedEndDate] = React.useState(d);\n\n  const date = async () => {\n    const {\n      data\n    } = useMyBookingQuery();\n\n    if (data && (data === null || data === void 0 ? void 0 : data.myBooking)) {\n      console.log(data.myBooking);\n    }\n  }; // setPropTitle(Props.property.title);\n\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n  };\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n  };\n\n  const saveBooking = () => {\n    Props.listener(selectedStartDate === null || selectedStartDate === void 0 ? void 0 : selectedStartDate.getTime(), selectedStartDate === null || selectedStartDate === void 0 ? void 0 : selectedStartDate.getTime());\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd.MM.yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Ankunft\",\n    value: selectedStartDate,\n    onChange: handleStartDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Abreise\",\n    format: \"dd.MM.yyyy\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: saveBooking,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Reservieren\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, Props.property.title));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/MyBooking.tsx"],"names":["React","DateFnsUtils","Grid","Button","MuiPickersUtilsProvider","KeyboardDatePicker","useMyBookingQuery","MyBooking","Props","d","Date","now","selectedStartDate","setSelectedStartDate","useState","selectedEndDate","setSelectedEndDate","date","data","myBooking","console","log","handleStartDateChange","handleEndDateChange","saveBooking","listener","getTime","property","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGS,sBAHT;AAIA,SAASC,iBAAT,QAAkC,yBAAlC;AASA,OAAO,MAAMC,SAA2B,GAAIC,KAAD,IAAW;AAEpD;AAGE,QAAMC,CAAC,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAV;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cb,KAAK,CAACc,QAAN,CAA4BL,CAA5B,CAAlD;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwChB,KAAK,CAACc,QAAN,CAA4BL,CAA5B,CAA9C;;AAGA,QAAMQ,IAAI,GAAG,YAAW;AACrB,UAAM;AAACC,MAAAA;AAAD,QAASZ,iBAAiB,EAAhC;;AACA,QAAGY,IAAI,KAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,SAAV,CAAP,EAA2B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,SAAjB;AACD;AACF,GALD,CAVkD,CAiBhD;;;AAEF,QAAMG,qBAAqB,GAAIL,IAAD,IAAuB;AACjDJ,IAAAA,oBAAoB,CAACI,IAAD,CAApB;AACD,GAFH;;AAIE,QAAMM,mBAAmB,GAAIN,IAAD,IAAuB;AACjDD,IAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACtBhB,IAAAA,KAAK,CAACiB,QAAN,CAAeb,iBAAf,aAAeA,iBAAf,uBAAeA,iBAAiB,CAAEc,OAAnB,EAAf,EAA6Cd,iBAA7C,aAA6CA,iBAA7C,uBAA6CA,iBAAiB,CAAEc,OAAnB,EAA7C;AACH,GAFD;;AAIF,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEzB,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,kBAAD;AACA,IAAA,cAAc,MADd;AAEA,IAAA,OAAO,EAAC,QAFR;AAGA,IAAA,MAAM,EAAC,YAHP;AAIA,IAAA,MAAM,EAAC,QAJP;AAKA,IAAA,EAAE,EAAC,oBALH;AAMA,IAAA,KAAK,EAAC,SANN;AAOA,IAAA,KAAK,EAAEW,iBAPP;AAQA,IAAA,QAAQ,EAAEU,qBARV;AASA,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,oBAAC,kBAAD;AACA,IAAA,MAAM,EAAC,QADP;AAEA,IAAA,EAAE,EAAC,oBAFH;AAGA,IAAA,KAAK,EAAC,SAHN;AAIA,IAAA,MAAM,EAAC,YAJP;AAKA,IAAA,KAAK,EAAEP,eALP;AAMA,IAAA,QAAQ,EAAEQ,mBANV;AAOA,IAAA,mBAAmB,EAAE;AACjB,oBAAc;AADG,KAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAyBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBJ,CADD,CADH,EAgCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACmB,QAAN,CAAeC,KADlB,CAhCJ,CADJ;AAuCH,CAtEM","sourcesContent":["import React from 'react'\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Grid, Button } from '@material-ui/core';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n  } from '@material-ui/pickers';\nimport { useMyBookingQuery } from '../../generated/graphql';\n\ninterface Props {\n    mybooking: any\n    listener: any\n    property: any\n}\n\n\nexport const MyBooking:  React.FC<Props> = (Props) => {\n\n  // const [propTitle, setPropTitle] = useState(undefined)\n\n\n    const d = new Date(Date.now());\n    const [selectedStartDate, setSelectedStartDate] = React.useState<Date | null>(d);\n    const [selectedEndDate, setSelectedEndDate] = React.useState<Date | null>(d);\n  \n\n    const date = async () =>{\n       const {data} = useMyBookingQuery();\n       if(data && data?.myBooking){\n        console.log(data.myBooking)   \n      }\n    }\n    \n      // setPropTitle(Props.property.title);\n        \n    const handleStartDateChange = (date: Date | null) => {\n        setSelectedStartDate(date);\n      };\n\n      const handleEndDateChange = (date: Date | null) => {\n        setSelectedEndDate(date);\n      };\n\n      const saveBooking = () => {\n          Props.listener(selectedStartDate?.getTime(), selectedStartDate?.getTime())\n      } \n    \n    return (\n        <div>\n           <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container>\n                <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd.MM.yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Ankunft\"\n                value={selectedStartDate}\n                onChange={handleStartDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n                />\n                <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Abreise\"\n                format=\"dd.MM.yyyy\"\n                value={selectedEndDate}\n                onChange={handleEndDateChange}\n                KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                }}\n                />\n                <Button onClick={saveBooking}>\n                    Reservieren\n                </Button>\n            </Grid>\n            </MuiPickersUtilsProvider>\n            <div>\n              {Props.property.title}\n              </div>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}