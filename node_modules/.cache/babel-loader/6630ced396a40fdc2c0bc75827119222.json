{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx\";\nimport React, { useState } from 'react';\nimport { useMyBookingQuery } from '../../generated/graphql';\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\nexport const BookingRouter = () => {\n  const [selectedProp, setSelectedProp] = useState(\"\"); // state implementing\n\n  const {\n    data,\n    loading,\n    error\n  } = useMyBookingQuery();\n\n  const bookPropListener = booking => {\n    console.log(booking);\n  };\n\n  const selectPropListener = property => {\n    setSelectedProp(property);\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"loading ....\");\n  }\n\n  if (error) {\n    console.log(error);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"err\");\n  }\n\n  if (!data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"no data\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(MyBooking, {\n    listener: bookPropListener,\n    mybooking: data,\n    property: selectedProp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(PropertyList, {\n    selectPropListener: selectPropListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/BookingRouter.tsx"],"names":["React","useState","useMyBookingQuery","MyBooking","PropertyList","BookingRouter","selectedProp","setSelectedProp","data","loading","error","bookPropListener","booking","console","log","selectPropListener","property"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAOA,OAAO,MAAMC,aAA+B,GAAG,MAAM;AAEjD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD,CAFiD,CAIrD;;AAEI,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBR,iBAAiB,EAAhD;;AAEA,QAAMS,gBAAgB,GAAIC,OAAD,IAAiB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,GAFD;;AAIA,QAAMG,kBAAkB,GAAIC,QAAD,IAAkB;AACzCT,IAAAA,eAAe,CAACS,QAAD,CAAf;AACH,GAFD;;AAKA,MAAGP,OAAH,EAAW;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAGH;;AAED,MAAGC,KAAH,EAAS;AACLG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAG,CAACF,IAAJ,EAAS;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAGH;;AAID,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEG,gBAArB;AAAuC,IAAA,SAAS,EAAEH,IAAlD;AAAwD,IAAA,QAAQ,EAAEF,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,kBAAkB,EAAES,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH,CA3CM","sourcesContent":["import React, { useState } from 'react'\nimport { useMyBookingQuery } from '../../generated/graphql'\nimport { MyBooking } from './MyBooking';\nimport { PropertyList } from './PropertyList';\n\ninterface Props {\n    \n}\n\n\nexport const BookingRouter:  React.FC<Props> = () => {\n\n    const [selectedProp, setSelectedProp] = useState(\"\")\n\n// state implementing\n\n    const {data, loading, error} = useMyBookingQuery()\n    \n    const bookPropListener = (booking: any) =>{\n        console.log(booking)\n    }\n\n    const selectPropListener = (property: any) =>{\n        setSelectedProp(property);\n    }\n\n\n    if(loading){\n        return <div>\n            loading ....\n        </div>\n    }\n\n    if(error){\n        console.log(error)\n        return <div>err</div>\n    }\n\n    if(!data){\n        return <div>\n            no data\n        </div>\n    }\n\n\n    \n    return (\n        <div>\n            <MyBooking listener={bookPropListener} mybooking={data} property={selectedProp}></MyBooking>\n            <PropertyList selectPropListener={selectPropListener}></PropertyList>\n        </div>\n    )\n    \n}\n"]},"metadata":{},"sourceType":"module"}