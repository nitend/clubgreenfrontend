{"ast":null,"code":"var _jsxFileName = \"/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Grid } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\nexport const DateSelector = Props => {\n  const [arrival, setArrival] = useState(Props.dates.arrival);\n  const [departure, setDeparture] = useState(Props.dates.arrival); // const [dates, setDates] = useState({arrival: null, departure: null});\n\n  const setDateOfArrivial = date => {\n    const arrivalDate = new Date(date);\n    setArrival(arrivalDate.getTime());\n    Props.dateChangeListener({\n      arrival: arrival,\n      departure: departure\n    });\n  };\n\n  const setDateOfDeparture = date => {\n    const departureDate = new Date(date);\n    setDeparture(departureDate.getTime());\n    Props.dateChangeListener({\n      arrival: arrival,\n      departure: departure\n    });\n  };\n\n  const onChangeListener = dates => {\n    console.log(dates);\n  };\n\n  var focusedInput = null;\n\n  const onFocusChangedListener = input => {\n    focusedInput = input;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DateRangePicker, {\n    startDate: arrival // momentPropTypes.momentObj or null,\n    ,\n    startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n    ,\n    endDate: departure // momentPropTypes.momentObj or null,\n    ,\n    endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n    ,\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => onChangeListener({\n      startDate,\n      endDate\n    }) // PropTypes.func.isRequired,\n    ,\n    focusedInput: focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n    ,\n    onFocusChange: focusedInput => onFocusChangedListener({\n      focusedInput\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"dd.MM.yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Ankunft\",\n    value: arrival,\n    onChange: setDateOfArrivial,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Abreise\",\n    format: \"dd.MM.yyyy\",\n    value: departure,\n    onChange: setDateOfDeparture,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/SvenL/Projekte/node_projects/clubgruen/frontend/src/pages/booking/myBooking/DateSelector.tsx"],"names":["MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Grid","React","useState","DateRangePicker","DateSelector","Props","arrival","setArrival","dates","departure","setDeparture","setDateOfArrivial","date","arrivalDate","Date","getTime","dateChangeListener","setDateOfDeparture","departureDate","onChangeListener","console","log","focusedInput","onFocusChangedListener","input","startDate","endDate"],"mappings":"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","sourcesContent":["import { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport { Grid } from \"@material-ui/core\"\nimport React, { useState } from \"react\"\nimport \"react-dates/initialize\"\nimport \"react-dates/lib/css/_datepicker.css\"\nimport {DateRangePicker} from \"react-dates\" \n\n\ninterface Props {\n    dates: any\n    dateChangeListener: any\n}\n\n\nexport const DateSelector:  React.FC<Props> = (Props) => {\n\n    const [arrival, setArrival] = useState(Props.dates.arrival);\n    const [departure, setDeparture] = useState(Props.dates.arrival)\n    // const [dates, setDates] = useState({arrival: null, departure: null});\n\n    const setDateOfArrivial = (date: any) => {\n        const arrivalDate = new Date(date);\n        setArrival(arrivalDate.getTime())\n        Props.dateChangeListener({arrival: arrival, departure: departure});\n    }\n\n    const setDateOfDeparture = (date: any) => {\n        const departureDate = new Date(date);\n        setDeparture(departureDate.getTime())\n        Props.dateChangeListener({arrival: arrival, departure: departure});      \n    }\n\n    const onChangeListener = (dates: any) => {\n        console.log(dates);\n    }\n    var focusedInput = null;\n\n    const onFocusChangedListener = (input: any) => {\n        focusedInput = input;\n    }\n\n    return (\n        <div>\n            <DateRangePicker\n             startDate={arrival} // momentPropTypes.momentObj or null,\n             startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n             endDate={departure} // momentPropTypes.momentObj or null,\n             endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n             onDatesChange={({ startDate, endDate }) => onChangeListener({ startDate, endDate })} // PropTypes.func.isRequired,\n            focusedInput={focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n            onFocusChange={focusedInput => onFocusChangedListener({ focusedInput })}>\n\n            </DateRangePicker>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        format=\"dd.MM.yyyy\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Ankunft\"\n                        value={arrival}\n                        onChange={setDateOfArrivial}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                    />\n                </Grid>\n                <Grid item>\n                    <KeyboardDatePicker\n                        disableToolbar\n                        variant=\"inline\"\n                        margin=\"normal\"\n                        id=\"date-picker-inline\"\n                        label=\"Abreise\"\n                        format=\"dd.MM.yyyy\"\n                        value={departure}\n                        onChange={setDateOfDeparture}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}/>\n                </Grid>\n            </Grid>\n            </MuiPickersUtilsProvider> \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}